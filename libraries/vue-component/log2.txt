
> @coya/vue-component@ build /home/alex/RiderProjects/Coya/Coya/libraries/vue-component
> cross-env NODE_ENV=production vite build --debug

vite v2.5.0 building for production...
transforming...
[AsyncFunction: resolveId] vite/modulepreload-polyfill
[AsyncFunction: resolveId] /src/main.ts
[AsyncFunction: resolveId] virtual:generated-pages
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue-router
[AsyncFunction: resolveId] ./App.vue
[AsyncFunction: resolveId] ./styles/main.css
[AsyncFunction: resolveId] virtual:windi-base.css
[AsyncFunction: resolveId] virtual:windi-components.css
[AsyncFunction: resolveId] virtual:windi-utilities.css
[AsyncFunction: resolveId] /src/pages/index.vue
[AsyncFunction: resolveId] /src/pages/hi/[name].vue
[AsyncFunction: resolveId] /src/pages/[...all].vue
[AsyncFunction: resolveId] vite/preload-helper
[AsyncFunction: resolveId] @vue/runtime-dom
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/App.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/pages/index.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/pages/hi/[name].vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] /src/components/Select.vue
[AsyncFunction: resolveId] /src/components/Coya.vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] ./examples/1_simple
[AsyncFunction: resolveId] ./examples/2_simple
[AsyncFunction: resolveId] ./examples/2
[AsyncFunction: resolveId] ./examples/3
[AsyncFunction: resolveId] ./examples/4_simple_style
[AsyncFunction: resolveId] ./examples/4_simple_style_phase
[AsyncFunction: resolveId] ./examples/4_simple_style_phase2
[AsyncFunction: resolveId] ./examples/4_simple_style_phase3
[AsyncFunction: resolveId] ./examples/4_simple_style_phase4
[AsyncFunction: resolveId] ./examples/upswot
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Select.vue?vue&type=script&setup=emit&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Coya.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Coya.vue?vue&type=style&index=0&lang.css
[AsyncFunction: resolveId] @vue/runtime-core
[AsyncFunction: resolveId] @vue/shared
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] @vue/devtools-api
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue-router
[AsyncFunction: resolveId] virtual:vite-icons/carbon/campsite
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue-router
[AsyncFunction: resolveId] virtual:vite-icons/carbon/pedestrian
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] ./env
[AsyncFunction: resolveId] ./const
[AsyncFunction: resolveId] ./api
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] @headlessui/vue
[AsyncFunction: resolveId] /src/components/CoyaNode.vue
[AsyncFunction: resolveId] /src/components/Debug/PointPosition.vue
[AsyncFunction: resolveId] /src/components/Debug/NodeDetails.vue
[AsyncFunction: resolveId] /src/components/Debug/DefaultDebug.vue
[AsyncFunction: resolveId] /src/components/CoyaPhaseSelect.vue
[AsyncFunction: resolveId] /src/components/CoyaControlPanel.vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] @coya/core
[AsyncFunction: resolveId] ../logic/useNodeDetails
[AsyncFunction: resolveId] ../logic/useSvgMousePosition
[AsyncFunction: resolveId] ./smartphone.svg?raw
[AsyncFunction: resolveId] ./smartphone.svg?raw
[AsyncFunction: resolveId] ./smartphone.svg?raw
[AsyncFunction: resolveId] virtual:vite-icons/carbon/campsite
[AsyncFunction: resolveId] @coya/core
[AsyncFunction: resolveId] ./smartphone.svg?raw
[AsyncFunction: resolveId] ./computer.svg?raw
[AsyncFunction: resolveId] ./api
[AsyncFunction: resolveId] ./app
[AsyncFunction: resolveId] ./component
[AsyncFunction: resolveId] ./context
[AsyncFunction: resolveId] ./hooks
[AsyncFunction: resolveId] ./util
[AsyncFunction: resolveId] ./blackboard.svg?raw
[AsyncFunction: resolveId] ./smartphone.svg?raw
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaNode.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaNode.vue?vue&type=style&index=0&lang.css
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/PointPosition.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/PointPosition.vue?vue&type=style&index=0&scoped=true&lang.css
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/NodeDetails.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/NodeDetails.vue?vue&type=style&index=0&scoped=true&lang.css
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/DefaultDebug.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/DefaultDebug.vue?vue&type=style&index=0&scoped=true&lang.css
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaPhaseSelect.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaControlPanel.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaControlPanel.vue?vue&type=style&index=0&lang.css
[AsyncFunction: resolveId] @coya/core
[AsyncFunction: resolveId] ./assets/user.svg?raw
[AsyncFunction: resolveId] ./assets/bank.svg?raw
[AsyncFunction: resolveId] ./assets/xero.svg?raw
[AsyncFunction: resolveId] ./assets/sage.svg?raw
[AsyncFunction: resolveId] ./assets/worker.svg?raw
[AsyncFunction: resolveId] ./assets/upswot_admin.svg?raw
[AsyncFunction: resolveId] ./assets/storage.svg?raw
[AsyncFunction: resolveId] /src/components/Nodes/CoyaLineNode.vue
[AsyncFunction: resolveId] /src/components/Nodes/CoyaImageNode.vue
[AsyncFunction: resolveId] /src/components/Nodes/CoyaSvgNode.vue
[AsyncFunction: resolveId] /src/components/Nodes/CoyaSvgTagNode.vue
[AsyncFunction: resolveId] /src/components/Nodes/CoyaRectNode.vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] @coya/core
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] /src/components/Color/ColorPickerButton.vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] drauu
[AsyncFunction: resolveId] virtual:vite-icons/carbon/undo
[AsyncFunction: resolveId] virtual:vite-icons/carbon/redo
[AsyncFunction: resolveId] virtual:vite-icons/carbon/clean
[AsyncFunction: resolveId] virtual:vite-icons/entypo/brush
[AsyncFunction: resolveId] virtual:vite-icons/raphael/pensil
[AsyncFunction: resolveId] virtual:vite-icons/octicon/dash16
[AsyncFunction: resolveId] virtual:vite-icons/bi/arrow-up-right
[AsyncFunction: resolveId] virtual:vite-icons/gis/rectangle-o
[AsyncFunction: resolveId] virtual:vite-icons/mdi/ellipse-outline
[AsyncFunction: resolveId] virtual:vite-icons/radix-icons/border-dashed
[AsyncFunction: resolveId] virtual:vite-icons/ant-design/small-dash-outlined
module-> <ref *1> Module {
  graph: <ref *2> Graph {
    options: {
      acorn: [Object],
      acornInjectPlugins: [],
      context: 'undefined',
      experimentalCacheExpiry: 10,
      external: [Function (anonymous)],
      inlineDynamicImports: undefined,
      input: [Array],
      makeAbsoluteExternalsRelative: true,
      manualChunks: undefined,
      maxParallelFileReads: 20,
      moduleContext: [Function (anonymous)],
      onwarn: [Function (anonymous)],
      perf: false,
      plugins: [Array],
      preserveEntrySignatures: false,
      preserveModules: undefined,
      preserveSymlinks: false,
      shimMissingExports: false,
      strictDeprecations: false,
      treeshake: [Object]
    },
    entryModules: [],
    modulesById: Map(97) {
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/index.html' => [Module],
      'vite/modulepreload-polyfill' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/main.ts' => [Module],
      '/@vite-plugin-pages/generated-pages' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/vue@3.2.4/node_modules/vue/dist/vue.runtime.esm-bundler.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/vue-router@4.0.11_vue@3.2.4/node_modules/vue-router/dist/vue-router.esm-bundler.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/App.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/styles/main.css' => [Module],
      '/@windicss/windi-base.css' => [Module],
      '/@windicss/windi-components.css' => [Module],
      '/@windicss/windi-utilities.css' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/pages/index.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/pages/hi/[name].vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/pages/[...all].vue' => [Module],
      'vite/preload-helper' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+runtime-dom@3.2.4/node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/App.vue?vue&type=script&setup=true&lang.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/pages/index.vue?vue&type=script&setup=true&lang.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/pages/hi/[name].vue?vue&type=script&setup=true&lang.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Select.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Coya.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/1_simple.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/2_simple.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/2.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/3.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/4_simple_style.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/4_simple_style_phase.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/4_simple_style_phase2.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/4_simple_style_phase3.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/4_simple_style_phase4.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/upswot.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Select.vue?vue&type=script&setup=emit&lang.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Coya.vue?vue&type=script&setup=true&lang.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Coya.vue?vue&type=style&index=0&lang.css' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+runtime-core@3.2.4/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+shared@3.2.4/node_modules/@vue/shared/dist/shared.esm-bundler.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/index.js' => [Module],
      '@vite-icons/carbon/campsite' => [Module],
      '@vite-icons/carbon/pedestrian' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/env.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/const.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/index.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@headlessui+vue@1.4.1_vue@3.2.4/node_modules/@headlessui/vue/dist/headlessui.esm.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaNode.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/PointPosition.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/NodeDetails.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/DefaultDebug.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaPhaseSelect.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaControlPanel.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/core/dist/core.esm.js' => [Circular *1],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/logic/useNodeDetails.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/logic/useSvgMousePosition.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/smartphone.svg?raw' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/computer.svg?raw' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/api.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/app.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/component.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/context.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/hooks.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/util.js' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/blackboard.svg?raw' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaNode.vue?vue&type=script&setup=true&lang.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaNode.vue?vue&type=style&index=0&lang.css' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/PointPosition.vue?vue&type=script&setup=true&lang.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/PointPosition.vue?vue&type=style&index=0&scoped=true&lang.css' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/NodeDetails.vue?vue&type=script&setup=true&lang.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/NodeDetails.vue?vue&type=style&index=0&scoped=true&lang.css' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/DefaultDebug.vue?vue&type=script&setup=true&lang.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/DefaultDebug.vue?vue&type=style&index=0&scoped=true&lang.css' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaPhaseSelect.vue?vue&type=script&setup=true&lang.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaControlPanel.vue?vue&type=script&setup=true&lang.ts' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaControlPanel.vue?vue&type=style&index=0&lang.css' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/user.svg?raw' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/bank.svg?raw' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/xero.svg?raw' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/sage.svg?raw' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/worker.svg?raw' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/upswot_admin.svg?raw' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/storage.svg?raw' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaLineNode.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaImageNode.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaSvgNode.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaSvgTagNode.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaRectNode.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Color/ColorPickerButton.vue' => [Module],
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/drauu@0.1.0/node_modules/drauu/dist/index.mjs' => [Module],
      '@vite-icons/carbon/undo' => [Module],
      '@vite-icons/carbon/redo' => [Module],
      '@vite-icons/carbon/clean' => [Module],
      '@vite-icons/entypo/brush' => [Module],
      '@vite-icons/raphael/pensil' => [Module],
      '@vite-icons/octicon/dash16' => [Module],
      '@vite-icons/bi/arrow-up-right' => [Module],
      '@vite-icons/gis/rectangle-o' => [Module],
      '@vite-icons/mdi/ellipse-outline' => [Module],
      '@vite-icons/radix-icons/border-dashed' => [Module],
      '@vite-icons/ant-design/small-dash-outlined' => [Module]
    },
    needsTreeshakingPass: false,
    phase: 0,
    watchFiles: [Object: null prototype] {
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/index.html': true,
      'vite/modulepreload-polyfill': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/main.ts': true,
      '/@vite-plugin-pages/generated-pages': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/vue@3.2.4/node_modules/vue/dist/vue.runtime.esm-bundler.js': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/vue-router@4.0.11_vue@3.2.4/node_modules/vue-router/dist/vue-router.esm-bundler.js': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/App.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/styles/main.css': true,
      '/@windicss/windi-base.css': true,
      '/@windicss/windi-components.css': true,
      '/@windicss/windi-utilities.css': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/pages/index.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/pages/hi/[name].vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/pages/[...all].vue': true,
      'vite/preload-helper': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+runtime-dom@3.2.4/node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/App.vue?vue&type=script&setup=true&lang.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/pages/index.vue?vue&type=script&setup=true&lang.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/pages/hi/[name].vue?vue&type=script&setup=true&lang.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Select.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Coya.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/1_simple.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/2_simple.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/2.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/3.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/4_simple_style.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/4_simple_style_phase.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/4_simple_style_phase2.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/4_simple_style_phase3.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/4_simple_style_phase4.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/upswot.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Select.vue?vue&type=script&setup=emit&lang.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Coya.vue?vue&type=script&setup=true&lang.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Coya.vue?vue&type=style&index=0&lang.css': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+runtime-core@3.2.4/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+shared@3.2.4/node_modules/@vue/shared/dist/shared.esm-bundler.js': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/index.js': true,
      '@vite-icons/carbon/campsite': true,
      '@vite-icons/carbon/pedestrian': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/env.js': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/const.js': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/index.js': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@headlessui+vue@1.4.1_vue@3.2.4/node_modules/@headlessui/vue/dist/headlessui.esm.js': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaNode.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/PointPosition.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/NodeDetails.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/DefaultDebug.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaPhaseSelect.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaControlPanel.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/core/dist/core.esm.js': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/logic/useNodeDetails.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/logic/useSvgMousePosition.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/smartphone.svg?raw': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/computer.svg?raw': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/api.js': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/app.js': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/component.js': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/context.js': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/hooks.js': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/@vue+devtools-api@6.0.0-beta.15/node_modules/@vue/devtools-api/lib/esm/api/util.js': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/blackboard.svg?raw': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaNode.vue?vue&type=script&setup=true&lang.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaNode.vue?vue&type=style&index=0&lang.css': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/PointPosition.vue?vue&type=script&setup=true&lang.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/PointPosition.vue?vue&type=style&index=0&scoped=true&lang.css': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/NodeDetails.vue?vue&type=script&setup=true&lang.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/NodeDetails.vue?vue&type=style&index=0&scoped=true&lang.css': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/DefaultDebug.vue?vue&type=script&setup=true&lang.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Debug/DefaultDebug.vue?vue&type=style&index=0&scoped=true&lang.css': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaPhaseSelect.vue?vue&type=script&setup=true&lang.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaControlPanel.vue?vue&type=script&setup=true&lang.ts': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/CoyaControlPanel.vue?vue&type=style&index=0&lang.css': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/user.svg?raw': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/bank.svg?raw': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/xero.svg?raw': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/sage.svg?raw': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/worker.svg?raw': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/upswot_admin.svg?raw': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/assets/storage.svg?raw': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaLineNode.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaImageNode.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaSvgNode.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaSvgTagNode.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaRectNode.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Color/ColorPickerButton.vue': true,
      '/home/alex/RiderProjects/Coya/Coya/common/temp/node_modules/.pnpm/drauu@0.1.0/node_modules/drauu/dist/index.mjs': true,
      '@vite-icons/carbon/undo': true,
      '@vite-icons/carbon/redo': true,
      '@vite-icons/carbon/clean': true,
      '@vite-icons/entypo/brush': true,
      '@vite-icons/raphael/pensil': true,
      '@vite-icons/octicon/dash16': true,
      '@vite-icons/bi/arrow-up-right': true,
      '@vite-icons/gis/rectangle-o': true,
      '@vite-icons/mdi/ellipse-outline': true,
      '@vite-icons/radix-icons/border-dashed': true,
      '@vite-icons/ant-design/small-dash-outlined': true
    },
    watchMode: false,
    externalModules: [],
    implicitEntryModules: [],
    modules: [],
    getModuleInfo: [Function (anonymous)],
    deoptimizationTracker: PathTracker { entityPaths: [Object: null prototype] {} },
    cachedModules: Map(0) {},
    pluginCache: [Object: null prototype] {
      alias: [Object: null prototype] {},
      'vite-plugin-pages': [Object: null prototype] {},
      'vite-plugin-windicss:alias': [Object: null prototype] {},
      'vite-plugin-windicss:groups': [Object: null prototype] {},
      'vite:modulepreload-polyfill': [Object: null prototype] {},
      'vite:resolve': [Object: null prototype] {},
      'vite:html': [Object: null prototype] {},
      'vite:css': [Object: null prototype] {},
      'vite:esbuild': [Object: null prototype] {},
      'vite:json': [Object: null prototype] {},
      'vite:wasm': [Object: null prototype] {},
      'vite:worker': [Object: null prototype] {},
      'vite:asset': [Object: null prototype] {},
      'vite:vue': [Object: null prototype] {},
      'vite-plugin-windicss': [Object: null prototype] {},
      'vite-plugin-windicss:css': [Object: null prototype] {},
      'vite-plugin-windicss:css:svelte': [Object: null prototype] {},
      'vite-plugin-windicss:devtools': [Object: null prototype] {},
      'vite:define': [Object: null prototype] {},
      'vite:css-post': [Object: null prototype] {},
      'vite:build-html': [Object: null prototype] {},
      commonjs: [Object: null prototype] {},
      'vite:data-uri': [Object: null prototype] {},
      'rollup-plugin-dynamic-import-variables': [Object: null prototype] {},
      'asset-import-meta-url': [Object: null prototype] {},
      'unplugin-auto-import': [Object: null prototype] {},
      'vite-plugin-components': [Object: null prototype] {},
      'vite-plugin-icons': [Object: null prototype] {},
      'vite-plugin-windicss:entry': [Object: null prototype] {},
      'vite:import-analysis': [Object: null prototype] {},
      'vite:esbuild-transpile': [Object: null prototype] {},
      'vite:terser': [Object: null prototype] {},
      'vite:reporter': [Object: null prototype] {},
      'load-fallback': [Object: null prototype] {}
    },
    pluginDriver: PluginDriver {
      graph: [Circular *2],
      options: [Object],
      pluginContexts: [Map],
      pluginCache: [Object: null prototype],
      fileEmitter: [FileEmitter],
      emitFile: [Function: bound ],
      getFileName: [Function: bound ],
      finaliseAssets: [Function: bound ],
      setOutputBundle: [Function: bound ],
      plugins: [Array]
    },
    scope: GlobalScope { children: [Array], variables: [Map] },
    acornParser: [Function: Parser] {
      extend: [Function: extend],
      parse: [Function: parse],
      parseExpressionAt: [Function: parseExpressionAt],
      tokenizer: [Function: tokenizer],
      acorn: [Object]
    },
    moduleLoader: ModuleLoader {
      graph: [Circular *2],
      modulesById: [Map],
      options: [Object],
      pluginDriver: [PluginDriver],
      implicitEntryModules: Set(0) {},
      indexedEntryModules: [],
      latestLoadModulesPromise: [Promise],
      nextEntryModuleIndex: 1,
      readQueue: [Queue],
      resolveId: [AsyncFunction (anonymous)],
      hasModuleSideEffects: [Function (anonymous)]
    }
  },
  id: '/home/alex/RiderProjects/Coya/Coya/libraries/core/dist/core.esm.js',
  options: {
    acorn: {
      allowAwaitOutsideFunction: true,
      ecmaVersion: 'latest',
      preserveParens: false,
      sourceType: 'module'
    },
    acornInjectPlugins: [],
    context: 'undefined',
    experimentalCacheExpiry: 10,
    external: [Function (anonymous)],
    inlineDynamicImports: undefined,
    input: [
      '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/index.html'
    ],
    makeAbsoluteExternalsRelative: true,
    manualChunks: undefined,
    maxParallelFileReads: 20,
    moduleContext: [Function (anonymous)],
    onwarn: [Function (anonymous)],
    perf: false,
    plugins: [
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object], [Object], [Object],
      [Object]
    ],
    preserveEntrySignatures: false,
    preserveModules: undefined,
    preserveSymlinks: false,
    shimMissingExports: false,
    strictDeprecations: false,
    treeshake: {
      annotations: true,
      correctVarValueBeforeDeclaration: false,
      moduleSideEffects: [Function (anonymous)],
      propertyReadSideEffects: true,
      tryCatchDeoptimization: true,
      unknownGlobalSideEffects: true
    }
  },
  alternativeReexportModules: Map(0) {},
  ast: Program {
    included: false,
    esTreeNode: Node {
      type: 'Program',
      start: 0,
      end: 36938,
      body: [Array],
      sourceType: 'module',
      _rollupRemoved: [Array]
    },
    keys: [ 'body' ],
    parent: { context: [Object], type: 'Module' },
    context: {
      addDynamicImport: [Function: bound addDynamicImport],
      addExport: [Function: bound addExport],
      addImport: [Function: bound addImport],
      addImportMeta: [Function: bound addImportMeta],
      code: "import { isRef, unref, ref, computed, reactive } from '@vue/reactivity';\n" +
        "import { serialize, compile, stringify } from 'stylis';\n" +
        "import { watch } from '@vue-reactivity/watch';\n" +
        '\n' +
        'var BlockElementType;\n' +
        '\n' +
        '(function (BlockElementType) {\n' +
        '  BlockElementType["Rect"] = "rect";\n' +
        '  BlockElementType["Line"] = "line";\n' +
        '  BlockElementType["Highlight"] = "highlight";\n' +
        '})(BlockElementType || (BlockElementType = {}));\n' +
        '\n' +
        'var PositioningSystem;\n' +
        '\n' +
        '(function (PositioningSystem) {\n' +
        '  PositioningSystem["Auto"] = "auto";\n' +
        '  PositioningSystem["Grid"] = "grid";\n' +
        '})(PositioningSystem || (PositioningSystem = {}));\n' +
        '\n' +
        'var ActionType;\n' +
        '\n' +
        '(function (ActionType) {\n' +
        '  ActionType["Connect"] = "connect";\n' +
        '  ActionType["AddNewBlock"] = "newBlock";\n' +
        '  ActionType["ChangePosition"] = "changePosition";\n' +
        '  ActionType["ChangeLabel"] = "changeLabel";\n' +
        '  ActionType["Highlight"] = "highlight";\n' +
        '  ActionType["RemoveHighlight"] = "removeHighlight";\n' +
        '})(ActionType || (ActionType = {}));\n' +
        '\n' +
        'var ChangeType;\n' +
        '\n' +
        '(function (ChangeType) {\n' +
        '  ChangeType[ChangeType["AddNewBlock"] = 0] = "AddNewBlock";\n' +
        '  ChangeType[ChangeType["ChangeStyle"] = 1] = "ChangeStyle";\n' +
        '  ChangeType[ChangeType["RemoveBlock"] = 2] = "RemoveBlock";\n' +
        '})(ChangeType || (ChangeType = {}));\n' +
        '\n' +
        'function isNotNullOrUndefined(obj) {\n' +
        '  return obj !== null && typeof obj !== "undefined";\n' +
        '}\n' +
        'function isNullOrUndefined(obj) {\n' +
        '  return obj === null || typeof obj === "undefined";\n' +
        '}\n' +
        'function isString(obj) {\n' +
        '  return typeof obj === "string";\n' +
        '}\n' +
        'function isBlockElementDescription(obj) {\n' +
        '  return typeof obj === "object" && isNotNullOrUndefined(obj) && "label" in obj;\n' +
        '}\n' +
        'function isParentBlockElement(obj) {\n' +
        '  return !!obj && !!obj.id && !!obj.label && Array.isArray(obj.children) && obj.children.length > 0;\n' +
        '}\n' +
        'function isArchitectureDescription(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var maybeDescription = obj;\n' +
        '    return !!maybeDescription.blocks\n' +
        '    /* && !!maybeDescription.animation && !!maybeDescription.phases */\n' +
        '    ;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isRectPositioning(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var rectPos = obj;\n' +
        '    return isNotNullOrUndefined(rectPos.x) && isNotNullOrUndefined(rectPos.y)\n' +
        '    /* && isNotNullOrUndefined(rectPos.width)  && isNotNullOrUndefined(rectPos.height)*/\n' +
        '    ;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isPhaseAction(obj) {\n' +
        '  if (obj) {\n' +
        '    var action = obj;\n' +
        '    return typeof action === "object" && !Array.isArray(action) && Object.keys(action).every(function (x) {\n' +
        '      var val = action[x];\n' +
        '\n' +
        '      if (typeof val === "string") {\n' +
        '        return true;\n' +
        '      }\n' +
        '\n' +
        '      if (Array.isArray(val)) {\n' +
        '        return val.every(function (y) {\n' +
        '          return typeof y === "string" || isActionSetting(y);\n' +
        '        });\n' +
        '      }\n' +
        '\n' +
        '      return Object.values(ActionType).some(function (y) {\n' +
        '        return y === x;\n' +
        '      });\n' +
        '    });\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isParallelPhase(obj) {\n' +
        '  if (obj) {\n' +
        '    var phase = obj;\n' +
        '    return typeof phase === "object" && !Array.isArray(phase) && !isPhaseAction(phase);\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isGraduallyPhases(obj) {\n' +
        '  return !!obj && Array.isArray(obj);\n' +
        '}\n' +
        'function isConnectActionSetting(obj) {\n' +
        '  if (obj) {\n' +
        '    var connect = obj;\n' +
        '    return !!connect.to && !!connect.from;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isAddNewBlockActionSetting(obj) {\n' +
        '  if (obj) {\n' +
        '    var connect = obj;\n' +
        '    return isBlockElementDescription(connect);\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isActionSetting(obj) {\n' +
        '  var action = obj;\n' +
        '  return isConnectActionSetting(action) && isAddNewBlockActionSetting(action);\n' +
        '}\n' +
        'function isArray(obj) {\n' +
        '  return Array.isArray(obj);\n' +
        '}\n' +
        'function isLineBlockElementDescription(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var line = obj;\n' +
        '    return line.type === BlockElementType.Line;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isLineBlockElement(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var line = obj;\n' +
        '    return line.type === BlockElementType.Line;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isContainerBlock(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var container = obj;\n' +
        '    if (!!container.parentId) return true;\n' +
        '    var blockEl = obj;\n' +
        '    return !blockEl.type;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isFormulaValue(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var formulaValue = obj;\n' +
        '    return !!formulaValue.formula && typeof formulaValue.formula === "string" || typeof formulaValue === "string";\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isHasLabel(obj) {\n' +
        '  return !!obj && typeof obj.label === "string";\n' +
        '}\n' +
        '\n' +
        'function deepCopy(val) {\n' +
        '  return !!val ? JSON.parse(JSON.stringify(val)) : val;\n' +
        '}\n' +
        '\n' +
        'function createBlockElementByString(id, label, blockStyle) {\n' +
        '  var _blockStyle$label;\n' +
        '\n' +
        '  return {\n' +
        '    id: id,\n' +
        '    label: (_blockStyle$label = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label : label,\n' +
        '    enter: getDefaultEnter()\n' +
        '  };\n' +
        '}\n' +
        'function createBlockElementByDescription(id, element, blockStyle) {\n' +
        '  var _ref, _blockStyle$label2, _deepCopy;\n' +
        '\n' +
        '  return {\n' +
        '    label: (_ref = (_blockStyle$label2 = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label2 : element.label) != null ? _ref : id,\n' +
        '    enter: (_deepCopy = deepCopy(element.enter)) != null ? _deepCopy : getDefaultEnter(),\n' +
        '    id: id\n' +
        '  };\n' +
        '}\n' +
        'function getDefaultEnter() {\n' +
        '  return {\n' +
        '    from: {\n' +
        '      opacity: 0\n' +
        '    },\n' +
        '    to: {\n' +
        '      opacity: 1,\n' +
        '      duration: 3\n' +
        '    }\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function _extends() {\n' +
        '  _extends = Object.assign || function (target) {\n' +
        '    for (var i = 1; i < arguments.length; i++) {\n' +
        '      var source = arguments[i];\n' +
        '\n' +
        '      for (var key in source) {\n' +
        '        if (Object.prototype.hasOwnProperty.call(source, key)) {\n' +
        '          target[key] = source[key];\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '\n' +
        '    return target;\n' +
        '  };\n' +
        '\n' +
        '  return _extends.apply(this, arguments);\n' +
        '}\n' +
        '\n' +
        'function createLineElementByDescription(id, value, blockStyle) {\n' +
        '  var _ref, _blockStyle$label;\n' +
        '\n' +
        '  return _extends({\n' +
        '    id: id\n' +
        '  }, value, {\n' +
        '    label: (_ref = (_blockStyle$label = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label : value.label) != null ? _ref : id\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function blockGroupDescriptionsToBlock(architecture) {\n' +
        '  var description = architecture.blocks;\n' +
        '\n' +
        '  var blockGroupDescriptionsToBlock2 = function blockGroupDescriptionsToBlock2(description) {\n' +
        '    var blocks = Object.keys(description).flatMap(function (key) {\n' +
        '      var _architecture$style, _architecture$style$b;\n' +
        '\n' +
        '      var value = description[key];\n' +
        '      var blockStyle = (_architecture$style = architecture.style) == null ? void 0 : (_architecture$style$b = _architecture$style.blocks) == null ? void 0 : _architecture$style$b[key];\n' +
        '\n' +
        '      if (isString(value)) {\n' +
        '        return createBlockElementByString(key, value, blockStyle);\n' +
        '      }\n' +
        '\n' +
        '      if (isBlockElementDescription(value)) {\n' +
        '        if (isLineBlockElementDescription(value)) {\n' +
        '          return createLineElementByDescription(key, value, blockStyle);\n' +
        '        }\n' +
        '\n' +
        '        return createBlockElementByDescription(key, value, blockStyle);\n' +
        '      }\n' +
        '\n' +
        '      if (value === null) {\n' +
        '        return createBlockElementByString(key, key, blockStyle);\n' +
        '      }\n' +
        '\n' +
        '      var items = blockGroupDescriptionsToBlock2(value);\n' +
        '      items.forEach(function (x) {\n' +
        '        var _x$parentId;\n' +
        '\n' +
        '        return isContainerBlock(x) ? x.parentId = (_x$parentId = x.parentId) != null ? _x$parentId : key : null;\n' +
        '      });\n' +
        '      return [{\n' +
        '        id: key,\n' +
        '        label: key,\n' +
        '        children: items.filter(function (x) {\n' +
        '          return isContainerBlock(x) && x.parentId === key;\n' +
        '        }),\n' +
        '        enter: getDefaultEnter()\n' +
        '      }].concat(items);\n' +
        '    });\n' +
        '    return blocks;\n' +
        '  };\n' +
        '\n' +
        '  return blockGroupDescriptionsToBlock2(description);\n' +
        '}\n' +
        '\n' +
        'function getNumber(obj) {\n' +
        '  return isRef(obj) ? obj.value : obj;\n' +
        '}\n' +
        '\n' +
        'function getFormulaValueFuncContext(blocksPositioning, setting) {\n' +
        '  return {\n' +
        '    blockNamesAsFuncParams: blocksPositioning.value.map(function (x) {\n' +
        '      return x.blockId;\n' +
        '    }).join(", ") + ", _",\n' +
        '    blocksValues: [].concat(blocksPositioning.value.map(function (x) {\n' +
        '      return x.position;\n' +
        '    }), [{\n' +
        '      viewBox: {\n' +
        '        x: unref(setting.viewBox.x),\n' +
        '        y: unref(setting.viewBox.y),\n' +
        '        w: unref(setting.viewBox.w),\n' +
        '        h: unref(setting.viewBox.h)\n' +
        '      }\n' +
        '    }])\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function getFormulaValue(val, positioning, setting) {\n' +
        '  if (typeof val === "number") {\n' +
        '    return ref(val);\n' +
        '  }\n' +
        '\n' +
        '  if (isFormulaValue(val)) {\n' +
        '    var formula = typeof val === "string" ? val : val.formula;\n' +
        '    return computed(function () {\n' +
        '      var context = getFormulaValueFuncContext(positioning, setting);\n' +
        '      var fn = Function("\\"use strict\\";return (function(" + context.blockNamesAsFuncParams + "){return " + formula + ";})")();\n' +
        '      return fn.apply(null, context.blocksValues) || 0;\n' +
        '    });\n' +
        '  }\n' +
        '\n' +
        '  return ref(0);\n' +
        '}\n' +
        '\n' +
        'function lineBlockPosition(blocksPositions, block, setting, blockStyle) {\n' +
        '  var _blockStyle$position$, _blockStyle$position, _blockStyle$position2, _blockStyle$position$2, _blockStyle$position3, _blockStyle$position4, _blockStyle$position$3, _blockStyle$position5, _blockStyle$position6, _blockStyle$position$4, _blockStyle$position7, _blockStyle$position8, _blockStyle$position9, _blockStyle$position10, _blockStyle$position11, _blockStyle$position12, _blockStyle$position13, _blockStyle$position14, _blockStyle$position15, _blockStyle$position16;\n' +
        '\n' +
        '  var blockFromPos = computed(function () {\n' +
        '    var _blocksPositions$valu;\n' +
        '\n' +
        '    return (_blocksPositions$valu = blocksPositions.value) == null ? void 0 : _blocksPositions$valu.find(function (x) {\n' +
        '      return x.blockId === block.from;\n' +
        '    });\n' +
        '  });\n' +
        '  var blockToPos = computed(function () {\n' +
        '    var _blocksPositions$valu2;\n' +
        '\n' +
        '    return (_blocksPositions$valu2 = blocksPositions.value) == null ? void 0 : _blocksPositions$valu2.find(function (x) {\n' +
        '      return x.blockId === block.to;\n' +
        '    });\n' +
        '  });\n' +
        '  var isToRighter = computed(function () {\n' +
        '    var _blockFromPos$value, _blockToPos$value, _blockFromPos$value2, _blockToPos$value2;\n' +
        '\n' +
        '    return ((_blockFromPos$value = blockFromPos.value) == null ? void 0 : _blockFromPos$value.position) && ((_blockToPos$value = blockToPos.value) == null ? void 0 : _blockToPos$value.position) && isRectPositioning((_blockFromPos$value2 = blockFromPos.value) == null ? void 0 : _blockFromPos$value2.position) && isRectPositioning((_blockToPos$value2 = blockToPos.value) == null ? void 0 : _blockToPos$value2.position) && blockFromPos.value.position.x < blockToPos.value.position.x;\n' +
        '  });\n' +
        '\n' +
        '  var getValueByCtx = function getValueByCtx(x) {\n' +
        '    return getFormulaValue(x, blocksPositions, setting);\n' +
        '  };\n' +
        '\n' +
        '  var indentX1 = getValueByCtx((_blockStyle$position$ = blockStyle == null ? void 0 : (_blockStyle$position = blockStyle.position) == null ? void 0 : _blockStyle$position.indentX1) != null ? _blockStyle$position$ : blockStyle == null ? void 0 : (_blockStyle$position2 = blockStyle.position) == null ? void 0 : _blockStyle$position2.indentX);\n' +
        '  var indentX2 = getValueByCtx((_blockStyle$position$2 = blockStyle == null ? void 0 : (_blockStyle$position3 = blockStyle.position) == null ? void 0 : _blockStyle$position3.indentX2) != null ? _blockStyle$position$2 : blockStyle == null ? void 0 : (_blockStyle$position4 = blockStyle.position) == null ? void 0 : _blockStyle$position4.indentX);\n' +
        '  var indentY1 = getValueByCtx((_blockStyle$position$3 = blockStyle == null ? void 0 : (_blockStyle$position5 = blockStyle.position) == null ? void 0 : _blockStyle$position5.indentY1) != null ? _blockStyle$position$3 : blockStyle == null ? void 0 : (_blockStyle$position6 = blockStyle.position) == null ? void 0 : _blockStyle$position6.indentY);\n' +
        '  var indentY2 = getValueByCtx((_blockStyle$position$4 = blockStyle == null ? void 0 : (_blockStyle$position7 = blockStyle.position) == null ? void 0 : _blockStyle$position7.indentY2) != null ? _blockStyle$position$4 : blockStyle == null ? void 0 : (_blockStyle$position8 = blockStyle.position) == null ? void 0 : _blockStyle$position8.indentY);\n' +
        '  var x1 = blockStyle != null && (_blockStyle$position9 = blockStyle.position) != null && _blockStyle$position9.x1 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position10 = blockStyle.position) == null ? void 0 : _blockStyle$position10.x1) : computed(function () {\n' +
        '    var blockPos = blockFromPos.value;\n' +
        '\n' +
        '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.x) {\n' +
        '      return getNumber(blockPos.position.x) + (!isToRighter.value ? 0 : getNumber(blockPos.position.width)) + indentX1.value;\n' +
        '    }\n' +
        '\n' +
        '    return indentX1.value;\n' +
        '  });\n' +
        '  var y1 = blockStyle != null && (_blockStyle$position11 = blockStyle.position) != null && _blockStyle$position11.y1 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position12 = blockStyle.position) == null ? void 0 : _blockStyle$position12.y1) : computed(function () {\n' +
        '    var blockPos = blockFromPos.value;\n' +
        '\n' +
        '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.y) {\n' +
        '      return getNumber(blockPos == null ? void 0 : blockPos.position.y) + getNumber(blockPos.position.height) / 2 + indentY1.value;\n' +
        '    }\n' +
        '\n' +
        '    return indentY1.value;\n' +
        '  });\n' +
        '  var x2 = blockStyle != null && (_blockStyle$position13 = blockStyle.position) != null && _blockStyle$position13.x2 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position14 = blockStyle.position) == null ? void 0 : _blockStyle$position14.x2) : computed(function () {\n' +
        '    var blockPos = blockToPos.value;\n' +
        '\n' +
        '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.x) {\n' +
        '      return getNumber(blockPos == null ? void 0 : blockPos.position.x) + (!isToRighter.value ? getNumber(blockPos.position.width) : 0) + indentX2.value;\n' +
        '    }\n' +
        '\n' +
        '    return indentX2.value;\n' +
        '  });\n' +
        '  var y2 = blockStyle != null && (_blockStyle$position15 = blockStyle.position) != null && _blockStyle$position15.y2 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position16 = blockStyle.position) == null ? void 0 : _blockStyle$position16.y2) : computed(function () {\n' +
        '    var blockPos = blockToPos.value;\n' +
        '\n' +
        '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.y) {\n' +
        '      return getNumber(blockPos == null ? void 0 : blockPos.position.y) + getNumber(blockPos.position.height) / 2 + indentY2.value;\n' +
        '    }\n' +
        '\n' +
        '    return indentY2.value;\n' +
        '  });\n' +
        '  return {\n' +
        '    blockId: block.id,\n' +
        '    position: {\n' +
        '      x1: x1,\n' +
        '      y1: y1,\n' +
        '      x2: x2,\n' +
        '      y2: y2\n' +
        '    }\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function autoPositioning(setting) {\n' +
        '  var _setting$sizeSetting;\n' +
        '\n' +
        '  var sizeSetting = (_setting$sizeSetting = setting.sizeSetting) != null ? _setting$sizeSetting : defaultSiseSettings;\n' +
        '  var blocks = setting.blocks;\n' +
        '  var blocksPositioning = ref([]);\n' +
        '  blocksPositioning.value = blocks.map(function (block) {\n' +
        '    if (!isContainerBlock(block)) {\n' +
        '      if (isLineBlockElement(block)) {\n' +
        '        return lineBlockPosition(blocksPositioning, block, setting.setting);\n' +
        '      }\n' +
        '\n' +
        '      return null;\n' +
        '    }\n' +
        '\n' +
        '    var parentBlockComp = computed(function () {\n' +
        '      return blocks.find(function (x) {\n' +
        '        return x.id === block.parentId;\n' +
        '      });\n' +
        '    });\n' +
        '    var parentPosComp = computed(function () {\n' +
        '      var _parentBlockComp$valu;\n' +
        '\n' +
        '      return (_parentBlockComp$valu = parentBlockComp.value) != null && _parentBlockComp$valu.id ? getBlockPositioning(blocksPositioning.value, parentBlockComp.value.id) : null;\n' +
        '    });\n' +
        '    var blockInParentIndexComp = computed(function () {\n' +
        '      return isParentBlockElement(parentBlockComp.value) ? parentBlockComp.value.children.indexOf(block) : -1;\n' +
        '    });\n' +
        '    var columnIndexComp = computed(function () {\n' +
        '      return blockInParentIndexComp.value % sizeSetting.parentChildrenInRowCount;\n' +
        '    });\n' +
        '    var rowIndexComp = computed(function () {\n' +
        '      return Math.floor(blockInParentIndexComp.value / sizeSetting.parentChildrenInRowCount);\n' +
        '    });\n' +
        '    var brotherLeftBlockComp = computed(function () {\n' +
        '      return isParentBlockElement(parentBlockComp.value) ? parentBlockComp.value.children[blockInParentIndexComp.value - 1] : null;\n' +
        '    });\n' +
        '    var brotherLeftPosComp = computed(function () {\n' +
        '      var _brotherLeftBlockComp, _brotherLeftBlockComp2;\n' +
        '\n' +
        '      return (_brotherLeftBlockComp = brotherLeftBlockComp.value) != null && _brotherLeftBlockComp.id ? getBlockPositioning(blocksPositioning.value, (_brotherLeftBlockComp2 = brotherLeftBlockComp.value) == null ? void 0 : _brotherLeftBlockComp2.id) : null;\n' +
        '    });\n' +
        '    var x = computed(function () {\n' +
        '      if (block.parentId) {\n' +
        '        var parentBlock = parentBlockComp.value;\n' +
        '        var parentPos = parentPosComp.value;\n' +
        '\n' +
        '        if (isParentBlockElement(parentBlock) && isRectPositioning(parentPos)) {\n' +
        '          if (columnIndexComp.value === 0) {\n' +
        '            return getNumber(parentPos.x) + sizeSetting.gap;\n' +
        '          }\n' +
        '\n' +
        '          var brotherPos = brotherLeftPosComp.value;\n' +
        '\n' +
        '          if (isRectPositioning(brotherPos)) {\n' +
        '            return getNumber(brotherPos.x) + getNumber(brotherPos.width) + sizeSetting.gap;\n' +
        '          }\n' +
        '\n' +
        '          return getNumber(parentPos.x) + sizeSetting.gap;\n' +
        '        }\n' +
        '      }\n' +
        '\n' +
        '      return sizeSetting.gap;\n' +
        '    });\n' +
        '    var y = computed(function () {\n' +
        '      if (block.parentId) {\n' +
        '        var parentBlock = parentBlockComp.value;\n' +
        '        var parentPos = parentPosComp.value;\n' +
        '\n' +
        '        if (isParentBlockElement(parentBlock) && isRectPositioning(parentPos)) {\n' +
        '          if (rowIndexComp.value === 0) {\n' +
        '            return getNumber(parentPos.y) + sizeSetting.gap;\n' +
        '          }\n' +
        '\n' +
        '          var previousRowIndex = rowIndexComp.value - 1;\n' +
        '          var startIndex = previousRowIndex * sizeSetting.parentChildrenInRowCount;\n' +
        '          var maxY = 0;\n' +
        '          parentBlock.children.slice(startIndex, startIndex + sizeSetting.parentChildrenInRowCount).forEach(function (brotherBlock) {\n' +
        '            var pos = getBlockPositioning(blocksPositioning.value, brotherBlock.id);\n' +
        '\n' +
        '            if (isRectPositioning(pos)) {\n' +
        '              var newY = getNumber(pos.y) + getNumber(pos.height);\n' +
        '\n' +
        '              if (newY > maxY) {\n' +
        '                maxY = newY;\n' +
        '              }\n' +
        '            }\n' +
        '          });\n' +
        '          return maxY + sizeSetting.gap;\n' +
        '        }\n' +
        '      }\n' +
        '\n' +
        '      return sizeSetting.gap;\n' +
        '    });\n' +
        '    var width = computed(function () {\n' +
        '      if (isParentBlockElement(block)) {\n' +
        '        var maxX = 0;\n' +
        '        block.children.forEach(function (child) {\n' +
        '          var _blocksPositioning$va;\n' +
        '\n' +
        '          var pos = (_blocksPositioning$va = blocksPositioning.value.find(function (x) {\n' +
        '            return x.blockId === child.id;\n' +
        '          })) == null ? void 0 : _blocksPositioning$va.position;\n' +
        '\n' +
        '          if (isRectPositioning(pos)) {\n' +
        '            var newX = getNumber(pos.x) + getNumber(pos.width);\n' +
        '\n' +
        '            if (newX > maxX) {\n' +
        '              maxX = newX;\n' +
        '            }\n' +
        '          }\n' +
        '        });\n' +
        '        return maxX - x.value + sizeSetting.gap;\n' +
        '      }\n' +
        '\n' +
        '      return sizeSetting.rectWidth;\n' +
        '    });\n' +
        '    var height = computed(function () {\n' +
        '      if (isParentBlockElement(block)) {\n' +
        '        var maxY = 0;\n' +
        '        block.children.forEach(function (child) {\n' +
        '          var _blocksPositioning$va2;\n' +
        '\n' +
        '          var pos = (_blocksPositioning$va2 = blocksPositioning.value.find(function (x) {\n' +
        '            return x.blockId === child.id;\n' +
        '          })) == null ? void 0 : _blocksPositioning$va2.position;\n' +
        '\n' +
        '          if (isRectPositioning(pos)) {\n' +
        '            var newY = getNumber(pos.y) + getNumber(pos.height);\n' +
        '\n' +
        '            if (newY > maxY) {\n' +
        '              maxY = newY;\n' +
        '            }\n' +
        '          }\n' +
        '        });\n' +
        '        return maxY - y.value + sizeSetting.gap;\n' +
        '      }\n' +
        '\n' +
        '      return sizeSetting.rectHeight;\n' +
        '    });\n' +
        '    return {\n' +
        '      blockId: block.id,\n' +
        '      position: {\n' +
        '        x: x,\n' +
        '        y: y,\n' +
        '        width: width,\n' +
        '        height: height\n' +
        '      }\n' +
        '    };\n' +
        '  }).filter(isNotNullOrUndefined);\n' +
        '  return blocksPositioning.value;\n' +
        '}\n' +
        'var defaultSiseSettings = {\n' +
        '  rectHeight: 20,\n' +
        '  rectWidth: 30,\n' +
        '  gap: 10,\n' +
        '  parentChildrenInRowCount: 3\n' +
        '};\n' +
        '\n' +
        'function getBlockPositioning(blocksPositioning, id) {\n' +
        '  var _blocksPositioning$fi;\n' +
        '\n' +
        '  return (_blocksPositioning$fi = blocksPositioning.find(function (x) {\n' +
        '    return x.blockId === id;\n' +
        '  })) == null ? void 0 : _blocksPositioning$fi.position;\n' +
        '}\n' +
        '\n' +
        'function gridPositioning(option) {\n' +
        '  var _option$architectureD3;\n' +
        '\n' +
        '  var blocks = option.blocks.filter(function (x) {\n' +
        '    return x.id !== "main";\n' +
        '  });\n' +
        '  var notSettetBlocks = blocks.filter(function (block) {\n' +
        '    var _option$architectureD, _option$architectureD2;\n' +
        '\n' +
        '    if (isLineBlockElement(block)) {\n' +
        '      return false;\n' +
        '    }\n' +
        '\n' +
        '    var styleBlock = (_option$architectureD = option.architectureDescription.style) == null ? void 0 : (_option$architectureD2 = _option$architectureD.blocks) == null ? void 0 : _option$architectureD2[block.id];\n' +
        '    return !styleBlock || !styleBlock.position;\n' +
        '  });\n' +
        '  var style = (_option$architectureD3 = option.architectureDescription.style) == null ? void 0 : _option$architectureD3.blocks;\n' +
        '\n' +
        '  if (!style || notSettetBlocks.length > 0) {\n' +
        '    throw "Not every block has setting: [" + notSettetBlocks.map(function (x) {\n' +
        '      return x.id;\n' +
        '    }) + "]";\n' +
        '  }\n' +
        '\n' +
        '  var gridSize = {\n' +
        '    columnWidth: 20,\n' +
        '    rowHeight: 20\n' +
        '  };\n' +
        '  var blocksPositioning = ref([]);\n' +
        '\n' +
        '  var getValueByCtx = function getValueByCtx(x, multiplier) {\n' +
        '    if (multiplier === void 0) {\n' +
        '      multiplier = 1;\n' +
        '    }\n' +
        '\n' +
        '    var res = getFormulaValue(x, blocksPositioning, option.setting);\n' +
        '\n' +
        '    if (isFormulaValue(x)) {\n' +
        '      return res;\n' +
        '    }\n' +
        '\n' +
        '    return ref(res.value * multiplier);\n' +
        '  };\n' +
        '\n' +
        '  blocksPositioning.value = blocks.map(function (block) {\n' +
        '    var blockStyle = style[block.id];\n' +
        '\n' +
        '    if (!isContainerBlock(block)) {\n' +
        '      if (isLineBlockElement(block)) {\n' +
        '        return lineBlockPosition(blocksPositioning, block, option.setting, blockStyle);\n' +
        '      }\n' +
        '\n' +
        '      return null;\n' +
        '    }\n' +
        '\n' +
        '    if (blockStyle.position) {\n' +
        '      var _getValueByCtx, _getValueByCtx2;\n' +
        '\n' +
        '      var pos = blockStyle.position;\n' +
        '      var indentX = (_getValueByCtx = getValueByCtx(pos.indentX)) != null ? _getValueByCtx : 0;\n' +
        '      var indentY = (_getValueByCtx2 = getValueByCtx(pos.indentY)) != null ? _getValueByCtx2 : 0;\n' +
        '      return {\n' +
        '        blockId: block.id,\n' +
        '        position: {\n' +
        '          x: computed(function () {\n' +
        '            return getValueByCtx(pos.x, gridSize.columnWidth).value + indentX.value;\n' +
        '          }),\n' +
        '          y: computed(function () {\n' +
        '            return getValueByCtx(pos.y, gridSize.rowHeight).value + indentY.value;\n' +
        '          }),\n' +
        '          width: computed(function () {\n' +
        '            return getValueByCtx(pos.w, gridSize.columnWidth).value + indentX.value;\n' +
        '          }),\n' +
        '          height: computed(function () {\n' +
        '            return getValueByCtx(pos.h, gridSize.rowHeight).value + indentY.value;\n' +
        '          })\n' +
        '        }\n' +
        '      };\n' +
        '    }\n' +
        '\n' +
        '    return null;\n' +
        '  }).filter(isNotNullOrUndefined);\n' +
        '  return blocksPositioning.value;\n' +
        '}\n' +
        '\n' +
        'function prepareCss(architectureDescription) {\n' +
        '  var _architectureDescript, _architectureDescript2;\n' +
        '\n' +
        '  return (_architectureDescript = architectureDescription.style) != null && _architectureDescript.css ? serialize(compile("#" + architectureDescription.name + " {" + ((_architectureDescript2 = architectureDescription.style) == null ? void 0 : _architectureDescript2.css) + "}"), stringify) : undefined;\n' +
        '}\n' +
        '\n' +
        'function styleDescriptionToArchitectureStyle(architectureDescription, blocks, setting) {\n' +
        '  var _architectureDescript, _architectureDescript2;\n' +
        '\n' +
        '  var positioningSystem = (_architectureDescript = architectureDescription.style) == null ? void 0 : _architectureDescript.positioning;\n' +
        '  var css = prepareCss(architectureDescription);\n' +
        '  return {\n' +
        '    id: "style",\n' +
        '    positioning: !positioningSystem || positioningSystem === PositioningSystem.Auto ? autoPositioning({\n' +
        '      architectureDescription: architectureDescription,\n' +
        '      blocks: blocks,\n' +
        '      setting: setting\n' +
        '    }) : gridPositioning({\n' +
        '      architectureDescription: architectureDescription,\n' +
        '      blocks: blocks,\n' +
        '      setting: setting\n' +
        '    }),\n' +
        '    debug: deepCopy((_architectureDescript2 = architectureDescription.style) == null ? void 0 : _architectureDescript2.debug),\n' +
        '    css: css,\n' +
        '    blocks: architectureDescription.style ? generateBlocksStyle(architectureDescription.style) : undefined\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function generateBlocksStyle(style) {\n' +
        '  return style.blocks;\n' +
        '}\n' +
        '\n' +
        'function deepAssign() {\n' +
        '  var isObject = function isObject(obj) {\n' +
        "    return obj && typeof obj === 'object';\n" +
        '  };\n' +
        '\n' +
        '  function deepMergeInner(target, source) {\n' +
        '    Object.keys(source).forEach(function (key) {\n' +
        '      var targetValue = target[key];\n' +
        '      var sourceValue = source[key];\n' +
        '\n' +
        '      if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n' +
        '        target[key] = targetValue.concat(sourceValue);\n' +
        '      } else if (isObject(targetValue) && isObject(sourceValue)) {\n' +
        '        target[key] = deepMergeInner(Object.assign({}, targetValue), sourceValue);\n' +
        '      } else {\n' +
        '        target[key] = sourceValue;\n' +
        '      }\n' +
        '    });\n' +
        '    return target;\n' +
        '  }\n' +
        '\n' +
        '  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n' +
        '    objects[_key] = arguments[_key];\n' +
        '  }\n' +
        '\n' +
        '  if (objects.length < 2) {\n' +
        "    throw new Error('deepMerge: this function expects at least 2 objects to be provided');\n" +
        '  }\n' +
        '\n' +
        '  if (objects.some(function (object) {\n' +
        '    return !isObject(object);\n' +
        '  })) {\n' +
        `    throw new Error('deepMerge: all values should be of type "object"');\n` +
        '  }\n' +
        '\n' +
        '  var target = objects.shift();\n' +
        '  var source;\n' +
        '\n' +
        '  while (source = objects.shift()) {\n' +
        '    deepMergeInner(target, source);\n' +
        '  }\n' +
        '\n' +
        '  return target;\n' +
        '}\n' +
        '\n' +
        'function addHighlightActionExecutor(context, action) {\n' +
        '  var _val$gap;\n' +
        '\n' +
        '  if (!context) {\n' +
        '    return null;\n' +
        '  }\n' +
        '\n' +
        '  var val = action.value;\n' +
        '  var blocks = typeof val.blocks === "string" ? [val.blocks] : val.blocks;\n' +
        '  var gap = (_val$gap = val.gap) != null ? _val$gap : 5;\n' +
        '  return blocks.flatMap(function (block) {\n' +
        '    return [{\n' +
        '      type: ChangeType.ChangeStyle,\n' +
        '      setting: {\n' +
        '        blockId: "highlight_" + block,\n' +
        '        newStyle: {\n' +
        '          position: {\n' +
        '            x: block + ".x - " + gap,\n' +
        '            y: block + ".y - " + gap,\n' +
        '            w: block + ".width + " + gap * 2,\n' +
        '            h: block + ".height + " + gap * 2\n' +
        '          },\n' +
        '          isHighlight: true\n' +
        '        }\n' +
        '      }\n' +
        '    }, {\n' +
        '      type: ChangeType.AddNewBlock,\n' +
        '      setting: {\n' +
        '        newBlockId: "highlight_" + block,\n' +
        '        blockSettings: {\n' +
        '          type: BlockElementType.Rect,\n' +
        '          label: ""\n' +
        '        }\n' +
        '      }\n' +
        '    }];\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function addNewBlockActionExecutor(context, action) {\n' +
        '  if (!context) {\n' +
        '    return null;\n' +
        '  }\n' +
        '\n' +
        '  var val = action.value;\n' +
        '  return Object.keys(val).map(function (key) {\n' +
        '    return {\n' +
        '      type: ChangeType.AddNewBlock,\n' +
        '      setting: {\n' +
        '        newBlockId: key,\n' +
        '        blockSettings: val[key]\n' +
        '      }\n' +
        '    };\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function changeBlockPositionActionExecutor(context, action) {\n' +
        '  if (!context) {\n' +
        '    return null;\n' +
        '  }\n' +
        '\n' +
        '  var val = action.value;\n' +
        '  return Object.keys(val).map(function (key) {\n' +
        '    return {\n' +
        '      type: ChangeType.ChangeStyle,\n' +
        '      setting: {\n' +
        '        blockId: key,\n' +
        '        newStyle: {\n' +
        '          position: val[key]\n' +
        '        }\n' +
        '      }\n' +
        '    };\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function changeLabelActionExecutor(context, action) {\n' +
        '  if (!context) {\n' +
        '    return null;\n' +
        '  }\n' +
        '\n' +
        '  var val = action.value;\n' +
        '  return Object.keys(val).map(function (key) {\n' +
        '    var v = val[key];\n' +
        '    return {\n' +
        '      type: ChangeType.ChangeStyle,\n' +
        '      setting: {\n' +
        '        blockId: key,\n' +
        '        newStyle: {\n' +
        '          label: isHasLabel(v) ? v.label : v\n' +
        '        }\n' +
        '      }\n' +
        '    };\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function connectActionExecutor(context, action) {\n' +
        '  if (isConnectActionSetting(action.value)) {\n' +
        '    var _action$value$name, _action$value$label;\n' +
        '\n' +
        '    var newBlockId = (_action$value$name = action.value.name) != null ? _action$value$name : "line_" + context.indexItem.phaseId;\n' +
        '    return [{\n' +
        '      type: ChangeType.AddNewBlock,\n' +
        '      setting: {\n' +
        '        newBlockId: newBlockId,\n' +
        '        blockSettings: _extends({}, action.value, {\n' +
        '          type: BlockElementType.Line,\n' +
        '          label: (_action$value$label = action.value.label) != null ? _action$value$label : newBlockId\n' +
        '        })\n' +
        '      }\n' +
        '    }];\n' +
        '  }\n' +
        '\n' +
        '  return null;\n' +
        '}\n' +
        '\n' +
        'function removeHighlightActionExecutor(context, _) {\n' +
        '  var _context$architecture;\n' +
        '\n' +
        '  var blocks = ((_context$architecture = context.architecture.style) == null ? void 0 : _context$architecture.blocks) || {};\n' +
        '  return [{\n' +
        '    type: ChangeType.RemoveBlock,\n' +
        '    setting: {\n' +
        '      blocks: Object.keys(blocks).filter(function (x) {\n' +
        '        return blocks[x].isHighlight;\n' +
        '      })\n' +
        '    }\n' +
        '  }];\n' +
        '}\n' +
        '\n' +
        'function startPhases(architecture, phaseIndex, phaseInfo) {\n' +
        '  var indexItems = phaseIndex.getPhaseById(phaseInfo.current);\n' +
        '\n' +
        '  if (indexItems) {\n' +
        '    return indexItems.map(function (indexItem) {\n' +
        '      var actionContext = {\n' +
        '        indexItem: indexItem,\n' +
        '        architecture: architecture,\n' +
        '        phaseIndex: phaseIndex\n' +
        '      };\n' +
        '      var changes = indexItem.actions.flatMap(function (item) {\n' +
        '        return executePhaseIndex(item, actionContext);\n' +
        '      });\n' +
        '      changes.filter(isNotNullOrUndefined).forEach(function (change) {\n' +
        '        return makeChange(architecture, change);\n' +
        '      });\n' +
        '      return indexItem.nextPhaseId;\n' +
        '    })[0];\n' +
        '  }\n' +
        '\n' +
        '  return null;\n' +
        '}\n' +
        '\n' +
        'function executePhaseIndex(item, context) {\n' +
        '  if (item.action.name === ActionType.Connect) {\n' +
        '    return connectActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.AddNewBlock) {\n' +
        '    return addNewBlockActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.ChangePosition) {\n' +
        '    return changeBlockPositionActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.ChangeLabel) {\n' +
        '    return changeLabelActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.Highlight) {\n' +
        '    return addHighlightActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.RemoveHighlight) {\n' +
        '    return removeHighlightActionExecutor(context);\n' +
        '  }\n' +
        '\n' +
        '  throw "Not implemented!";\n' +
        '}\n' +
        '\n' +
        'function makeChange(architecture, change) {\n' +
        '  if (change.type === ChangeType.AddNewBlock) {\n' +
        '    var setting = change.setting;\n' +
        '\n' +
        '    if (setting) {\n' +
        '      architecture.blocks[setting.newBlockId] = setting.blockSettings;\n' +
        '    }\n' +
        '  } else if (change.type === ChangeType.ChangeStyle) {\n' +
        '    var _architecture$style;\n' +
        '\n' +
        '    var _setting = change.setting;\n' +
        '\n' +
        '    if (_setting && (_architecture$style = architecture.style) != null && _architecture$style.blocks) {\n' +
        '      var _architecture$style2, _architecture$style2$;\n' +
        '\n' +
        '      var currentSetting = (_architecture$style2 = architecture.style) == null ? void 0 : (_architecture$style2$ = _architecture$style2.blocks) == null ? void 0 : _architecture$style2$[_setting.blockId];\n' +
        '\n' +
        '      if (currentSetting) {\n' +
        '        architecture.style.blocks[_setting.blockId] = deepAssign({}, currentSetting, _setting.newStyle);\n' +
        '      } else {\n' +
        '        architecture.style.blocks[_setting.blockId] = deepAssign({}, _setting.newStyle);\n' +
        '      }\n' +
        '    }\n' +
        '  } else if (change.type === ChangeType.RemoveBlock) {\n' +
        '    var _setting2 = change.setting;\n' +
        '\n' +
        '    _setting2.blocks.forEach(function (x) {\n' +
        '      var _architecture$style3, _architecture$style3$;\n' +
        '\n' +
        '      delete architecture.blocks[x];\n' +
        '      (_architecture$style3 = architecture.style) == null ? true : (_architecture$style3$ = _architecture$style3.blocks) == null ? true : delete _architecture$style3$[x];\n' +
        '    });\n' +
        '  } else {\n' +
        '    throw new Error("Function not implemented.");\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'function buildPhasesIndex(phases) {\n' +
        '  var index = buildIndexObject(phases);\n' +
        '  return {\n' +
        '    getPhaseById: function getPhaseById(id) {\n' +
        '      if (!id) {\n' +
        '        return index.filter(function (x) {\n' +
        '          return x.isStart;\n' +
        '        });\n' +
        '      }\n' +
        '\n' +
        '      var ids = [];\n' +
        '\n' +
        '      if (Array.isArray(id)) {\n' +
        '        ids = id.filter(isNotNullOrUndefined);\n' +
        '      } else {\n' +
        '        ids = [id];\n' +
        '      }\n' +
        '\n' +
        '      return index.filter(function (x) {\n' +
        '        return x.phaseId && ids.indexOf(x.phaseId) > -1;\n' +
        '      });\n' +
        '    },\n' +
        '    phases: index.map(function (x) {\n' +
        '      return x.phaseId;\n' +
        '    }),\n' +
        '    getPhaseIndex: function getPhaseIndex(phase) {\n' +
        '      return index.findIndex(function (x) {\n' +
        '        return x.phaseId === phase;\n' +
        '      });\n' +
        '    }\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function buildIndexObject(phase, isStart, id) {\n' +
        '  if (isStart === void 0) {\n' +
        '    isStart = true;\n' +
        '  }\n' +
        '\n' +
        '  if (id === void 0) {\n' +
        '    id = "start";\n' +
        '  }\n' +
        '\n' +
        '  if (!phase) {\n' +
        '    return [];\n' +
        '  }\n' +
        '\n' +
        '  if (isPhaseAction(phase)) {\n' +
        '    var actions = Object.keys(phase).flatMap(function (key) {\n' +
        '      var action = phase[key];\n' +
        '      var actions = [];\n' +
        '\n' +
        '      if (!Array.isArray(action)) {\n' +
        '        actions = [action];\n' +
        '      } else {\n' +
        '        actions = action;\n' +
        '      }\n' +
        '\n' +
        '      return actions.map(function (y) {\n' +
        '        return {\n' +
        '          action: {\n' +
        '            name: key,\n' +
        '            value: y\n' +
        '          }\n' +
        '        };\n' +
        '      });\n' +
        '    });\n' +
        '    return [{\n' +
        '      isStart: isStart,\n' +
        '      nextPhaseId: null,\n' +
        '      phaseId: "" + id,\n' +
        '      actions: actions\n' +
        '    }];\n' +
        '  } else if (isParallelPhase(phase)) {\n' +
        '    var items = Object.keys(phase).flatMap(function (x) {\n' +
        '      var val = phase[x];\n' +
        '      return buildIndexObject(val, isStart, id + "_" + x);\n' +
        '    });\n' +
        '    return items;\n' +
        '  } else if (isGraduallyPhases(phase)) {\n' +
        '    var childId = id + "_child";\n' +
        '\n' +
        '    var _items = phase.map(function (x, index) {\n' +
        '      return buildIndexObject(x, isStart && index === 0, childId);\n' +
        '    });\n' +
        '\n' +
        '    _items.forEach(function (group, index) {\n' +
        '      group.forEach(function (groupItem) {\n' +
        '        if (groupItem.phaseId === childId) {\n' +
        '          groupItem.phaseId += "_" + index;\n' +
        '\n' +
        '          if (index + 1 < _items.length) {\n' +
        '            groupItem.nextPhaseId = childId + "_" + (index + 1);\n' +
        '          }\n' +
        '        }\n' +
        '      });\n' +
        '    });\n' +
        '\n' +
        '    return _items.flatMap(function (x) {\n' +
        '      return x;\n' +
        '    });\n' +
        '  }\n' +
        '\n' +
        '  throw "Not implemented!";\n' +
        '}\n' +
        '\n' +
        'function transformToArchitecture(description, setting) {\n' +
        '  var refDescription = isRef(description) ? description : ref(description);\n' +
        '  var value = refDescription.value;\n' +
        '  var transitionalArchitectureRef = ref(deepCopy(value));\n' +
        '  var transitionalArchitecture = transitionalArchitectureRef.value;\n' +
        '  transitionalArchitecture.blocks = {\n' +
        '    main: transitionalArchitecture.blocks\n' +
        '  };\n' +
        '  var architecture = computed(function () {\n' +
        '    if (isArchitectureDescription(transitionalArchitectureRef.value)) {\n' +
        '      return transformDescriptionToArchitecture(transitionalArchitectureRef, setting);\n' +
        '    }\n' +
        '\n' +
        '    return {\n' +
        '      name: "",\n' +
        '      blocks: ref([]),\n' +
        '      style: ref(null),\n' +
        '      phases: [],\n' +
        '      currentPhase: null,\n' +
        '      next: function next() {\n' +
        '        return null;\n' +
        '      },\n' +
        '      back: function back() {\n' +
        '        return null;\n' +
        '      },\n' +
        '      toPhase: function toPhase() {}\n' +
        '    };\n' +
        '  });\n' +
        '  return architecture;\n' +
        '}\n' +
        'function transformDescriptionToArchitecture(transitionalArchitectureRef, setting) {\n' +
        '  var oldValues = [];\n' +
        '  var enableWatcher = true;\n' +
        '  var currentPhase = reactive({\n' +
        '    current: null\n' +
        '  });\n' +
        '  watch(function () {\n' +
        '    return deepCopy(transitionalArchitectureRef.value);\n' +
        '  }, function (_, oldVal) {\n' +
        '    if (enableWatcher) {\n' +
        '      oldValues.push({\n' +
        '        arch: oldVal,\n' +
        '        phaseId: currentPhase.current\n' +
        '      });\n' +
        '    }\n' +
        '  });\n' +
        '  var blocks = computed(function () {\n' +
        '    return BlockGroupDescriptionsToBlock(transitionalArchitectureRef.value);\n' +
        '  });\n' +
        '  var phaseIndex = buildPhasesIndex(transitionalArchitectureRef.value.phases);\n' +
        '\n' +
        '  var next = function next() {\n' +
        '    enableWatcher = true;\n' +
        '    var nextPhaseId = startPhases(transitionalArchitectureRef.value, phaseIndex, currentPhase);\n' +
        '    currentPhase.current = nextPhaseId;\n' +
        '    return nextPhaseId;\n' +
        '  };\n' +
        '\n' +
        '  var back = function back() {\n' +
        '    var _val2;\n' +
        '\n' +
        '    var val = oldValues.pop();\n' +
        '\n' +
        '    while (oldValues.length > 0 && oldValues[oldValues.length - 1].phaseId == ((_val = val) == null ? void 0 : _val.phaseId)) {\n' +
        '      var _val;\n' +
        '\n' +
        '      val = oldValues.pop();\n' +
        '    }\n' +
        '\n' +
        '    if (val) {\n' +
        '      enableWatcher = false;\n' +
        '      transitionalArchitectureRef.value = val.arch;\n' +
        '      currentPhase.current = val.phaseId;\n' +
        '    }\n' +
        '\n' +
        '    return (_val2 = val) == null ? void 0 : _val2.phaseId;\n' +
        '  };\n' +
        '\n' +
        '  return {\n' +
        '    name: transitionalArchitectureRef.value.name,\n' +
        '    blocks: blocks,\n' +
        '    style: computed(function () {\n' +
        '      return styleDescriptionToArchitectureStyle(transitionalArchitectureRef.value, blocks.value, setting);\n' +
        '    }),\n' +
        '    next: next,\n' +
        '    back: back,\n' +
        '    toPhase: function toPhase(phaseId) {\n' +
        '      var phaseInd = phaseIndex.getPhaseIndex(phaseId);\n' +
        '      var currentPhaseInd = phaseIndex.getPhaseIndex(currentPhase.current);\n' +
        '      var walkerFn = phaseInd > currentPhaseInd ? next : back;\n' +
        '      var curPhaseId = null;\n' +
        '\n' +
        '      do {\n' +
        '        curPhaseId = walkerFn();\n' +
        '      } while (!!curPhaseId && curPhaseId.length > 0 && curPhaseId.indexOf(phaseId) === -1);\n' +
        '    },\n' +
        '    phases: phaseIndex.phases,\n' +
        '    currentPhase: computed(function () {\n' +
        '      return currentPhase.current;\n' +
        '    })\n' +
        '  };\n' +
        '}\n' +
        'function BlockGroupDescriptionsToBlock(description) {\n' +
        '  return blockGroupDescriptionsToBlock(description);\n' +
        '}\n' +
        '\n' +
        'var sum = function sum(a, b) {\n' +
        '  return a + b;\n' +
        '};\n' +
        '\n' +
        'export { ActionType, BlockElementType, ChangeType, PositioningSystem, autoPositioning, isActionSetting, isAddNewBlockActionSetting, isArchitectureDescription, isArray, isBlockElementDescription, isConnectActionSetting, isContainerBlock, isFormulaValue, isGraduallyPhases, isHasLabel, isLineBlockElement, isLineBlockElementDescription, isNotNullOrUndefined, isNullOrUndefined, isParallelPhase, isParentBlockElement, isPhaseAction, isRectPositioning, isString, startPhases, sum, transformDescriptionToArchitecture, transformToArchitecture };\n' +
        '//# sourceMappingURL=core.esm.js.map\n',
      deoptimizationTracker: [PathTracker],
      error: [Function: bound error],
      fileName: '/home/alex/RiderProjects/Coya/Coya/libraries/core/dist/core.esm.js',
      getExports: [Function: bound getExports],
      getModuleExecIndex: [Function: getModuleExecIndex],
      getModuleName: [Function: bound basename],
      getReexports: [Function: bound getReexports],
      importDescriptions: [Object: null prototype],
      includeAllExports: [Function: includeAllExports],
      includeDynamicImport: [Function: bound includeDynamicImport],
      includeVariableInModule: [Function: bound includeVariableInModule],
      magicString: MagicString {},
      module: [Circular *1],
      moduleContext: 'undefined',
      nodeConstructors: [Object],
      options: [Object],
      requestTreeshakingPass: [Function: requestTreeshakingPass],
      traceExport: [Function: bound getVariableForExportName],
      traceVariable: [Function: bound traceVariable],
      usesTopLevelAwait: false,
      warn: [Function: bound warn]
    },
    scope: ModuleScope {
      children: [Array],
      variables: [Map],
      accessedOutsideVariables: Map(0) {},
      parent: [GlobalScope],
      context: [Object]
    },
    type: 'Program',
    start: 0,
    end: 36938,
    body: [
      [ImportDeclaration],
      [ImportDeclaration],
      [ImportDeclaration],
      [VariableDeclaration],
      [ExpressionStatement],
      [VariableDeclaration],
      [ExpressionStatement],
      [VariableDeclaration],
      [ExpressionStatement],
      [VariableDeclaration],
      [ExpressionStatement],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [VariableDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [FunctionDeclaration],
      [VariableDeclaration],
      [ExportNamedDeclaration]
    ],
    sourceType: 'module',
    hasCachedEffect: false
  },
  chunkFileNames: Set(0) {},
  chunkName: null,
  cycles: Set(0) {},
  dependencies: Set(0) {},
  dynamicDependencies: Set(0) {},
  dynamicImporters: [],
  dynamicImports: [],
  execIndex: Infinity,
  exportAllSources: Set(0) {},
  exports: [Object: null prototype] {
    ActionType: { identifier: null, localName: 'ActionType' },
    BlockElementType: { identifier: null, localName: 'BlockElementType' },
    ChangeType: { identifier: null, localName: 'ChangeType' },
    PositioningSystem: { identifier: null, localName: 'PositioningSystem' },
    autoPositioning: { identifier: null, localName: 'autoPositioning' },
    isActionSetting: { identifier: null, localName: 'isActionSetting' },
    isAddNewBlockActionSetting: { identifier: null, localName: 'isAddNewBlockActionSetting' },
    isArchitectureDescription: { identifier: null, localName: 'isArchitectureDescription' },
    isArray: { identifier: null, localName: 'isArray' },
    isBlockElementDescription: { identifier: null, localName: 'isBlockElementDescription' },
    isConnectActionSetting: { identifier: null, localName: 'isConnectActionSetting' },
    isContainerBlock: { identifier: null, localName: 'isContainerBlock' },
    isFormulaValue: { identifier: null, localName: 'isFormulaValue' },
    isGraduallyPhases: { identifier: null, localName: 'isGraduallyPhases' },
    isHasLabel: { identifier: null, localName: 'isHasLabel' },
    isLineBlockElement: { identifier: null, localName: 'isLineBlockElement' },
    isLineBlockElementDescription: { identifier: null, localName: 'isLineBlockElementDescription' },
    isNotNullOrUndefined: { identifier: null, localName: 'isNotNullOrUndefined' },
    isNullOrUndefined: { identifier: null, localName: 'isNullOrUndefined' },
    isParallelPhase: { identifier: null, localName: 'isParallelPhase' },
    isParentBlockElement: { identifier: null, localName: 'isParentBlockElement' },
    isPhaseAction: { identifier: null, localName: 'isPhaseAction' },
    isRectPositioning: { identifier: null, localName: 'isRectPositioning' },
    isString: { identifier: null, localName: 'isString' },
    startPhases: { identifier: null, localName: 'startPhases' },
    sum: { identifier: null, localName: 'sum' },
    transformDescriptionToArchitecture: {
      identifier: null,
      localName: 'transformDescriptionToArchitecture'
    },
    transformToArchitecture: { identifier: null, localName: 'transformToArchitecture' }
  },
  exportsAll: [Object: null prototype] {},
  implicitlyLoadedAfter: Set(0) {},
  implicitlyLoadedBefore: Set(0) {},
  importDescriptions: [Object: null prototype] {
    isRef: {
      module: null,
      name: 'isRef',
      source: '@vue/reactivity',
      start: 9
    },
    unref: {
      module: null,
      name: 'unref',
      source: '@vue/reactivity',
      start: 16
    },
    ref: { module: null, name: 'ref', source: '@vue/reactivity', start: 23 },
    computed: {
      module: null,
      name: 'computed',
      source: '@vue/reactivity',
      start: 28
    },
    reactive: {
      module: null,
      name: 'reactive',
      source: '@vue/reactivity',
      start: 38
    },
    serialize: { module: null, name: 'serialize', source: 'stylis', start: 82 },
    compile: { module: null, name: 'compile', source: 'stylis', start: 93 },
    stringify: { module: null, name: 'stringify', source: 'stylis', start: 102 },
    watch: {
      module: null,
      name: 'watch',
      source: '@vue-reactivity/watch',
      start: 138
    }
  },
  importMetas: [],
  importedFromNotTreeshaken: false,
  importers: [
    '/home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/examples/4_simple_style_phase4.ts'
  ],
  imports: Set(0) {},
  includedDynamicImporters: [],
  isExecuted: false,
  isUserDefinedEntryPoint: false,
  preserveSignature: false,
  reexportDescriptions: [Object: null prototype] {},
  sideEffectDependenciesByVariable: Map(0) {},
  sources: Set(3) { '@vue/reactivity', 'stylis', '@vue-reactivity/watch' },
  userChunkNames: Set(0) {},
  usesTopLevelAwait: false,
  allExportNames: null,
  exportAllModules: [],
  exportNamesByVariable: null,
  exportShimVariable: ExportShimVariable {
    included: false,
    name: '_missingExportShim',
    alwaysRendered: false,
    initReached: false,
    isId: false,
    isReassigned: false,
    kind: null,
    renderBaseName: null,
    renderName: null,
    module: [Circular *1]
  },
  namespaceReexportsByName: [Object: null prototype] {},
  relevantDependencies: null,
  syntheticExports: Map(0) {},
  syntheticNamespace: null,
  transformDependencies: [],
  transitiveReexports: null,
  excludeFromSourcemap: false,
  context: 'undefined',
  info: {
    ast: Node {
      type: 'Program',
      start: 0,
      end: 36938,
      body: [Array],
      sourceType: 'module',
      _rollupRemoved: [Array]
    },
    code: "import { isRef, unref, ref, computed, reactive } from '@vue/reactivity';\n" +
      "import { serialize, compile, stringify } from 'stylis';\n" +
      "import { watch } from '@vue-reactivity/watch';\n" +
      '\n' +
      'var BlockElementType;\n' +
      '\n' +
      '(function (BlockElementType) {\n' +
      '  BlockElementType["Rect"] = "rect";\n' +
      '  BlockElementType["Line"] = "line";\n' +
      '  BlockElementType["Highlight"] = "highlight";\n' +
      '})(BlockElementType || (BlockElementType = {}));\n' +
      '\n' +
      'var PositioningSystem;\n' +
      '\n' +
      '(function (PositioningSystem) {\n' +
      '  PositioningSystem["Auto"] = "auto";\n' +
      '  PositioningSystem["Grid"] = "grid";\n' +
      '})(PositioningSystem || (PositioningSystem = {}));\n' +
      '\n' +
      'var ActionType;\n' +
      '\n' +
      '(function (ActionType) {\n' +
      '  ActionType["Connect"] = "connect";\n' +
      '  ActionType["AddNewBlock"] = "newBlock";\n' +
      '  ActionType["ChangePosition"] = "changePosition";\n' +
      '  ActionType["ChangeLabel"] = "changeLabel";\n' +
      '  ActionType["Highlight"] = "highlight";\n' +
      '  ActionType["RemoveHighlight"] = "removeHighlight";\n' +
      '})(ActionType || (ActionType = {}));\n' +
      '\n' +
      'var ChangeType;\n' +
      '\n' +
      '(function (ChangeType) {\n' +
      '  ChangeType[ChangeType["AddNewBlock"] = 0] = "AddNewBlock";\n' +
      '  ChangeType[ChangeType["ChangeStyle"] = 1] = "ChangeStyle";\n' +
      '  ChangeType[ChangeType["RemoveBlock"] = 2] = "RemoveBlock";\n' +
      '})(ChangeType || (ChangeType = {}));\n' +
      '\n' +
      'function isNotNullOrUndefined(obj) {\n' +
      '  return obj !== null && typeof obj !== "undefined";\n' +
      '}\n' +
      'function isNullOrUndefined(obj) {\n' +
      '  return obj === null || typeof obj === "undefined";\n' +
      '}\n' +
      'function isString(obj) {\n' +
      '  return typeof obj === "string";\n' +
      '}\n' +
      'function isBlockElementDescription(obj) {\n' +
      '  return typeof obj === "object" && isNotNullOrUndefined(obj) && "label" in obj;\n' +
      '}\n' +
      'function isParentBlockElement(obj) {\n' +
      '  return !!obj && !!obj.id && !!obj.label && Array.isArray(obj.children) && obj.children.length > 0;\n' +
      '}\n' +
      'function isArchitectureDescription(obj) {\n' +
      '  if (!!obj) {\n' +
      '    var maybeDescription = obj;\n' +
      '    return !!maybeDescription.blocks\n' +
      '    /* && !!maybeDescription.animation && !!maybeDescription.phases */\n' +
      '    ;\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isRectPositioning(obj) {\n' +
      '  if (!!obj) {\n' +
      '    var rectPos = obj;\n' +
      '    return isNotNullOrUndefined(rectPos.x) && isNotNullOrUndefined(rectPos.y)\n' +
      '    /* && isNotNullOrUndefined(rectPos.width)  && isNotNullOrUndefined(rectPos.height)*/\n' +
      '    ;\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isPhaseAction(obj) {\n' +
      '  if (obj) {\n' +
      '    var action = obj;\n' +
      '    return typeof action === "object" && !Array.isArray(action) && Object.keys(action).every(function (x) {\n' +
      '      var val = action[x];\n' +
      '\n' +
      '      if (typeof val === "string") {\n' +
      '        return true;\n' +
      '      }\n' +
      '\n' +
      '      if (Array.isArray(val)) {\n' +
      '        return val.every(function (y) {\n' +
      '          return typeof y === "string" || isActionSetting(y);\n' +
      '        });\n' +
      '      }\n' +
      '\n' +
      '      return Object.values(ActionType).some(function (y) {\n' +
      '        return y === x;\n' +
      '      });\n' +
      '    });\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isParallelPhase(obj) {\n' +
      '  if (obj) {\n' +
      '    var phase = obj;\n' +
      '    return typeof phase === "object" && !Array.isArray(phase) && !isPhaseAction(phase);\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isGraduallyPhases(obj) {\n' +
      '  return !!obj && Array.isArray(obj);\n' +
      '}\n' +
      'function isConnectActionSetting(obj) {\n' +
      '  if (obj) {\n' +
      '    var connect = obj;\n' +
      '    return !!connect.to && !!connect.from;\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isAddNewBlockActionSetting(obj) {\n' +
      '  if (obj) {\n' +
      '    var connect = obj;\n' +
      '    return isBlockElementDescription(connect);\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isActionSetting(obj) {\n' +
      '  var action = obj;\n' +
      '  return isConnectActionSetting(action) && isAddNewBlockActionSetting(action);\n' +
      '}\n' +
      'function isArray(obj) {\n' +
      '  return Array.isArray(obj);\n' +
      '}\n' +
      'function isLineBlockElementDescription(obj) {\n' +
      '  if (!!obj) {\n' +
      '    var line = obj;\n' +
      '    return line.type === BlockElementType.Line;\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isLineBlockElement(obj) {\n' +
      '  if (!!obj) {\n' +
      '    var line = obj;\n' +
      '    return line.type === BlockElementType.Line;\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isContainerBlock(obj) {\n' +
      '  if (!!obj) {\n' +
      '    var container = obj;\n' +
      '    if (!!container.parentId) return true;\n' +
      '    var blockEl = obj;\n' +
      '    return !blockEl.type;\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isFormulaValue(obj) {\n' +
      '  if (!!obj) {\n' +
      '    var formulaValue = obj;\n' +
      '    return !!formulaValue.formula && typeof formulaValue.formula === "string" || typeof formulaValue === "string";\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isHasLabel(obj) {\n' +
      '  return !!obj && typeof obj.label === "string";\n' +
      '}\n' +
      '\n' +
      'function deepCopy(val) {\n' +
      '  return !!val ? JSON.parse(JSON.stringify(val)) : val;\n' +
      '}\n' +
      '\n' +
      'function createBlockElementByString(id, label, blockStyle) {\n' +
      '  var _blockStyle$label;\n' +
      '\n' +
      '  return {\n' +
      '    id: id,\n' +
      '    label: (_blockStyle$label = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label : label,\n' +
      '    enter: getDefaultEnter()\n' +
      '  };\n' +
      '}\n' +
      'function createBlockElementByDescription(id, element, blockStyle) {\n' +
      '  var _ref, _blockStyle$label2, _deepCopy;\n' +
      '\n' +
      '  return {\n' +
      '    label: (_ref = (_blockStyle$label2 = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label2 : element.label) != null ? _ref : id,\n' +
      '    enter: (_deepCopy = deepCopy(element.enter)) != null ? _deepCopy : getDefaultEnter(),\n' +
      '    id: id\n' +
      '  };\n' +
      '}\n' +
      'function getDefaultEnter() {\n' +
      '  return {\n' +
      '    from: {\n' +
      '      opacity: 0\n' +
      '    },\n' +
      '    to: {\n' +
      '      opacity: 1,\n' +
      '      duration: 3\n' +
      '    }\n' +
      '  };\n' +
      '}\n' +
      '\n' +
      'function _extends() {\n' +
      '  _extends = Object.assign || function (target) {\n' +
      '    for (var i = 1; i < arguments.length; i++) {\n' +
      '      var source = arguments[i];\n' +
      '\n' +
      '      for (var key in source) {\n' +
      '        if (Object.prototype.hasOwnProperty.call(source, key)) {\n' +
      '          target[key] = source[key];\n' +
      '        }\n' +
      '      }\n' +
      '    }\n' +
      '\n' +
      '    return target;\n' +
      '  };\n' +
      '\n' +
      '  return _extends.apply(this, arguments);\n' +
      '}\n' +
      '\n' +
      'function createLineElementByDescription(id, value, blockStyle) {\n' +
      '  var _ref, _blockStyle$label;\n' +
      '\n' +
      '  return _extends({\n' +
      '    id: id\n' +
      '  }, value, {\n' +
      '    label: (_ref = (_blockStyle$label = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label : value.label) != null ? _ref : id\n' +
      '  });\n' +
      '}\n' +
      '\n' +
      'function blockGroupDescriptionsToBlock(architecture) {\n' +
      '  var description = architecture.blocks;\n' +
      '\n' +
      '  var blockGroupDescriptionsToBlock2 = function blockGroupDescriptionsToBlock2(description) {\n' +
      '    var blocks = Object.keys(description).flatMap(function (key) {\n' +
      '      var _architecture$style, _architecture$style$b;\n' +
      '\n' +
      '      var value = description[key];\n' +
      '      var blockStyle = (_architecture$style = architecture.style) == null ? void 0 : (_architecture$style$b = _architecture$style.blocks) == null ? void 0 : _architecture$style$b[key];\n' +
      '\n' +
      '      if (isString(value)) {\n' +
      '        return createBlockElementByString(key, value, blockStyle);\n' +
      '      }\n' +
      '\n' +
      '      if (isBlockElementDescription(value)) {\n' +
      '        if (isLineBlockElementDescription(value)) {\n' +
      '          return createLineElementByDescription(key, value, blockStyle);\n' +
      '        }\n' +
      '\n' +
      '        return createBlockElementByDescription(key, value, blockStyle);\n' +
      '      }\n' +
      '\n' +
      '      if (value === null) {\n' +
      '        return createBlockElementByString(key, key, blockStyle);\n' +
      '      }\n' +
      '\n' +
      '      var items = blockGroupDescriptionsToBlock2(value);\n' +
      '      items.forEach(function (x) {\n' +
      '        var _x$parentId;\n' +
      '\n' +
      '        return isContainerBlock(x) ? x.parentId = (_x$parentId = x.parentId) != null ? _x$parentId : key : null;\n' +
      '      });\n' +
      '      return [{\n' +
      '        id: key,\n' +
      '        label: key,\n' +
      '        children: items.filter(function (x) {\n' +
      '          return isContainerBlock(x) && x.parentId === key;\n' +
      '        }),\n' +
      '        enter: getDefaultEnter()\n' +
      '      }].concat(items);\n' +
      '    });\n' +
      '    return blocks;\n' +
      '  };\n' +
      '\n' +
      '  return blockGroupDescriptionsToBlock2(description);\n' +
      '}\n' +
      '\n' +
      'function getNumber(obj) {\n' +
      '  return isRef(obj) ? obj.value : obj;\n' +
      '}\n' +
      '\n' +
      'function getFormulaValueFuncContext(blocksPositioning, setting) {\n' +
      '  return {\n' +
      '    blockNamesAsFuncParams: blocksPositioning.value.map(function (x) {\n' +
      '      return x.blockId;\n' +
      '    }).join(", ") + ", _",\n' +
      '    blocksValues: [].concat(blocksPositioning.value.map(function (x) {\n' +
      '      return x.position;\n' +
      '    }), [{\n' +
      '      viewBox: {\n' +
      '        x: unref(setting.viewBox.x),\n' +
      '        y: unref(setting.viewBox.y),\n' +
      '        w: unref(setting.viewBox.w),\n' +
      '        h: unref(setting.viewBox.h)\n' +
      '      }\n' +
      '    }])\n' +
      '  };\n' +
      '}\n' +
      '\n' +
      'function getFormulaValue(val, positioning, setting) {\n' +
      '  if (typeof val === "number") {\n' +
      '    return ref(val);\n' +
      '  }\n' +
      '\n' +
      '  if (isFormulaValue(val)) {\n' +
      '    var formula = typeof val === "string" ? val : val.formula;\n' +
      '    return computed(function () {\n' +
      '      var context = getFormulaValueFuncContext(positioning, setting);\n' +
      '      var fn = Function("\\"use strict\\";return (function(" + context.blockNamesAsFuncParams + "){return " + formula + ";})")();\n' +
      '      return fn.apply(null, context.blocksValues) || 0;\n' +
      '    });\n' +
      '  }\n' +
      '\n' +
      '  return ref(0);\n' +
      '}\n' +
      '\n' +
      'function lineBlockPosition(blocksPositions, block, setting, blockStyle) {\n' +
      '  var _blockStyle$position$, _blockStyle$position, _blockStyle$position2, _blockStyle$position$2, _blockStyle$position3, _blockStyle$position4, _blockStyle$position$3, _blockStyle$position5, _blockStyle$position6, _blockStyle$position$4, _blockStyle$position7, _blockStyle$position8, _blockStyle$position9, _blockStyle$position10, _blockStyle$position11, _blockStyle$position12, _blockStyle$position13, _blockStyle$position14, _blockStyle$position15, _blockStyle$position16;\n' +
      '\n' +
      '  var blockFromPos = computed(function () {\n' +
      '    var _blocksPositions$valu;\n' +
      '\n' +
      '    return (_blocksPositions$valu = blocksPositions.value) == null ? void 0 : _blocksPositions$valu.find(function (x) {\n' +
      '      return x.blockId === block.from;\n' +
      '    });\n' +
      '  });\n' +
      '  var blockToPos = computed(function () {\n' +
      '    var _blocksPositions$valu2;\n' +
      '\n' +
      '    return (_blocksPositions$valu2 = blocksPositions.value) == null ? void 0 : _blocksPositions$valu2.find(function (x) {\n' +
      '      return x.blockId === block.to;\n' +
      '    });\n' +
      '  });\n' +
      '  var isToRighter = computed(function () {\n' +
      '    var _blockFromPos$value, _blockToPos$value, _blockFromPos$value2, _blockToPos$value2;\n' +
      '\n' +
      '    return ((_blockFromPos$value = blockFromPos.value) == null ? void 0 : _blockFromPos$value.position) && ((_blockToPos$value = blockToPos.value) == null ? void 0 : _blockToPos$value.position) && isRectPositioning((_blockFromPos$value2 = blockFromPos.value) == null ? void 0 : _blockFromPos$value2.position) && isRectPositioning((_blockToPos$value2 = blockToPos.value) == null ? void 0 : _blockToPos$value2.position) && blockFromPos.value.position.x < blockToPos.value.position.x;\n' +
      '  });\n' +
      '\n' +
      '  var getValueByCtx = function getValueByCtx(x) {\n' +
      '    return getFormulaValue(x, blocksPositions, setting);\n' +
      '  };\n' +
      '\n' +
      '  var indentX1 = getValueByCtx((_blockStyle$position$ = blockStyle == null ? void 0 : (_blockStyle$position = blockStyle.position) == null ? void 0 : _blockStyle$position.indentX1) != null ? _blockStyle$position$ : blockStyle == null ? void 0 : (_blockStyle$position2 = blockStyle.position) == null ? void 0 : _blockStyle$position2.indentX);\n' +
      '  var indentX2 = getValueByCtx((_blockStyle$position$2 = blockStyle == null ? void 0 : (_blockStyle$position3 = blockStyle.position) == null ? void 0 : _blockStyle$position3.indentX2) != null ? _blockStyle$position$2 : blockStyle == null ? void 0 : (_blockStyle$position4 = blockStyle.position) == null ? void 0 : _blockStyle$position4.indentX);\n' +
      '  var indentY1 = getValueByCtx((_blockStyle$position$3 = blockStyle == null ? void 0 : (_blockStyle$position5 = blockStyle.position) == null ? void 0 : _blockStyle$position5.indentY1) != null ? _blockStyle$position$3 : blockStyle == null ? void 0 : (_blockStyle$position6 = blockStyle.position) == null ? void 0 : _blockStyle$position6.indentY);\n' +
      '  var indentY2 = getValueByCtx((_blockStyle$position$4 = blockStyle == null ? void 0 : (_blockStyle$position7 = blockStyle.position) == null ? void 0 : _blockStyle$position7.indentY2) != null ? _blockStyle$position$4 : blockStyle == null ? void 0 : (_blockStyle$position8 = blockStyle.position) == null ? void 0 : _blockStyle$position8.indentY);\n' +
      '  var x1 = blockStyle != null && (_blockStyle$position9 = blockStyle.position) != null && _blockStyle$position9.x1 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position10 = blockStyle.position) == null ? void 0 : _blockStyle$position10.x1) : computed(function () {\n' +
      '    var blockPos = blockFromPos.value;\n' +
      '\n' +
      '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.x) {\n' +
      '      return getNumber(blockPos.position.x) + (!isToRighter.value ? 0 : getNumber(blockPos.position.width)) + indentX1.value;\n' +
      '    }\n' +
      '\n' +
      '    return indentX1.value;\n' +
      '  });\n' +
      '  var y1 = blockStyle != null && (_blockStyle$position11 = blockStyle.position) != null && _blockStyle$position11.y1 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position12 = blockStyle.position) == null ? void 0 : _blockStyle$position12.y1) : computed(function () {\n' +
      '    var blockPos = blockFromPos.value;\n' +
      '\n' +
      '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.y) {\n' +
      '      return getNumber(blockPos == null ? void 0 : blockPos.position.y) + getNumber(blockPos.position.height) / 2 + indentY1.value;\n' +
      '    }\n' +
      '\n' +
      '    return indentY1.value;\n' +
      '  });\n' +
      '  var x2 = blockStyle != null && (_blockStyle$position13 = blockStyle.position) != null && _blockStyle$position13.x2 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position14 = blockStyle.position) == null ? void 0 : _blockStyle$position14.x2) : computed(function () {\n' +
      '    var blockPos = blockToPos.value;\n' +
      '\n' +
      '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.x) {\n' +
      '      return getNumber(blockPos == null ? void 0 : blockPos.position.x) + (!isToRighter.value ? getNumber(blockPos.position.width) : 0) + indentX2.value;\n' +
      '    }\n' +
      '\n' +
      '    return indentX2.value;\n' +
      '  });\n' +
      '  var y2 = blockStyle != null && (_blockStyle$position15 = blockStyle.position) != null && _blockStyle$position15.y2 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position16 = blockStyle.position) == null ? void 0 : _blockStyle$position16.y2) : computed(function () {\n' +
      '    var blockPos = blockToPos.value;\n' +
      '\n' +
      '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.y) {\n' +
      '      return getNumber(blockPos == null ? void 0 : blockPos.position.y) + getNumber(blockPos.position.height) / 2 + indentY2.value;\n' +
      '    }\n' +
      '\n' +
      '    return indentY2.value;\n' +
      '  });\n' +
      '  return {\n' +
      '    blockId: block.id,\n' +
      '    position: {\n' +
      '      x1: x1,\n' +
      '      y1: y1,\n' +
      '      x2: x2,\n' +
      '      y2: y2\n' +
      '    }\n' +
      '  };\n' +
      '}\n' +
      '\n' +
      'function autoPositioning(setting) {\n' +
      '  var _setting$sizeSetting;\n' +
      '\n' +
      '  var sizeSetting = (_setting$sizeSetting = setting.sizeSetting) != null ? _setting$sizeSetting : defaultSiseSettings;\n' +
      '  var blocks = setting.blocks;\n' +
      '  var blocksPositioning = ref([]);\n' +
      '  blocksPositioning.value = blocks.map(function (block) {\n' +
      '    if (!isContainerBlock(block)) {\n' +
      '      if (isLineBlockElement(block)) {\n' +
      '        return lineBlockPosition(blocksPositioning, block, setting.setting);\n' +
      '      }\n' +
      '\n' +
      '      return null;\n' +
      '    }\n' +
      '\n' +
      '    var parentBlockComp = computed(function () {\n' +
      '      return blocks.find(function (x) {\n' +
      '        return x.id === block.parentId;\n' +
      '      });\n' +
      '    });\n' +
      '    var parentPosComp = computed(function () {\n' +
      '      var _parentBlockComp$valu;\n' +
      '\n' +
      '      return (_parentBlockComp$valu = parentBlockComp.value) != null && _parentBlockComp$valu.id ? getBlockPositioning(blocksPositioning.value, parentBlockComp.value.id) : null;\n' +
      '    });\n' +
      '    var blockInParentIndexComp = computed(function () {\n' +
      '      return isParentBlockElement(parentBlockComp.value) ? parentBlockComp.value.children.indexOf(block) : -1;\n' +
      '    });\n' +
      '    var columnIndexComp = computed(function () {\n' +
      '      return blockInParentIndexComp.value % sizeSetting.parentChildrenInRowCount;\n' +
      '    });\n' +
      '    var rowIndexComp = computed(function () {\n' +
      '      return Math.floor(blockInParentIndexComp.value / sizeSetting.parentChildrenInRowCount);\n' +
      '    });\n' +
      '    var brotherLeftBlockComp = computed(function () {\n' +
      '      return isParentBlockElement(parentBlockComp.value) ? parentBlockComp.value.children[blockInParentIndexComp.value - 1] : null;\n' +
      '    });\n' +
      '    var brotherLeftPosComp = computed(function () {\n' +
      '      var _brotherLeftBlockComp, _brotherLeftBlockComp2;\n' +
      '\n' +
      '      return (_brotherLeftBlockComp = brotherLeftBlockComp.value) != null && _brotherLeftBlockComp.id ? getBlockPositioning(blocksPositioning.value, (_brotherLeftBlockComp2 = brotherLeftBlockComp.value) == null ? void 0 : _brotherLeftBlockComp2.id) : null;\n' +
      '    });\n' +
      '    var x = computed(function () {\n' +
      '      if (block.parentId) {\n' +
      '        var parentBlock = parentBlockComp.value;\n' +
      '        var parentPos = parentPosComp.value;\n' +
      '\n' +
      '        if (isParentBlockElement(parentBlock) && isRectPositioning(parentPos)) {\n' +
      '          if (columnIndexComp.value === 0) {\n' +
      '            return getNumber(parentPos.x) + sizeSetting.gap;\n' +
      '          }\n' +
      '\n' +
      '          var brotherPos = brotherLeftPosComp.value;\n' +
      '\n' +
      '          if (isRectPositioning(brotherPos)) {\n' +
      '            return getNumber(brotherPos.x) + getNumber(brotherPos.width) + sizeSetting.gap;\n' +
      '          }\n' +
      '\n' +
      '          return getNumber(parentPos.x) + sizeSetting.gap;\n' +
      '        }\n' +
      '      }\n' +
      '\n' +
      '      return sizeSetting.gap;\n' +
      '    });\n' +
      '    var y = computed(function () {\n' +
      '      if (block.parentId) {\n' +
      '        var parentBlock = parentBlockComp.value;\n' +
      '        var parentPos = parentPosComp.value;\n' +
      '\n' +
      '        if (isParentBlockElement(parentBlock) && isRectPositioning(parentPos)) {\n' +
      '          if (rowIndexComp.value === 0) {\n' +
      '            return getNumber(parentPos.y) + sizeSetting.gap;\n' +
      '          }\n' +
      '\n' +
      '          var previousRowIndex = rowIndexComp.value - 1;\n' +
      '          var startIndex = previousRowIndex * sizeSetting.parentChildrenInRowCount;\n' +
      '          var maxY = 0;\n' +
      '          parentBlock.children.slice(startIndex, startIndex + sizeSetting.parentChildrenInRowCount).forEach(function (brotherBlock) {\n' +
      '            var pos = getBlockPositioning(blocksPositioning.value, brotherBlock.id);\n' +
      '\n' +
      '            if (isRectPositioning(pos)) {\n' +
      '              var newY = getNumber(pos.y) + getNumber(pos.height);\n' +
      '\n' +
      '              if (newY > maxY) {\n' +
      '                maxY = newY;\n' +
      '              }\n' +
      '            }\n' +
      '          });\n' +
      '          return maxY + sizeSetting.gap;\n' +
      '        }\n' +
      '      }\n' +
      '\n' +
      '      return sizeSetting.gap;\n' +
      '    });\n' +
      '    var width = computed(function () {\n' +
      '      if (isParentBlockElement(block)) {\n' +
      '        var maxX = 0;\n' +
      '        block.children.forEach(function (child) {\n' +
      '          var _blocksPositioning$va;\n' +
      '\n' +
      '          var pos = (_blocksPositioning$va = blocksPositioning.value.find(function (x) {\n' +
      '            return x.blockId === child.id;\n' +
      '          })) == null ? void 0 : _blocksPositioning$va.position;\n' +
      '\n' +
      '          if (isRectPositioning(pos)) {\n' +
      '            var newX = getNumber(pos.x) + getNumber(pos.width);\n' +
      '\n' +
      '            if (newX > maxX) {\n' +
      '              maxX = newX;\n' +
      '            }\n' +
      '          }\n' +
      '        });\n' +
      '        return maxX - x.value + sizeSetting.gap;\n' +
      '      }\n' +
      '\n' +
      '      return sizeSetting.rectWidth;\n' +
      '    });\n' +
      '    var height = computed(function () {\n' +
      '      if (isParentBlockElement(block)) {\n' +
      '        var maxY = 0;\n' +
      '        block.children.forEach(function (child) {\n' +
      '          var _blocksPositioning$va2;\n' +
      '\n' +
      '          var pos = (_blocksPositioning$va2 = blocksPositioning.value.find(function (x) {\n' +
      '            return x.blockId === child.id;\n' +
      '          })) == null ? void 0 : _blocksPositioning$va2.position;\n' +
      '\n' +
      '          if (isRectPositioning(pos)) {\n' +
      '            var newY = getNumber(pos.y) + getNumber(pos.height);\n' +
      '\n' +
      '            if (newY > maxY) {\n' +
      '              maxY = newY;\n' +
      '            }\n' +
      '          }\n' +
      '        });\n' +
      '        return maxY - y.value + sizeSetting.gap;\n' +
      '      }\n' +
      '\n' +
      '      return sizeSetting.rectHeight;\n' +
      '    });\n' +
      '    return {\n' +
      '      blockId: block.id,\n' +
      '      position: {\n' +
      '        x: x,\n' +
      '        y: y,\n' +
      '        width: width,\n' +
      '        height: height\n' +
      '      }\n' +
      '    };\n' +
      '  }).filter(isNotNullOrUndefined);\n' +
      '  return blocksPositioning.value;\n' +
      '}\n' +
      'var defaultSiseSettings = {\n' +
      '  rectHeight: 20,\n' +
      '  rectWidth: 30,\n' +
      '  gap: 10,\n' +
      '  parentChildrenInRowCount: 3\n' +
      '};\n' +
      '\n' +
      'function getBlockPositioning(blocksPositioning, id) {\n' +
      '  var _blocksPositioning$fi;\n' +
      '\n' +
      '  return (_blocksPositioning$fi = blocksPositioning.find(function (x) {\n' +
      '    return x.blockId === id;\n' +
      '  })) == null ? void 0 : _blocksPositioning$fi.position;\n' +
      '}\n' +
      '\n' +
      'function gridPositioning(option) {\n' +
      '  var _option$architectureD3;\n' +
      '\n' +
      '  var blocks = option.blocks.filter(function (x) {\n' +
      '    return x.id !== "main";\n' +
      '  });\n' +
      '  var notSettetBlocks = blocks.filter(function (block) {\n' +
      '    var _option$architectureD, _option$architectureD2;\n' +
      '\n' +
      '    if (isLineBlockElement(block)) {\n' +
      '      return false;\n' +
      '    }\n' +
      '\n' +
      '    var styleBlock = (_option$architectureD = option.architectureDescription.style) == null ? void 0 : (_option$architectureD2 = _option$architectureD.blocks) == null ? void 0 : _option$architectureD2[block.id];\n' +
      '    return !styleBlock || !styleBlock.position;\n' +
      '  });\n' +
      '  var style = (_option$architectureD3 = option.architectureDescription.style) == null ? void 0 : _option$architectureD3.blocks;\n' +
      '\n' +
      '  if (!style || notSettetBlocks.length > 0) {\n' +
      '    throw "Not every block has setting: [" + notSettetBlocks.map(function (x) {\n' +
      '      return x.id;\n' +
      '    }) + "]";\n' +
      '  }\n' +
      '\n' +
      '  var gridSize = {\n' +
      '    columnWidth: 20,\n' +
      '    rowHeight: 20\n' +
      '  };\n' +
      '  var blocksPositioning = ref([]);\n' +
      '\n' +
      '  var getValueByCtx = function getValueByCtx(x, multiplier) {\n' +
      '    if (multiplier === void 0) {\n' +
      '      multiplier = 1;\n' +
      '    }\n' +
      '\n' +
      '    var res = getFormulaValue(x, blocksPositioning, option.setting);\n' +
      '\n' +
      '    if (isFormulaValue(x)) {\n' +
      '      return res;\n' +
      '    }\n' +
      '\n' +
      '    return ref(res.value * multiplier);\n' +
      '  };\n' +
      '\n' +
      '  blocksPositioning.value = blocks.map(function (block) {\n' +
      '    var blockStyle = style[block.id];\n' +
      '\n' +
      '    if (!isContainerBlock(block)) {\n' +
      '      if (isLineBlockElement(block)) {\n' +
      '        return lineBlockPosition(blocksPositioning, block, option.setting, blockStyle);\n' +
      '      }\n' +
      '\n' +
      '      return null;\n' +
      '    }\n' +
      '\n' +
      '    if (blockStyle.position) {\n' +
      '      var _getValueByCtx, _getValueByCtx2;\n' +
      '\n' +
      '      var pos = blockStyle.position;\n' +
      '      var indentX = (_getValueByCtx = getValueByCtx(pos.indentX)) != null ? _getValueByCtx : 0;\n' +
      '      var indentY = (_getValueByCtx2 = getValueByCtx(pos.indentY)) != null ? _getValueByCtx2 : 0;\n' +
      '      return {\n' +
      '        blockId: block.id,\n' +
      '        position: {\n' +
      '          x: computed(function () {\n' +
      '            return getValueByCtx(pos.x, gridSize.columnWidth).value + indentX.value;\n' +
      '          }),\n' +
      '          y: computed(function () {\n' +
      '            return getValueByCtx(pos.y, gridSize.rowHeight).value + indentY.value;\n' +
      '          }),\n' +
      '          width: computed(function () {\n' +
      '            return getValueByCtx(pos.w, gridSize.columnWidth).value + indentX.value;\n' +
      '          }),\n' +
      '          height: computed(function () {\n' +
      '            return getValueByCtx(pos.h, gridSize.rowHeight).value + indentY.value;\n' +
      '          })\n' +
      '        }\n' +
      '      };\n' +
      '    }\n' +
      '\n' +
      '    return null;\n' +
      '  }).filter(isNotNullOrUndefined);\n' +
      '  return blocksPositioning.value;\n' +
      '}\n' +
      '\n' +
      'function prepareCss(architectureDescription) {\n' +
      '  var _architectureDescript, _architectureDescript2;\n' +
      '\n' +
      '  return (_architectureDescript = architectureDescription.style) != null && _architectureDescript.css ? serialize(compile("#" + architectureDescription.name + " {" + ((_architectureDescript2 = architectureDescription.style) == null ? void 0 : _architectureDescript2.css) + "}"), stringify) : undefined;\n' +
      '}\n' +
      '\n' +
      'function styleDescriptionToArchitectureStyle(architectureDescription, blocks, setting) {\n' +
      '  var _architectureDescript, _architectureDescript2;\n' +
      '\n' +
      '  var positioningSystem = (_architectureDescript = architectureDescription.style) == null ? void 0 : _architectureDescript.positioning;\n' +
      '  var css = prepareCss(architectureDescription);\n' +
      '  return {\n' +
      '    id: "style",\n' +
      '    positioning: !positioningSystem || positioningSystem === PositioningSystem.Auto ? autoPositioning({\n' +
      '      architectureDescription: architectureDescription,\n' +
      '      blocks: blocks,\n' +
      '      setting: setting\n' +
      '    }) : gridPositioning({\n' +
      '      architectureDescription: architectureDescription,\n' +
      '      blocks: blocks,\n' +
      '      setting: setting\n' +
      '    }),\n' +
      '    debug: deepCopy((_architectureDescript2 = architectureDescription.style) == null ? void 0 : _architectureDescript2.debug),\n' +
      '    css: css,\n' +
      '    blocks: architectureDescription.style ? generateBlocksStyle(architectureDescription.style) : undefined\n' +
      '  };\n' +
      '}\n' +
      '\n' +
      'function generateBlocksStyle(style) {\n' +
      '  return style.blocks;\n' +
      '}\n' +
      '\n' +
      'function deepAssign() {\n' +
      '  var isObject = function isObject(obj) {\n' +
      "    return obj && typeof obj === 'object';\n" +
      '  };\n' +
      '\n' +
      '  function deepMergeInner(target, source) {\n' +
      '    Object.keys(source).forEach(function (key) {\n' +
      '      var targetValue = target[key];\n' +
      '      var sourceValue = source[key];\n' +
      '\n' +
      '      if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n' +
      '        target[key] = targetValue.concat(sourceValue);\n' +
      '      } else if (isObject(targetValue) && isObject(sourceValue)) {\n' +
      '        target[key] = deepMergeInner(Object.assign({}, targetValue), sourceValue);\n' +
      '      } else {\n' +
      '        target[key] = sourceValue;\n' +
      '      }\n' +
      '    });\n' +
      '    return target;\n' +
      '  }\n' +
      '\n' +
      '  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n' +
      '    objects[_key] = arguments[_key];\n' +
      '  }\n' +
      '\n' +
      '  if (objects.length < 2) {\n' +
      "    throw new Error('deepMerge: this function expects at least 2 objects to be provided');\n" +
      '  }\n' +
      '\n' +
      '  if (objects.some(function (object) {\n' +
      '    return !isObject(object);\n' +
      '  })) {\n' +
      `    throw new Error('deepMerge: all values should be of type "object"');\n` +
      '  }\n' +
      '\n' +
      '  var target = objects.shift();\n' +
      '  var source;\n' +
      '\n' +
      '  while (source = objects.shift()) {\n' +
      '    deepMergeInner(target, source);\n' +
      '  }\n' +
      '\n' +
      '  return target;\n' +
      '}\n' +
      '\n' +
      'function addHighlightActionExecutor(context, action) {\n' +
      '  var _val$gap;\n' +
      '\n' +
      '  if (!context) {\n' +
      '    return null;\n' +
      '  }\n' +
      '\n' +
      '  var val = action.value;\n' +
      '  var blocks = typeof val.blocks === "string" ? [val.blocks] : val.blocks;\n' +
      '  var gap = (_val$gap = val.gap) != null ? _val$gap : 5;\n' +
      '  return blocks.flatMap(function (block) {\n' +
      '    return [{\n' +
      '      type: ChangeType.ChangeStyle,\n' +
      '      setting: {\n' +
      '        blockId: "highlight_" + block,\n' +
      '        newStyle: {\n' +
      '          position: {\n' +
      '            x: block + ".x - " + gap,\n' +
      '            y: block + ".y - " + gap,\n' +
      '            w: block + ".width + " + gap * 2,\n' +
      '            h: block + ".height + " + gap * 2\n' +
      '          },\n' +
      '          isHighlight: true\n' +
      '        }\n' +
      '      }\n' +
      '    }, {\n' +
      '      type: ChangeType.AddNewBlock,\n' +
      '      setting: {\n' +
      '        newBlockId: "highlight_" + block,\n' +
      '        blockSettings: {\n' +
      '          type: BlockElementType.Rect,\n' +
      '          label: ""\n' +
      '        }\n' +
      '      }\n' +
      '    }];\n' +
      '  });\n' +
      '}\n' +
      '\n' +
      'function addNewBlockActionExecutor(context, action) {\n' +
      '  if (!context) {\n' +
      '    return null;\n' +
      '  }\n' +
      '\n' +
      '  var val = action.value;\n' +
      '  return Object.keys(val).map(function (key) {\n' +
      '    return {\n' +
      '      type: ChangeType.AddNewBlock,\n' +
      '      setting: {\n' +
      '        newBlockId: key,\n' +
      '        blockSettings: val[key]\n' +
      '      }\n' +
      '    };\n' +
      '  });\n' +
      '}\n' +
      '\n' +
      'function changeBlockPositionActionExecutor(context, action) {\n' +
      '  if (!context) {\n' +
      '    return null;\n' +
      '  }\n' +
      '\n' +
      '  var val = action.value;\n' +
      '  return Object.keys(val).map(function (key) {\n' +
      '    return {\n' +
      '      type: ChangeType.ChangeStyle,\n' +
      '      setting: {\n' +
      '        blockId: key,\n' +
      '        newStyle: {\n' +
      '          position: val[key]\n' +
      '        }\n' +
      '      }\n' +
      '    };\n' +
      '  });\n' +
      '}\n' +
      '\n' +
      'function changeLabelActionExecutor(context, action) {\n' +
      '  if (!context) {\n' +
      '    return null;\n' +
      '  }\n' +
      '\n' +
      '  var val = action.value;\n' +
      '  return Object.keys(val).map(function (key) {\n' +
      '    var v = val[key];\n' +
      '    return {\n' +
      '      type: ChangeType.ChangeStyle,\n' +
      '      setting: {\n' +
      '        blockId: key,\n' +
      '        newStyle: {\n' +
      '          label: isHasLabel(v) ? v.label : v\n' +
      '        }\n' +
      '      }\n' +
      '    };\n' +
      '  });\n' +
      '}\n' +
      '\n' +
      'function connectActionExecutor(context, action) {\n' +
      '  if (isConnectActionSetting(action.value)) {\n' +
      '    var _action$value$name, _action$value$label;\n' +
      '\n' +
      '    var newBlockId = (_action$value$name = action.value.name) != null ? _action$value$name : "line_" + context.indexItem.phaseId;\n' +
      '    return [{\n' +
      '      type: ChangeType.AddNewBlock,\n' +
      '      setting: {\n' +
      '        newBlockId: newBlockId,\n' +
      '        blockSettings: _extends({}, action.value, {\n' +
      '          type: BlockElementType.Line,\n' +
      '          label: (_action$value$label = action.value.label) != null ? _action$value$label : newBlockId\n' +
      '        })\n' +
      '      }\n' +
      '    }];\n' +
      '  }\n' +
      '\n' +
      '  return null;\n' +
      '}\n' +
      '\n' +
      'function removeHighlightActionExecutor(context, _) {\n' +
      '  var _context$architecture;\n' +
      '\n' +
      '  var blocks = ((_context$architecture = context.architecture.style) == null ? void 0 : _context$architecture.blocks) || {};\n' +
      '  return [{\n' +
      '    type: ChangeType.RemoveBlock,\n' +
      '    setting: {\n' +
      '      blocks: Object.keys(blocks).filter(function (x) {\n' +
      '        return blocks[x].isHighlight;\n' +
      '      })\n' +
      '    }\n' +
      '  }];\n' +
      '}\n' +
      '\n' +
      'function startPhases(architecture, phaseIndex, phaseInfo) {\n' +
      '  var indexItems = phaseIndex.getPhaseById(phaseInfo.current);\n' +
      '\n' +
      '  if (indexItems) {\n' +
      '    return indexItems.map(function (indexItem) {\n' +
      '      var actionContext = {\n' +
      '        indexItem: indexItem,\n' +
      '        architecture: architecture,\n' +
      '        phaseIndex: phaseIndex\n' +
      '      };\n' +
      '      var changes = indexItem.actions.flatMap(function (item) {\n' +
      '        return executePhaseIndex(item, actionContext);\n' +
      '      });\n' +
      '      changes.filter(isNotNullOrUndefined).forEach(function (change) {\n' +
      '        return makeChange(architecture, change);\n' +
      '      });\n' +
      '      return indexItem.nextPhaseId;\n' +
      '    })[0];\n' +
      '  }\n' +
      '\n' +
      '  return null;\n' +
      '}\n' +
      '\n' +
      'function executePhaseIndex(item, context) {\n' +
      '  if (item.action.name === ActionType.Connect) {\n' +
      '    return connectActionExecutor(context, item.action);\n' +
      '  } else if (item.action.name === ActionType.AddNewBlock) {\n' +
      '    return addNewBlockActionExecutor(context, item.action);\n' +
      '  } else if (item.action.name === ActionType.ChangePosition) {\n' +
      '    return changeBlockPositionActionExecutor(context, item.action);\n' +
      '  } else if (item.action.name === ActionType.ChangeLabel) {\n' +
      '    return changeLabelActionExecutor(context, item.action);\n' +
      '  } else if (item.action.name === ActionType.Highlight) {\n' +
      '    return addHighlightActionExecutor(context, item.action);\n' +
      '  } else if (item.action.name === ActionType.RemoveHighlight) {\n' +
      '    return removeHighlightActionExecutor(context);\n' +
      '  }\n' +
      '\n' +
      '  throw "Not implemented!";\n' +
      '}\n' +
      '\n' +
      'function makeChange(architecture, change) {\n' +
      '  if (change.type === ChangeType.AddNewBlock) {\n' +
      '    var setting = change.setting;\n' +
      '\n' +
      '    if (setting) {\n' +
      '      architecture.blocks[setting.newBlockId] = setting.blockSettings;\n' +
      '    }\n' +
      '  } else if (change.type === ChangeType.ChangeStyle) {\n' +
      '    var _architecture$style;\n' +
      '\n' +
      '    var _setting = change.setting;\n' +
      '\n' +
      '    if (_setting && (_architecture$style = architecture.style) != null && _architecture$style.blocks) {\n' +
      '      var _architecture$style2, _architecture$style2$;\n' +
      '\n' +
      '      var currentSetting = (_architecture$style2 = architecture.style) == null ? void 0 : (_architecture$style2$ = _architecture$style2.blocks) == null ? void 0 : _architecture$style2$[_setting.blockId];\n' +
      '\n' +
      '      if (currentSetting) {\n' +
      '        architecture.style.blocks[_setting.blockId] = deepAssign({}, currentSetting, _setting.newStyle);\n' +
      '      } else {\n' +
      '        architecture.style.blocks[_setting.blockId] = deepAssign({}, _setting.newStyle);\n' +
      '      }\n' +
      '    }\n' +
      '  } else if (change.type === ChangeType.RemoveBlock) {\n' +
      '    var _setting2 = change.setting;\n' +
      '\n' +
      '    _setting2.blocks.forEach(function (x) {\n' +
      '      var _architecture$style3, _architecture$style3$;\n' +
      '\n' +
      '      delete architecture.blocks[x];\n' +
      '      (_architecture$style3 = architecture.style) == null ? true : (_architecture$style3$ = _architecture$style3.blocks) == null ? true : delete _architecture$style3$[x];\n' +
      '    });\n' +
      '  } else {\n' +
      '    throw new Error("Function not implemented.");\n' +
      '  }\n' +
      '}\n' +
      '\n' +
      'function buildPhasesIndex(phases) {\n' +
      '  var index = buildIndexObject(phases);\n' +
      '  return {\n' +
      '    getPhaseById: function getPhaseById(id) {\n' +
      '      if (!id) {\n' +
      '        return index.filter(function (x) {\n' +
      '          return x.isStart;\n' +
      '        });\n' +
      '      }\n' +
      '\n' +
      '      var ids = [];\n' +
      '\n' +
      '      if (Array.isArray(id)) {\n' +
      '        ids = id.filter(isNotNullOrUndefined);\n' +
      '      } else {\n' +
      '        ids = [id];\n' +
      '      }\n' +
      '\n' +
      '      return index.filter(function (x) {\n' +
      '        return x.phaseId && ids.indexOf(x.phaseId) > -1;\n' +
      '      });\n' +
      '    },\n' +
      '    phases: index.map(function (x) {\n' +
      '      return x.phaseId;\n' +
      '    }),\n' +
      '    getPhaseIndex: function getPhaseIndex(phase) {\n' +
      '      return index.findIndex(function (x) {\n' +
      '        return x.phaseId === phase;\n' +
      '      });\n' +
      '    }\n' +
      '  };\n' +
      '}\n' +
      '\n' +
      'function buildIndexObject(phase, isStart, id) {\n' +
      '  if (isStart === void 0) {\n' +
      '    isStart = true;\n' +
      '  }\n' +
      '\n' +
      '  if (id === void 0) {\n' +
      '    id = "start";\n' +
      '  }\n' +
      '\n' +
      '  if (!phase) {\n' +
      '    return [];\n' +
      '  }\n' +
      '\n' +
      '  if (isPhaseAction(phase)) {\n' +
      '    var actions = Object.keys(phase).flatMap(function (key) {\n' +
      '      var action = phase[key];\n' +
      '      var actions = [];\n' +
      '\n' +
      '      if (!Array.isArray(action)) {\n' +
      '        actions = [action];\n' +
      '      } else {\n' +
      '        actions = action;\n' +
      '      }\n' +
      '\n' +
      '      return actions.map(function (y) {\n' +
      '        return {\n' +
      '          action: {\n' +
      '            name: key,\n' +
      '            value: y\n' +
      '          }\n' +
      '        };\n' +
      '      });\n' +
      '    });\n' +
      '    return [{\n' +
      '      isStart: isStart,\n' +
      '      nextPhaseId: null,\n' +
      '      phaseId: "" + id,\n' +
      '      actions: actions\n' +
      '    }];\n' +
      '  } else if (isParallelPhase(phase)) {\n' +
      '    var items = Object.keys(phase).flatMap(function (x) {\n' +
      '      var val = phase[x];\n' +
      '      return buildIndexObject(val, isStart, id + "_" + x);\n' +
      '    });\n' +
      '    return items;\n' +
      '  } else if (isGraduallyPhases(phase)) {\n' +
      '    var childId = id + "_child";\n' +
      '\n' +
      '    var _items = phase.map(function (x, index) {\n' +
      '      return buildIndexObject(x, isStart && index === 0, childId);\n' +
      '    });\n' +
      '\n' +
      '    _items.forEach(function (group, index) {\n' +
      '      group.forEach(function (groupItem) {\n' +
      '        if (groupItem.phaseId === childId) {\n' +
      '          groupItem.phaseId += "_" + index;\n' +
      '\n' +
      '          if (index + 1 < _items.length) {\n' +
      '            groupItem.nextPhaseId = childId + "_" + (index + 1);\n' +
      '          }\n' +
      '        }\n' +
      '      });\n' +
      '    });\n' +
      '\n' +
      '    return _items.flatMap(function (x) {\n' +
      '      return x;\n' +
      '    });\n' +
      '  }\n' +
      '\n' +
      '  throw "Not implemented!";\n' +
      '}\n' +
      '\n' +
      'function transformToArchitecture(description, setting) {\n' +
      '  var refDescription = isRef(description) ? description : ref(description);\n' +
      '  var value = refDescription.value;\n' +
      '  var transitionalArchitectureRef = ref(deepCopy(value));\n' +
      '  var transitionalArchitecture = transitionalArchitectureRef.value;\n' +
      '  transitionalArchitecture.blocks = {\n' +
      '    main: transitionalArchitecture.blocks\n' +
      '  };\n' +
      '  var architecture = computed(function () {\n' +
      '    if (isArchitectureDescription(transitionalArchitectureRef.value)) {\n' +
      '      return transformDescriptionToArchitecture(transitionalArchitectureRef, setting);\n' +
      '    }\n' +
      '\n' +
      '    return {\n' +
      '      name: "",\n' +
      '      blocks: ref([]),\n' +
      '      style: ref(null),\n' +
      '      phases: [],\n' +
      '      currentPhase: null,\n' +
      '      next: function next() {\n' +
      '        return null;\n' +
      '      },\n' +
      '      back: function back() {\n' +
      '        return null;\n' +
      '      },\n' +
      '      toPhase: function toPhase() {}\n' +
      '    };\n' +
      '  });\n' +
      '  return architecture;\n' +
      '}\n' +
      'function transformDescriptionToArchitecture(transitionalArchitectureRef, setting) {\n' +
      '  var oldValues = [];\n' +
      '  var enableWatcher = true;\n' +
      '  var currentPhase = reactive({\n' +
      '    current: null\n' +
      '  });\n' +
      '  watch(function () {\n' +
      '    return deepCopy(transitionalArchitectureRef.value);\n' +
      '  }, function (_, oldVal) {\n' +
      '    if (enableWatcher) {\n' +
      '      oldValues.push({\n' +
      '        arch: oldVal,\n' +
      '        phaseId: currentPhase.current\n' +
      '      });\n' +
      '    }\n' +
      '  });\n' +
      '  var blocks = computed(function () {\n' +
      '    return BlockGroupDescriptionsToBlock(transitionalArchitectureRef.value);\n' +
      '  });\n' +
      '  var phaseIndex = buildPhasesIndex(transitionalArchitectureRef.value.phases);\n' +
      '\n' +
      '  var next = function next() {\n' +
      '    enableWatcher = true;\n' +
      '    var nextPhaseId = startPhases(transitionalArchitectureRef.value, phaseIndex, currentPhase);\n' +
      '    currentPhase.current = nextPhaseId;\n' +
      '    return nextPhaseId;\n' +
      '  };\n' +
      '\n' +
      '  var back = function back() {\n' +
      '    var _val2;\n' +
      '\n' +
      '    var val = oldValues.pop();\n' +
      '\n' +
      '    while (oldValues.length > 0 && oldValues[oldValues.length - 1].phaseId == ((_val = val) == null ? void 0 : _val.phaseId)) {\n' +
      '      var _val;\n' +
      '\n' +
      '      val = oldValues.pop();\n' +
      '    }\n' +
      '\n' +
      '    if (val) {\n' +
      '      enableWatcher = false;\n' +
      '      transitionalArchitectureRef.value = val.arch;\n' +
      '      currentPhase.current = val.phaseId;\n' +
      '    }\n' +
      '\n' +
      '    return (_val2 = val) == null ? void 0 : _val2.phaseId;\n' +
      '  };\n' +
      '\n' +
      '  return {\n' +
      '    name: transitionalArchitectureRef.value.name,\n' +
      '    blocks: blocks,\n' +
      '    style: computed(function () {\n' +
      '      return styleDescriptionToArchitectureStyle(transitionalArchitectureRef.value, blocks.value, setting);\n' +
      '    }),\n' +
      '    next: next,\n' +
      '    back: back,\n' +
      '    toPhase: function toPhase(phaseId) {\n' +
      '      var phaseInd = phaseIndex.getPhaseIndex(phaseId);\n' +
      '      var currentPhaseInd = phaseIndex.getPhaseIndex(currentPhase.current);\n' +
      '      var walkerFn = phaseInd > currentPhaseInd ? next : back;\n' +
      '      var curPhaseId = null;\n' +
      '\n' +
      '      do {\n' +
      '        curPhaseId = walkerFn();\n' +
      '      } while (!!curPhaseId && curPhaseId.length > 0 && curPhaseId.indexOf(phaseId) === -1);\n' +
      '    },\n' +
      '    phases: phaseIndex.phases,\n' +
      '    currentPhase: computed(function () {\n' +
      '      return currentPhase.current;\n' +
      '    })\n' +
      '  };\n' +
      '}\n' +
      'function BlockGroupDescriptionsToBlock(description) {\n' +
      '  return blockGroupDescriptionsToBlock(description);\n' +
      '}\n' +
      '\n' +
      'var sum = function sum(a, b) {\n' +
      '  return a + b;\n' +
      '};\n' +
      '\n' +
      'export { ActionType, BlockElementType, ChangeType, PositioningSystem, autoPositioning, isActionSetting, isAddNewBlockActionSetting, isArchitectureDescription, isArray, isBlockElementDescription, isConnectActionSetting, isContainerBlock, isFormulaValue, isGraduallyPhases, isHasLabel, isLineBlockElement, isLineBlockElementDescription, isNotNullOrUndefined, isNullOrUndefined, isParallelPhase, isParentBlockElement, isPhaseAction, isRectPositioning, isString, startPhases, sum, transformDescriptionToArchitecture, transformToArchitecture };\n' +
      '//# sourceMappingURL=core.esm.js.map\n',
    dynamicallyImportedIds: [Getter],
    dynamicImporters: [Getter],
    hasModuleSideEffects: true,
    id: '/home/alex/RiderProjects/Coya/Coya/libraries/core/dist/core.esm.js',
    implicitlyLoadedAfterOneOf: [Getter],
    implicitlyLoadedBefore: [Getter],
    importedIds: [Getter],
    importers: [Getter],
    isEntry: false,
    isExternal: false,
    meta: {},
    syntheticNamedExports: false
  },
  originalCode: "import { isRef, unref, ref, computed, reactive } from '@vue/reactivity';\n" +
    "import { serialize, compile, stringify } from 'stylis';\n" +
    "import { watch } from '@vue-reactivity/watch';\n" +
    '\n' +
    'var BlockElementType;\n' +
    '\n' +
    '(function (BlockElementType) {\n' +
    '  BlockElementType["Rect"] = "rect";\n' +
    '  BlockElementType["Line"] = "line";\n' +
    '  BlockElementType["Highlight"] = "highlight";\n' +
    '})(BlockElementType || (BlockElementType = {}));\n' +
    '\n' +
    'var PositioningSystem;\n' +
    '\n' +
    '(function (PositioningSystem) {\n' +
    '  PositioningSystem["Auto"] = "auto";\n' +
    '  PositioningSystem["Grid"] = "grid";\n' +
    '})(PositioningSystem || (PositioningSystem = {}));\n' +
    '\n' +
    'var ActionType;\n' +
    '\n' +
    '(function (ActionType) {\n' +
    '  ActionType["Connect"] = "connect";\n' +
    '  ActionType["AddNewBlock"] = "newBlock";\n' +
    '  ActionType["ChangePosition"] = "changePosition";\n' +
    '  ActionType["ChangeLabel"] = "changeLabel";\n' +
    '  ActionType["Highlight"] = "highlight";\n' +
    '  ActionType["RemoveHighlight"] = "removeHighlight";\n' +
    '})(ActionType || (ActionType = {}));\n' +
    '\n' +
    'var ChangeType;\n' +
    '\n' +
    '(function (ChangeType) {\n' +
    '  ChangeType[ChangeType["AddNewBlock"] = 0] = "AddNewBlock";\n' +
    '  ChangeType[ChangeType["ChangeStyle"] = 1] = "ChangeStyle";\n' +
    '  ChangeType[ChangeType["RemoveBlock"] = 2] = "RemoveBlock";\n' +
    '})(ChangeType || (ChangeType = {}));\n' +
    '\n' +
    'function isNotNullOrUndefined(obj) {\n' +
    '  return obj !== null && typeof obj !== "undefined";\n' +
    '}\n' +
    'function isNullOrUndefined(obj) {\n' +
    '  return obj === null || typeof obj === "undefined";\n' +
    '}\n' +
    'function isString(obj) {\n' +
    '  return typeof obj === "string";\n' +
    '}\n' +
    'function isBlockElementDescription(obj) {\n' +
    '  return typeof obj === "object" && isNotNullOrUndefined(obj) && "label" in obj;\n' +
    '}\n' +
    'function isParentBlockElement(obj) {\n' +
    '  return !!obj && !!obj.id && !!obj.label && Array.isArray(obj.children) && obj.children.length > 0;\n' +
    '}\n' +
    'function isArchitectureDescription(obj) {\n' +
    '  if (!!obj) {\n' +
    '    var maybeDescription = obj;\n' +
    '    return !!maybeDescription.blocks\n' +
    '    /* && !!maybeDescription.animation && !!maybeDescription.phases */\n' +
    '    ;\n' +
    '  }\n' +
    '\n' +
    '  return false;\n' +
    '}\n' +
    'function isRectPositioning(obj) {\n' +
    '  if (!!obj) {\n' +
    '    var rectPos = obj;\n' +
    '    return isNotNullOrUndefined(rectPos.x) && isNotNullOrUndefined(rectPos.y)\n' +
    '    /* && isNotNullOrUndefined(rectPos.width)  && isNotNullOrUndefined(rectPos.height)*/\n' +
    '    ;\n' +
    '  }\n' +
    '\n' +
    '  return false;\n' +
    '}\n' +
    'function isPhaseAction(obj) {\n' +
    '  if (obj) {\n' +
    '    var action = obj;\n' +
    '    return typeof action === "object" && !Array.isArray(action) && Object.keys(action).every(function (x) {\n' +
    '      var val = action[x];\n' +
    '\n' +
    '      if (typeof val === "string") {\n' +
    '        return true;\n' +
    '      }\n' +
    '\n' +
    '      if (Array.isArray(val)) {\n' +
    '        return val.every(function (y) {\n' +
    '          return typeof y === "string" || isActionSetting(y);\n' +
    '        });\n' +
    '      }\n' +
    '\n' +
    '      return Object.values(ActionType).some(function (y) {\n' +
    '        return y === x;\n' +
    '      });\n' +
    '    });\n' +
    '  }\n' +
    '\n' +
    '  return false;\n' +
    '}\n' +
    'function isParallelPhase(obj) {\n' +
    '  if (obj) {\n' +
    '    var phase = obj;\n' +
    '    return typeof phase === "object" && !Array.isArray(phase) && !isPhaseAction(phase);\n' +
    '  }\n' +
    '\n' +
    '  return false;\n' +
    '}\n' +
    'function isGraduallyPhases(obj) {\n' +
    '  return !!obj && Array.isArray(obj);\n' +
    '}\n' +
    'function isConnectActionSetting(obj) {\n' +
    '  if (obj) {\n' +
    '    var connect = obj;\n' +
    '    return !!connect.to && !!connect.from;\n' +
    '  }\n' +
    '\n' +
    '  return false;\n' +
    '}\n' +
    'function isAddNewBlockActionSetting(obj) {\n' +
    '  if (obj) {\n' +
    '    var connect = obj;\n' +
    '    return isBlockElementDescription(connect);\n' +
    '  }\n' +
    '\n' +
    '  return false;\n' +
    '}\n' +
    'function isActionSetting(obj) {\n' +
    '  var action = obj;\n' +
    '  return isConnectActionSetting(action) && isAddNewBlockActionSetting(action);\n' +
    '}\n' +
    'function isArray(obj) {\n' +
    '  return Array.isArray(obj);\n' +
    '}\n' +
    'function isLineBlockElementDescription(obj) {\n' +
    '  if (!!obj) {\n' +
    '    var line = obj;\n' +
    '    return line.type === BlockElementType.Line;\n' +
    '  }\n' +
    '\n' +
    '  return false;\n' +
    '}\n' +
    'function isLineBlockElement(obj) {\n' +
    '  if (!!obj) {\n' +
    '    var line = obj;\n' +
    '    return line.type === BlockElementType.Line;\n' +
    '  }\n' +
    '\n' +
    '  return false;\n' +
    '}\n' +
    'function isContainerBlock(obj) {\n' +
    '  if (!!obj) {\n' +
    '    var container = obj;\n' +
    '    if (!!container.parentId) return true;\n' +
    '    var blockEl = obj;\n' +
    '    return !blockEl.type;\n' +
    '  }\n' +
    '\n' +
    '  return false;\n' +
    '}\n' +
    'function isFormulaValue(obj) {\n' +
    '  if (!!obj) {\n' +
    '    var formulaValue = obj;\n' +
    '    return !!formulaValue.formula && typeof formulaValue.formula === "string" || typeof formulaValue === "string";\n' +
    '  }\n' +
    '\n' +
    '  return false;\n' +
    '}\n' +
    'function isHasLabel(obj) {\n' +
    '  return !!obj && typeof obj.label === "string";\n' +
    '}\n' +
    '\n' +
    'function deepCopy(val) {\n' +
    '  return !!val ? JSON.parse(JSON.stringify(val)) : val;\n' +
    '}\n' +
    '\n' +
    'function createBlockElementByString(id, label, blockStyle) {\n' +
    '  var _blockStyle$label;\n' +
    '\n' +
    '  return {\n' +
    '    id: id,\n' +
    '    label: (_blockStyle$label = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label : label,\n' +
    '    enter: getDefaultEnter()\n' +
    '  };\n' +
    '}\n' +
    'function createBlockElementByDescription(id, element, blockStyle) {\n' +
    '  var _ref, _blockStyle$label2, _deepCopy;\n' +
    '\n' +
    '  return {\n' +
    '    label: (_ref = (_blockStyle$label2 = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label2 : element.label) != null ? _ref : id,\n' +
    '    enter: (_deepCopy = deepCopy(element.enter)) != null ? _deepCopy : getDefaultEnter(),\n' +
    '    id: id\n' +
    '  };\n' +
    '}\n' +
    'function getDefaultEnter() {\n' +
    '  return {\n' +
    '    from: {\n' +
    '      opacity: 0\n' +
    '    },\n' +
    '    to: {\n' +
    '      opacity: 1,\n' +
    '      duration: 3\n' +
    '    }\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'function _extends() {\n' +
    '  _extends = Object.assign || function (target) {\n' +
    '    for (var i = 1; i < arguments.length; i++) {\n' +
    '      var source = arguments[i];\n' +
    '\n' +
    '      for (var key in source) {\n' +
    '        if (Object.prototype.hasOwnProperty.call(source, key)) {\n' +
    '          target[key] = source[key];\n' +
    '        }\n' +
    '      }\n' +
    '    }\n' +
    '\n' +
    '    return target;\n' +
    '  };\n' +
    '\n' +
    '  return _extends.apply(this, arguments);\n' +
    '}\n' +
    '\n' +
    'function createLineElementByDescription(id, value, blockStyle) {\n' +
    '  var _ref, _blockStyle$label;\n' +
    '\n' +
    '  return _extends({\n' +
    '    id: id\n' +
    '  }, value, {\n' +
    '    label: (_ref = (_blockStyle$label = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label : value.label) != null ? _ref : id\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    'function blockGroupDescriptionsToBlock(architecture) {\n' +
    '  var description = architecture.blocks;\n' +
    '\n' +
    '  var blockGroupDescriptionsToBlock2 = function blockGroupDescriptionsToBlock2(description) {\n' +
    '    var blocks = Object.keys(description).flatMap(function (key) {\n' +
    '      var _architecture$style, _architecture$style$b;\n' +
    '\n' +
    '      var value = description[key];\n' +
    '      var blockStyle = (_architecture$style = architecture.style) == null ? void 0 : (_architecture$style$b = _architecture$style.blocks) == null ? void 0 : _architecture$style$b[key];\n' +
    '\n' +
    '      if (isString(value)) {\n' +
    '        return createBlockElementByString(key, value, blockStyle);\n' +
    '      }\n' +
    '\n' +
    '      if (isBlockElementDescription(value)) {\n' +
    '        if (isLineBlockElementDescription(value)) {\n' +
    '          return createLineElementByDescription(key, value, blockStyle);\n' +
    '        }\n' +
    '\n' +
    '        return createBlockElementByDescription(key, value, blockStyle);\n' +
    '      }\n' +
    '\n' +
    '      if (value === null) {\n' +
    '        return createBlockElementByString(key, key, blockStyle);\n' +
    '      }\n' +
    '\n' +
    '      var items = blockGroupDescriptionsToBlock2(value);\n' +
    '      items.forEach(function (x) {\n' +
    '        var _x$parentId;\n' +
    '\n' +
    '        return isContainerBlock(x) ? x.parentId = (_x$parentId = x.parentId) != null ? _x$parentId : key : null;\n' +
    '      });\n' +
    '      return [{\n' +
    '        id: key,\n' +
    '        label: key,\n' +
    '        children: items.filter(function (x) {\n' +
    '          return isContainerBlock(x) && x.parentId === key;\n' +
    '        }),\n' +
    '        enter: getDefaultEnter()\n' +
    '      }].concat(items);\n' +
    '    });\n' +
    '    return blocks;\n' +
    '  };\n' +
    '\n' +
    '  return blockGroupDescriptionsToBlock2(description);\n' +
    '}\n' +
    '\n' +
    'function getNumber(obj) {\n' +
    '  return isRef(obj) ? obj.value : obj;\n' +
    '}\n' +
    '\n' +
    'function getFormulaValueFuncContext(blocksPositioning, setting) {\n' +
    '  return {\n' +
    '    blockNamesAsFuncParams: blocksPositioning.value.map(function (x) {\n' +
    '      return x.blockId;\n' +
    '    }).join(", ") + ", _",\n' +
    '    blocksValues: [].concat(blocksPositioning.value.map(function (x) {\n' +
    '      return x.position;\n' +
    '    }), [{\n' +
    '      viewBox: {\n' +
    '        x: unref(setting.viewBox.x),\n' +
    '        y: unref(setting.viewBox.y),\n' +
    '        w: unref(setting.viewBox.w),\n' +
    '        h: unref(setting.viewBox.h)\n' +
    '      }\n' +
    '    }])\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'function getFormulaValue(val, positioning, setting) {\n' +
    '  if (typeof val === "number") {\n' +
    '    return ref(val);\n' +
    '  }\n' +
    '\n' +
    '  if (isFormulaValue(val)) {\n' +
    '    var formula = typeof val === "string" ? val : val.formula;\n' +
    '    return computed(function () {\n' +
    '      var context = getFormulaValueFuncContext(positioning, setting);\n' +
    '      var fn = Function("\\"use strict\\";return (function(" + context.blockNamesAsFuncParams + "){return " + formula + ";})")();\n' +
    '      return fn.apply(null, context.blocksValues) || 0;\n' +
    '    });\n' +
    '  }\n' +
    '\n' +
    '  return ref(0);\n' +
    '}\n' +
    '\n' +
    'function lineBlockPosition(blocksPositions, block, setting, blockStyle) {\n' +
    '  var _blockStyle$position$, _blockStyle$position, _blockStyle$position2, _blockStyle$position$2, _blockStyle$position3, _blockStyle$position4, _blockStyle$position$3, _blockStyle$position5, _blockStyle$position6, _blockStyle$position$4, _blockStyle$position7, _blockStyle$position8, _blockStyle$position9, _blockStyle$position10, _blockStyle$position11, _blockStyle$position12, _blockStyle$position13, _blockStyle$position14, _blockStyle$position15, _blockStyle$position16;\n' +
    '\n' +
    '  var blockFromPos = computed(function () {\n' +
    '    var _blocksPositions$valu;\n' +
    '\n' +
    '    return (_blocksPositions$valu = blocksPositions.value) == null ? void 0 : _blocksPositions$valu.find(function (x) {\n' +
    '      return x.blockId === block.from;\n' +
    '    });\n' +
    '  });\n' +
    '  var blockToPos = computed(function () {\n' +
    '    var _blocksPositions$valu2;\n' +
    '\n' +
    '    return (_blocksPositions$valu2 = blocksPositions.value) == null ? void 0 : _blocksPositions$valu2.find(function (x) {\n' +
    '      return x.blockId === block.to;\n' +
    '    });\n' +
    '  });\n' +
    '  var isToRighter = computed(function () {\n' +
    '    var _blockFromPos$value, _blockToPos$value, _blockFromPos$value2, _blockToPos$value2;\n' +
    '\n' +
    '    return ((_blockFromPos$value = blockFromPos.value) == null ? void 0 : _blockFromPos$value.position) && ((_blockToPos$value = blockToPos.value) == null ? void 0 : _blockToPos$value.position) && isRectPositioning((_blockFromPos$value2 = blockFromPos.value) == null ? void 0 : _blockFromPos$value2.position) && isRectPositioning((_blockToPos$value2 = blockToPos.value) == null ? void 0 : _blockToPos$value2.position) && blockFromPos.value.position.x < blockToPos.value.position.x;\n' +
    '  });\n' +
    '\n' +
    '  var getValueByCtx = function getValueByCtx(x) {\n' +
    '    return getFormulaValue(x, blocksPositions, setting);\n' +
    '  };\n' +
    '\n' +
    '  var indentX1 = getValueByCtx((_blockStyle$position$ = blockStyle == null ? void 0 : (_blockStyle$position = blockStyle.position) == null ? void 0 : _blockStyle$position.indentX1) != null ? _blockStyle$position$ : blockStyle == null ? void 0 : (_blockStyle$position2 = blockStyle.position) == null ? void 0 : _blockStyle$position2.indentX);\n' +
    '  var indentX2 = getValueByCtx((_blockStyle$position$2 = blockStyle == null ? void 0 : (_blockStyle$position3 = blockStyle.position) == null ? void 0 : _blockStyle$position3.indentX2) != null ? _blockStyle$position$2 : blockStyle == null ? void 0 : (_blockStyle$position4 = blockStyle.position) == null ? void 0 : _blockStyle$position4.indentX);\n' +
    '  var indentY1 = getValueByCtx((_blockStyle$position$3 = blockStyle == null ? void 0 : (_blockStyle$position5 = blockStyle.position) == null ? void 0 : _blockStyle$position5.indentY1) != null ? _blockStyle$position$3 : blockStyle == null ? void 0 : (_blockStyle$position6 = blockStyle.position) == null ? void 0 : _blockStyle$position6.indentY);\n' +
    '  var indentY2 = getValueByCtx((_blockStyle$position$4 = blockStyle == null ? void 0 : (_blockStyle$position7 = blockStyle.position) == null ? void 0 : _blockStyle$position7.indentY2) != null ? _blockStyle$position$4 : blockStyle == null ? void 0 : (_blockStyle$position8 = blockStyle.position) == null ? void 0 : _blockStyle$position8.indentY);\n' +
    '  var x1 = blockStyle != null && (_blockStyle$position9 = blockStyle.position) != null && _blockStyle$position9.x1 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position10 = blockStyle.position) == null ? void 0 : _blockStyle$position10.x1) : computed(function () {\n' +
    '    var blockPos = blockFromPos.value;\n' +
    '\n' +
    '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.x) {\n' +
    '      return getNumber(blockPos.position.x) + (!isToRighter.value ? 0 : getNumber(blockPos.position.width)) + indentX1.value;\n' +
    '    }\n' +
    '\n' +
    '    return indentX1.value;\n' +
    '  });\n' +
    '  var y1 = blockStyle != null && (_blockStyle$position11 = blockStyle.position) != null && _blockStyle$position11.y1 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position12 = blockStyle.position) == null ? void 0 : _blockStyle$position12.y1) : computed(function () {\n' +
    '    var blockPos = blockFromPos.value;\n' +
    '\n' +
    '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.y) {\n' +
    '      return getNumber(blockPos == null ? void 0 : blockPos.position.y) + getNumber(blockPos.position.height) / 2 + indentY1.value;\n' +
    '    }\n' +
    '\n' +
    '    return indentY1.value;\n' +
    '  });\n' +
    '  var x2 = blockStyle != null && (_blockStyle$position13 = blockStyle.position) != null && _blockStyle$position13.x2 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position14 = blockStyle.position) == null ? void 0 : _blockStyle$position14.x2) : computed(function () {\n' +
    '    var blockPos = blockToPos.value;\n' +
    '\n' +
    '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.x) {\n' +
    '      return getNumber(blockPos == null ? void 0 : blockPos.position.x) + (!isToRighter.value ? getNumber(blockPos.position.width) : 0) + indentX2.value;\n' +
    '    }\n' +
    '\n' +
    '    return indentX2.value;\n' +
    '  });\n' +
    '  var y2 = blockStyle != null && (_blockStyle$position15 = blockStyle.position) != null && _blockStyle$position15.y2 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position16 = blockStyle.position) == null ? void 0 : _blockStyle$position16.y2) : computed(function () {\n' +
    '    var blockPos = blockToPos.value;\n' +
    '\n' +
    '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.y) {\n' +
    '      return getNumber(blockPos == null ? void 0 : blockPos.position.y) + getNumber(blockPos.position.height) / 2 + indentY2.value;\n' +
    '    }\n' +
    '\n' +
    '    return indentY2.value;\n' +
    '  });\n' +
    '  return {\n' +
    '    blockId: block.id,\n' +
    '    position: {\n' +
    '      x1: x1,\n' +
    '      y1: y1,\n' +
    '      x2: x2,\n' +
    '      y2: y2\n' +
    '    }\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'function autoPositioning(setting) {\n' +
    '  var _setting$sizeSetting;\n' +
    '\n' +
    '  var sizeSetting = (_setting$sizeSetting = setting.sizeSetting) != null ? _setting$sizeSetting : defaultSiseSettings;\n' +
    '  var blocks = setting.blocks;\n' +
    '  var blocksPositioning = ref([]);\n' +
    '  blocksPositioning.value = blocks.map(function (block) {\n' +
    '    if (!isContainerBlock(block)) {\n' +
    '      if (isLineBlockElement(block)) {\n' +
    '        return lineBlockPosition(blocksPositioning, block, setting.setting);\n' +
    '      }\n' +
    '\n' +
    '      return null;\n' +
    '    }\n' +
    '\n' +
    '    var parentBlockComp = computed(function () {\n' +
    '      return blocks.find(function (x) {\n' +
    '        return x.id === block.parentId;\n' +
    '      });\n' +
    '    });\n' +
    '    var parentPosComp = computed(function () {\n' +
    '      var _parentBlockComp$valu;\n' +
    '\n' +
    '      return (_parentBlockComp$valu = parentBlockComp.value) != null && _parentBlockComp$valu.id ? getBlockPositioning(blocksPositioning.value, parentBlockComp.value.id) : null;\n' +
    '    });\n' +
    '    var blockInParentIndexComp = computed(function () {\n' +
    '      return isParentBlockElement(parentBlockComp.value) ? parentBlockComp.value.children.indexOf(block) : -1;\n' +
    '    });\n' +
    '    var columnIndexComp = computed(function () {\n' +
    '      return blockInParentIndexComp.value % sizeSetting.parentChildrenInRowCount;\n' +
    '    });\n' +
    '    var rowIndexComp = computed(function () {\n' +
    '      return Math.floor(blockInParentIndexComp.value / sizeSetting.parentChildrenInRowCount);\n' +
    '    });\n' +
    '    var brotherLeftBlockComp = computed(function () {\n' +
    '      return isParentBlockElement(parentBlockComp.value) ? parentBlockComp.value.children[blockInParentIndexComp.value - 1] : null;\n' +
    '    });\n' +
    '    var brotherLeftPosComp = computed(function () {\n' +
    '      var _brotherLeftBlockComp, _brotherLeftBlockComp2;\n' +
    '\n' +
    '      return (_brotherLeftBlockComp = brotherLeftBlockComp.value) != null && _brotherLeftBlockComp.id ? getBlockPositioning(blocksPositioning.value, (_brotherLeftBlockComp2 = brotherLeftBlockComp.value) == null ? void 0 : _brotherLeftBlockComp2.id) : null;\n' +
    '    });\n' +
    '    var x = computed(function () {\n' +
    '      if (block.parentId) {\n' +
    '        var parentBlock = parentBlockComp.value;\n' +
    '        var parentPos = parentPosComp.value;\n' +
    '\n' +
    '        if (isParentBlockElement(parentBlock) && isRectPositioning(parentPos)) {\n' +
    '          if (columnIndexComp.value === 0) {\n' +
    '            return getNumber(parentPos.x) + sizeSetting.gap;\n' +
    '          }\n' +
    '\n' +
    '          var brotherPos = brotherLeftPosComp.value;\n' +
    '\n' +
    '          if (isRectPositioning(brotherPos)) {\n' +
    '            return getNumber(brotherPos.x) + getNumber(brotherPos.width) + sizeSetting.gap;\n' +
    '          }\n' +
    '\n' +
    '          return getNumber(parentPos.x) + sizeSetting.gap;\n' +
    '        }\n' +
    '      }\n' +
    '\n' +
    '      return sizeSetting.gap;\n' +
    '    });\n' +
    '    var y = computed(function () {\n' +
    '      if (block.parentId) {\n' +
    '        var parentBlock = parentBlockComp.value;\n' +
    '        var parentPos = parentPosComp.value;\n' +
    '\n' +
    '        if (isParentBlockElement(parentBlock) && isRectPositioning(parentPos)) {\n' +
    '          if (rowIndexComp.value === 0) {\n' +
    '            return getNumber(parentPos.y) + sizeSetting.gap;\n' +
    '          }\n' +
    '\n' +
    '          var previousRowIndex = rowIndexComp.value - 1;\n' +
    '          var startIndex = previousRowIndex * sizeSetting.parentChildrenInRowCount;\n' +
    '          var maxY = 0;\n' +
    '          parentBlock.children.slice(startIndex, startIndex + sizeSetting.parentChildrenInRowCount).forEach(function (brotherBlock) {\n' +
    '            var pos = getBlockPositioning(blocksPositioning.value, brotherBlock.id);\n' +
    '\n' +
    '            if (isRectPositioning(pos)) {\n' +
    '              var newY = getNumber(pos.y) + getNumber(pos.height);\n' +
    '\n' +
    '              if (newY > maxY) {\n' +
    '                maxY = newY;\n' +
    '              }\n' +
    '            }\n' +
    '          });\n' +
    '          return maxY + sizeSetting.gap;\n' +
    '        }\n' +
    '      }\n' +
    '\n' +
    '      return sizeSetting.gap;\n' +
    '    });\n' +
    '    var width = computed(function () {\n' +
    '      if (isParentBlockElement(block)) {\n' +
    '        var maxX = 0;\n' +
    '        block.children.forEach(function (child) {\n' +
    '          var _blocksPositioning$va;\n' +
    '\n' +
    '          var pos = (_blocksPositioning$va = blocksPositioning.value.find(function (x) {\n' +
    '            return x.blockId === child.id;\n' +
    '          })) == null ? void 0 : _blocksPositioning$va.position;\n' +
    '\n' +
    '          if (isRectPositioning(pos)) {\n' +
    '            var newX = getNumber(pos.x) + getNumber(pos.width);\n' +
    '\n' +
    '            if (newX > maxX) {\n' +
    '              maxX = newX;\n' +
    '            }\n' +
    '          }\n' +
    '        });\n' +
    '        return maxX - x.value + sizeSetting.gap;\n' +
    '      }\n' +
    '\n' +
    '      return sizeSetting.rectWidth;\n' +
    '    });\n' +
    '    var height = computed(function () {\n' +
    '      if (isParentBlockElement(block)) {\n' +
    '        var maxY = 0;\n' +
    '        block.children.forEach(function (child) {\n' +
    '          var _blocksPositioning$va2;\n' +
    '\n' +
    '          var pos = (_blocksPositioning$va2 = blocksPositioning.value.find(function (x) {\n' +
    '            return x.blockId === child.id;\n' +
    '          })) == null ? void 0 : _blocksPositioning$va2.position;\n' +
    '\n' +
    '          if (isRectPositioning(pos)) {\n' +
    '            var newY = getNumber(pos.y) + getNumber(pos.height);\n' +
    '\n' +
    '            if (newY > maxY) {\n' +
    '              maxY = newY;\n' +
    '            }\n' +
    '          }\n' +
    '        });\n' +
    '        return maxY - y.value + sizeSetting.gap;\n' +
    '      }\n' +
    '\n' +
    '      return sizeSetting.rectHeight;\n' +
    '    });\n' +
    '    return {\n' +
    '      blockId: block.id,\n' +
    '      position: {\n' +
    '        x: x,\n' +
    '        y: y,\n' +
    '        width: width,\n' +
    '        height: height\n' +
    '      }\n' +
    '    };\n' +
    '  }).filter(isNotNullOrUndefined);\n' +
    '  return blocksPositioning.value;\n' +
    '}\n' +
    'var defaultSiseSettings = {\n' +
    '  rectHeight: 20,\n' +
    '  rectWidth: 30,\n' +
    '  gap: 10,\n' +
    '  parentChildrenInRowCount: 3\n' +
    '};\n' +
    '\n' +
    'function getBlockPositioning(blocksPositioning, id) {\n' +
    '  var _blocksPositioning$fi;\n' +
    '\n' +
    '  return (_blocksPositioning$fi = blocksPositioning.find(function (x) {\n' +
    '    return x.blockId === id;\n' +
    '  })) == null ? void 0 : _blocksPositioning$fi.position;\n' +
    '}\n' +
    '\n' +
    'function gridPositioning(option) {\n' +
    '  var _option$architectureD3;\n' +
    '\n' +
    '  var blocks = option.blocks.filter(function (x) {\n' +
    '    return x.id !== "main";\n' +
    '  });\n' +
    '  var notSettetBlocks = blocks.filter(function (block) {\n' +
    '    var _option$architectureD, _option$architectureD2;\n' +
    '\n' +
    '    if (isLineBlockElement(block)) {\n' +
    '      return false;\n' +
    '    }\n' +
    '\n' +
    '    var styleBlock = (_option$architectureD = option.architectureDescription.style) == null ? void 0 : (_option$architectureD2 = _option$architectureD.blocks) == null ? void 0 : _option$architectureD2[block.id];\n' +
    '    return !styleBlock || !styleBlock.position;\n' +
    '  });\n' +
    '  var style = (_option$architectureD3 = option.architectureDescription.style) == null ? void 0 : _option$architectureD3.blocks;\n' +
    '\n' +
    '  if (!style || notSettetBlocks.length > 0) {\n' +
    '    throw "Not every block has setting: [" + notSettetBlocks.map(function (x) {\n' +
    '      return x.id;\n' +
    '    }) + "]";\n' +
    '  }\n' +
    '\n' +
    '  var gridSize = {\n' +
    '    columnWidth: 20,\n' +
    '    rowHeight: 20\n' +
    '  };\n' +
    '  var blocksPositioning = ref([]);\n' +
    '\n' +
    '  var getValueByCtx = function getValueByCtx(x, multiplier) {\n' +
    '    if (multiplier === void 0) {\n' +
    '      multiplier = 1;\n' +
    '    }\n' +
    '\n' +
    '    var res = getFormulaValue(x, blocksPositioning, option.setting);\n' +
    '\n' +
    '    if (isFormulaValue(x)) {\n' +
    '      return res;\n' +
    '    }\n' +
    '\n' +
    '    return ref(res.value * multiplier);\n' +
    '  };\n' +
    '\n' +
    '  blocksPositioning.value = blocks.map(function (block) {\n' +
    '    var blockStyle = style[block.id];\n' +
    '\n' +
    '    if (!isContainerBlock(block)) {\n' +
    '      if (isLineBlockElement(block)) {\n' +
    '        return lineBlockPosition(blocksPositioning, block, option.setting, blockStyle);\n' +
    '      }\n' +
    '\n' +
    '      return null;\n' +
    '    }\n' +
    '\n' +
    '    if (blockStyle.position) {\n' +
    '      var _getValueByCtx, _getValueByCtx2;\n' +
    '\n' +
    '      var pos = blockStyle.position;\n' +
    '      var indentX = (_getValueByCtx = getValueByCtx(pos.indentX)) != null ? _getValueByCtx : 0;\n' +
    '      var indentY = (_getValueByCtx2 = getValueByCtx(pos.indentY)) != null ? _getValueByCtx2 : 0;\n' +
    '      return {\n' +
    '        blockId: block.id,\n' +
    '        position: {\n' +
    '          x: computed(function () {\n' +
    '            return getValueByCtx(pos.x, gridSize.columnWidth).value + indentX.value;\n' +
    '          }),\n' +
    '          y: computed(function () {\n' +
    '            return getValueByCtx(pos.y, gridSize.rowHeight).value + indentY.value;\n' +
    '          }),\n' +
    '          width: computed(function () {\n' +
    '            return getValueByCtx(pos.w, gridSize.columnWidth).value + indentX.value;\n' +
    '          }),\n' +
    '          height: computed(function () {\n' +
    '            return getValueByCtx(pos.h, gridSize.rowHeight).value + indentY.value;\n' +
    '          })\n' +
    '        }\n' +
    '      };\n' +
    '    }\n' +
    '\n' +
    '    return null;\n' +
    '  }).filter(isNotNullOrUndefined);\n' +
    '  return blocksPositioning.value;\n' +
    '}\n' +
    '\n' +
    'function prepareCss(architectureDescription) {\n' +
    '  var _architectureDescript, _architectureDescript2;\n' +
    '\n' +
    '  return (_architectureDescript = architectureDescription.style) != null && _architectureDescript.css ? serialize(compile("#" + architectureDescription.name + " {" + ((_architectureDescript2 = architectureDescription.style) == null ? void 0 : _architectureDescript2.css) + "}"), stringify) : undefined;\n' +
    '}\n' +
    '\n' +
    'function styleDescriptionToArchitectureStyle(architectureDescription, blocks, setting) {\n' +
    '  var _architectureDescript, _architectureDescript2;\n' +
    '\n' +
    '  var positioningSystem = (_architectureDescript = architectureDescription.style) == null ? void 0 : _architectureDescript.positioning;\n' +
    '  var css = prepareCss(architectureDescription);\n' +
    '  return {\n' +
    '    id: "style",\n' +
    '    positioning: !positioningSystem || positioningSystem === PositioningSystem.Auto ? autoPositioning({\n' +
    '      architectureDescription: architectureDescription,\n' +
    '      blocks: blocks,\n' +
    '      setting: setting\n' +
    '    }) : gridPositioning({\n' +
    '      architectureDescription: architectureDescription,\n' +
    '      blocks: blocks,\n' +
    '      setting: setting\n' +
    '    }),\n' +
    '    debug: deepCopy((_architectureDescript2 = architectureDescription.style) == null ? void 0 : _architectureDescript2.debug),\n' +
    '    css: css,\n' +
    '    blocks: architectureDescription.style ? generateBlocksStyle(architectureDescription.style) : undefined\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'function generateBlocksStyle(style) {\n' +
    '  return style.blocks;\n' +
    '}\n' +
    '\n' +
    'function deepAssign() {\n' +
    '  var isObject = function isObject(obj) {\n' +
    "    return obj && typeof obj === 'object';\n" +
    '  };\n' +
    '\n' +
    '  function deepMergeInner(target, source) {\n' +
    '    Object.keys(source).forEach(function (key) {\n' +
    '      var targetValue = target[key];\n' +
    '      var sourceValue = source[key];\n' +
    '\n' +
    '      if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n' +
    '        target[key] = targetValue.concat(sourceValue);\n' +
    '      } else if (isObject(targetValue) && isObject(sourceValue)) {\n' +
    '        target[key] = deepMergeInner(Object.assign({}, targetValue), sourceValue);\n' +
    '      } else {\n' +
    '        target[key] = sourceValue;\n' +
    '      }\n' +
    '    });\n' +
    '    return target;\n' +
    '  }\n' +
    '\n' +
    '  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n' +
    '    objects[_key] = arguments[_key];\n' +
    '  }\n' +
    '\n' +
    '  if (objects.length < 2) {\n' +
    "    throw new Error('deepMerge: this function expects at least 2 objects to be provided');\n" +
    '  }\n' +
    '\n' +
    '  if (objects.some(function (object) {\n' +
    '    return !isObject(object);\n' +
    '  })) {\n' +
    `    throw new Error('deepMerge: all values should be of type "object"');\n` +
    '  }\n' +
    '\n' +
    '  var target = objects.shift();\n' +
    '  var source;\n' +
    '\n' +
    '  while (source = objects.shift()) {\n' +
    '    deepMergeInner(target, source);\n' +
    '  }\n' +
    '\n' +
    '  return target;\n' +
    '}\n' +
    '\n' +
    'function addHighlightActionExecutor(context, action) {\n' +
    '  var _val$gap;\n' +
    '\n' +
    '  if (!context) {\n' +
    '    return null;\n' +
    '  }\n' +
    '\n' +
    '  var val = action.value;\n' +
    '  var blocks = typeof val.blocks === "string" ? [val.blocks] : val.blocks;\n' +
    '  var gap = (_val$gap = val.gap) != null ? _val$gap : 5;\n' +
    '  return blocks.flatMap(function (block) {\n' +
    '    return [{\n' +
    '      type: ChangeType.ChangeStyle,\n' +
    '      setting: {\n' +
    '        blockId: "highlight_" + block,\n' +
    '        newStyle: {\n' +
    '          position: {\n' +
    '            x: block + ".x - " + gap,\n' +
    '            y: block + ".y - " + gap,\n' +
    '            w: block + ".width + " + gap * 2,\n' +
    '            h: block + ".height + " + gap * 2\n' +
    '          },\n' +
    '          isHighlight: true\n' +
    '        }\n' +
    '      }\n' +
    '    }, {\n' +
    '      type: ChangeType.AddNewBlock,\n' +
    '      setting: {\n' +
    '        newBlockId: "highlight_" + block,\n' +
    '        blockSettings: {\n' +
    '          type: BlockElementType.Rect,\n' +
    '          label: ""\n' +
    '        }\n' +
    '      }\n' +
    '    }];\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    'function addNewBlockActionExecutor(context, action) {\n' +
    '  if (!context) {\n' +
    '    return null;\n' +
    '  }\n' +
    '\n' +
    '  var val = action.value;\n' +
    '  return Object.keys(val).map(function (key) {\n' +
    '    return {\n' +
    '      type: ChangeType.AddNewBlock,\n' +
    '      setting: {\n' +
    '        newBlockId: key,\n' +
    '        blockSettings: val[key]\n' +
    '      }\n' +
    '    };\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    'function changeBlockPositionActionExecutor(context, action) {\n' +
    '  if (!context) {\n' +
    '    return null;\n' +
    '  }\n' +
    '\n' +
    '  var val = action.value;\n' +
    '  return Object.keys(val).map(function (key) {\n' +
    '    return {\n' +
    '      type: ChangeType.ChangeStyle,\n' +
    '      setting: {\n' +
    '        blockId: key,\n' +
    '        newStyle: {\n' +
    '          position: val[key]\n' +
    '        }\n' +
    '      }\n' +
    '    };\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    'function changeLabelActionExecutor(context, action) {\n' +
    '  if (!context) {\n' +
    '    return null;\n' +
    '  }\n' +
    '\n' +
    '  var val = action.value;\n' +
    '  return Object.keys(val).map(function (key) {\n' +
    '    var v = val[key];\n' +
    '    return {\n' +
    '      type: ChangeType.ChangeStyle,\n' +
    '      setting: {\n' +
    '        blockId: key,\n' +
    '        newStyle: {\n' +
    '          label: isHasLabel(v) ? v.label : v\n' +
    '        }\n' +
    '      }\n' +
    '    };\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    'function connectActionExecutor(context, action) {\n' +
    '  if (isConnectActionSetting(action.value)) {\n' +
    '    var _action$value$name, _action$value$label;\n' +
    '\n' +
    '    var newBlockId = (_action$value$name = action.value.name) != null ? _action$value$name : "line_" + context.indexItem.phaseId;\n' +
    '    return [{\n' +
    '      type: ChangeType.AddNewBlock,\n' +
    '      setting: {\n' +
    '        newBlockId: newBlockId,\n' +
    '        blockSettings: _extends({}, action.value, {\n' +
    '          type: BlockElementType.Line,\n' +
    '          label: (_action$value$label = action.value.label) != null ? _action$value$label : newBlockId\n' +
    '        })\n' +
    '      }\n' +
    '    }];\n' +
    '  }\n' +
    '\n' +
    '  return null;\n' +
    '}\n' +
    '\n' +
    'function removeHighlightActionExecutor(context, _) {\n' +
    '  var _context$architecture;\n' +
    '\n' +
    '  var blocks = ((_context$architecture = context.architecture.style) == null ? void 0 : _context$architecture.blocks) || {};\n' +
    '  return [{\n' +
    '    type: ChangeType.RemoveBlock,\n' +
    '    setting: {\n' +
    '      blocks: Object.keys(blocks).filter(function (x) {\n' +
    '        return blocks[x].isHighlight;\n' +
    '      })\n' +
    '    }\n' +
    '  }];\n' +
    '}\n' +
    '\n' +
    'function startPhases(architecture, phaseIndex, phaseInfo) {\n' +
    '  var indexItems = phaseIndex.getPhaseById(phaseInfo.current);\n' +
    '\n' +
    '  if (indexItems) {\n' +
    '    return indexItems.map(function (indexItem) {\n' +
    '      var actionContext = {\n' +
    '        indexItem: indexItem,\n' +
    '        architecture: architecture,\n' +
    '        phaseIndex: phaseIndex\n' +
    '      };\n' +
    '      var changes = indexItem.actions.flatMap(function (item) {\n' +
    '        return executePhaseIndex(item, actionContext);\n' +
    '      });\n' +
    '      changes.filter(isNotNullOrUndefined).forEach(function (change) {\n' +
    '        return makeChange(architecture, change);\n' +
    '      });\n' +
    '      return indexItem.nextPhaseId;\n' +
    '    })[0];\n' +
    '  }\n' +
    '\n' +
    '  return null;\n' +
    '}\n' +
    '\n' +
    'function executePhaseIndex(item, context) {\n' +
    '  if (item.action.name === ActionType.Connect) {\n' +
    '    return connectActionExecutor(context, item.action);\n' +
    '  } else if (item.action.name === ActionType.AddNewBlock) {\n' +
    '    return addNewBlockActionExecutor(context, item.action);\n' +
    '  } else if (item.action.name === ActionType.ChangePosition) {\n' +
    '    return changeBlockPositionActionExecutor(context, item.action);\n' +
    '  } else if (item.action.name === ActionType.ChangeLabel) {\n' +
    '    return changeLabelActionExecutor(context, item.action);\n' +
    '  } else if (item.action.name === ActionType.Highlight) {\n' +
    '    return addHighlightActionExecutor(context, item.action);\n' +
    '  } else if (item.action.name === ActionType.RemoveHighlight) {\n' +
    '    return removeHighlightActionExecutor(context);\n' +
    '  }\n' +
    '\n' +
    '  throw "Not implemented!";\n' +
    '}\n' +
    '\n' +
    'function makeChange(architecture, change) {\n' +
    '  if (change.type === ChangeType.AddNewBlock) {\n' +
    '    var setting = change.setting;\n' +
    '\n' +
    '    if (setting) {\n' +
    '      architecture.blocks[setting.newBlockId] = setting.blockSettings;\n' +
    '    }\n' +
    '  } else if (change.type === ChangeType.ChangeStyle) {\n' +
    '    var _architecture$style;\n' +
    '\n' +
    '    var _setting = change.setting;\n' +
    '\n' +
    '    if (_setting && (_architecture$style = architecture.style) != null && _architecture$style.blocks) {\n' +
    '      var _architecture$style2, _architecture$style2$;\n' +
    '\n' +
    '      var currentSetting = (_architecture$style2 = architecture.style) == null ? void 0 : (_architecture$style2$ = _architecture$style2.blocks) == null ? void 0 : _architecture$style2$[_setting.blockId];\n' +
    '\n' +
    '      if (currentSetting) {\n' +
    '        architecture.style.blocks[_setting.blockId] = deepAssign({}, currentSetting, _setting.newStyle);\n' +
    '      } else {\n' +
    '        architecture.style.blocks[_setting.blockId] = deepAssign({}, _setting.newStyle);\n' +
    '      }\n' +
    '    }\n' +
    '  } else if (change.type === ChangeType.RemoveBlock) {\n' +
    '    var _setting2 = change.setting;\n' +
    '\n' +
    '    _setting2.blocks.forEach(function (x) {\n' +
    '      var _architecture$style3, _architecture$style3$;\n' +
    '\n' +
    '      delete architecture.blocks[x];\n' +
    '      (_architecture$style3 = architecture.style) == null ? true : (_architecture$style3$ = _architecture$style3.blocks) == null ? true : delete _architecture$style3$[x];\n' +
    '    });\n' +
    '  } else {\n' +
    '    throw new Error("Function not implemented.");\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'function buildPhasesIndex(phases) {\n' +
    '  var index = buildIndexObject(phases);\n' +
    '  return {\n' +
    '    getPhaseById: function getPhaseById(id) {\n' +
    '      if (!id) {\n' +
    '        return index.filter(function (x) {\n' +
    '          return x.isStart;\n' +
    '        });\n' +
    '      }\n' +
    '\n' +
    '      var ids = [];\n' +
    '\n' +
    '      if (Array.isArray(id)) {\n' +
    '        ids = id.filter(isNotNullOrUndefined);\n' +
    '      } else {\n' +
    '        ids = [id];\n' +
    '      }\n' +
    '\n' +
    '      return index.filter(function (x) {\n' +
    '        return x.phaseId && ids.indexOf(x.phaseId) > -1;\n' +
    '      });\n' +
    '    },\n' +
    '    phases: index.map(function (x) {\n' +
    '      return x.phaseId;\n' +
    '    }),\n' +
    '    getPhaseIndex: function getPhaseIndex(phase) {\n' +
    '      return index.findIndex(function (x) {\n' +
    '        return x.phaseId === phase;\n' +
    '      });\n' +
    '    }\n' +
    '  };\n' +
    '}\n' +
    '\n' +
    'function buildIndexObject(phase, isStart, id) {\n' +
    '  if (isStart === void 0) {\n' +
    '    isStart = true;\n' +
    '  }\n' +
    '\n' +
    '  if (id === void 0) {\n' +
    '    id = "start";\n' +
    '  }\n' +
    '\n' +
    '  if (!phase) {\n' +
    '    return [];\n' +
    '  }\n' +
    '\n' +
    '  if (isPhaseAction(phase)) {\n' +
    '    var actions = Object.keys(phase).flatMap(function (key) {\n' +
    '      var action = phase[key];\n' +
    '      var actions = [];\n' +
    '\n' +
    '      if (!Array.isArray(action)) {\n' +
    '        actions = [action];\n' +
    '      } else {\n' +
    '        actions = action;\n' +
    '      }\n' +
    '\n' +
    '      return actions.map(function (y) {\n' +
    '        return {\n' +
    '          action: {\n' +
    '            name: key,\n' +
    '            value: y\n' +
    '          }\n' +
    '        };\n' +
    '      });\n' +
    '    });\n' +
    '    return [{\n' +
    '      isStart: isStart,\n' +
    '      nextPhaseId: null,\n' +
    '      phaseId: "" + id,\n' +
    '      actions: actions\n' +
    '    }];\n' +
    '  } else if (isParallelPhase(phase)) {\n' +
    '    var items = Object.keys(phase).flatMap(function (x) {\n' +
    '      var val = phase[x];\n' +
    '      return buildIndexObject(val, isStart, id + "_" + x);\n' +
    '    });\n' +
    '    return items;\n' +
    '  } else if (isGraduallyPhases(phase)) {\n' +
    '    var childId = id + "_child";\n' +
    '\n' +
    '    var _items = phase.map(function (x, index) {\n' +
    '      return buildIndexObject(x, isStart && index === 0, childId);\n' +
    '    });\n' +
    '\n' +
    '    _items.forEach(function (group, index) {\n' +
    '      group.forEach(function (groupItem) {\n' +
    '        if (groupItem.phaseId === childId) {\n' +
    '          groupItem.phaseId += "_" + index;\n' +
    '\n' +
    '          if (index + 1 < _items.length) {\n' +
    '            groupItem.nextPhaseId = childId + "_" + (index + 1);\n' +
    '          }\n' +
    '        }\n' +
    '      });\n' +
    '    });\n' +
    '\n' +
    '    return _items.flatMap(function (x) {\n' +
    '      return x;\n' +
    '    });\n' +
    '  }\n' +
    '\n' +
    '  throw "Not implemented!";\n' +
    '}\n' +
    '\n' +
    'function transformToArchitecture(description, setting) {\n' +
    '  var refDescription = isRef(description) ? description : ref(description);\n' +
    '  var value = refDescription.value;\n' +
    '  var transitionalArchitectureRef = ref(deepCopy(value));\n' +
    '  var transitionalArchitecture = transitionalArchitectureRef.value;\n' +
    '  transitionalArchitecture.blocks = {\n' +
    '    main: transitionalArchitecture.blocks\n' +
    '  };\n' +
    '  var architecture = computed(function () {\n' +
    '    if (isArchitectureDescription(transitionalArchitectureRef.value)) {\n' +
    '      return transformDescriptionToArchitecture(transitionalArchitectureRef, setting);\n' +
    '    }\n' +
    '\n' +
    '    return {\n' +
    '      name: "",\n' +
    '      blocks: ref([]),\n' +
    '      style: ref(null),\n' +
    '      phases: [],\n' +
    '      currentPhase: null,\n' +
    '      next: function next() {\n' +
    '        return null;\n' +
    '      },\n' +
    '      back: function back() {\n' +
    '        return null;\n' +
    '      },\n' +
    '      toPhase: function toPhase() {}\n' +
    '    };\n' +
    '  });\n' +
    '  return architecture;\n' +
    '}\n' +
    'function transformDescriptionToArchitecture(transitionalArchitectureRef, setting) {\n' +
    '  var oldValues = [];\n' +
    '  var enableWatcher = true;\n' +
    '  var currentPhase = reactive({\n' +
    '    current: null\n' +
    '  });\n' +
    '  watch(function () {\n' +
    '    return deepCopy(transitionalArchitectureRef.value);\n' +
    '  }, function (_, oldVal) {\n' +
    '    if (enableWatcher) {\n' +
    '      oldValues.push({\n' +
    '        arch: oldVal,\n' +
    '        phaseId: currentPhase.current\n' +
    '      });\n' +
    '    }\n' +
    '  });\n' +
    '  var blocks = computed(function () {\n' +
    '    return BlockGroupDescriptionsToBlock(transitionalArchitectureRef.value);\n' +
    '  });\n' +
    '  var phaseIndex = buildPhasesIndex(transitionalArchitectureRef.value.phases);\n' +
    '\n' +
    '  var next = function next() {\n' +
    '    enableWatcher = true;\n' +
    '    var nextPhaseId = startPhases(transitionalArchitectureRef.value, phaseIndex, currentPhase);\n' +
    '    currentPhase.current = nextPhaseId;\n' +
    '    return nextPhaseId;\n' +
    '  };\n' +
    '\n' +
    '  var back = function back() {\n' +
    '    var _val2;\n' +
    '\n' +
    '    var val = oldValues.pop();\n' +
    '\n' +
    '    while (oldValues.length > 0 && oldValues[oldValues.length - 1].phaseId == ((_val = val) == null ? void 0 : _val.phaseId)) {\n' +
    '      var _val;\n' +
    '\n' +
    '      val = oldValues.pop();\n' +
    '    }\n' +
    '\n' +
    '    if (val) {\n' +
    '      enableWatcher = false;\n' +
    '      transitionalArchitectureRef.value = val.arch;\n' +
    '      currentPhase.current = val.phaseId;\n' +
    '    }\n' +
    '\n' +
    '    return (_val2 = val) == null ? void 0 : _val2.phaseId;\n' +
    '  };\n' +
    '\n' +
    '  return {\n' +
    '    name: transitionalArchitectureRef.value.name,\n' +
    '    blocks: blocks,\n' +
    '    style: computed(function () {\n' +
    '      return styleDescriptionToArchitectureStyle(transitionalArchitectureRef.value, blocks.value, setting);\n' +
    '    }),\n' +
    '    next: next,\n' +
    '    back: back,\n' +
    '    toPhase: function toPhase(phaseId) {\n' +
    '      var phaseInd = phaseIndex.getPhaseIndex(phaseId);\n' +
    '      var currentPhaseInd = phaseIndex.getPhaseIndex(currentPhase.current);\n' +
    '      var walkerFn = phaseInd > currentPhaseInd ? next : back;\n' +
    '      var curPhaseId = null;\n' +
    '\n' +
    '      do {\n' +
    '        curPhaseId = walkerFn();\n' +
    '      } while (!!curPhaseId && curPhaseId.length > 0 && curPhaseId.indexOf(phaseId) === -1);\n' +
    '    },\n' +
    '    phases: phaseIndex.phases,\n' +
    '    currentPhase: computed(function () {\n' +
    '      return currentPhase.current;\n' +
    '    })\n' +
    '  };\n' +
    '}\n' +
    'function BlockGroupDescriptionsToBlock(description) {\n' +
    '  return blockGroupDescriptionsToBlock(description);\n' +
    '}\n' +
    '\n' +
    'var sum = function sum(a, b) {\n' +
    '  return a + b;\n' +
    '};\n' +
    '\n' +
    'export { ActionType, BlockElementType, ChangeType, PositioningSystem, autoPositioning, isActionSetting, isAddNewBlockActionSetting, isArchitectureDescription, isArray, isBlockElementDescription, isConnectActionSetting, isContainerBlock, isFormulaValue, isGraduallyPhases, isHasLabel, isLineBlockElement, isLineBlockElementDescription, isNotNullOrUndefined, isNullOrUndefined, isParallelPhase, isParentBlockElement, isPhaseAction, isRectPositioning, isString, startPhases, sum, transformDescriptionToArchitecture, transformToArchitecture };\n' +
    '//# sourceMappingURL=core.esm.js.map\n',
  originalSourcemap: null,
  sourcemapChain: [],
  customTransformCache: false,
  resolvedIds: [Object: null prototype] {},
  magicString: MagicString {},
  astContext: {
    addDynamicImport: [Function: bound addDynamicImport],
    addExport: [Function: bound addExport],
    addImport: [Function: bound addImport],
    addImportMeta: [Function: bound addImportMeta],
    code: "import { isRef, unref, ref, computed, reactive } from '@vue/reactivity';\n" +
      "import { serialize, compile, stringify } from 'stylis';\n" +
      "import { watch } from '@vue-reactivity/watch';\n" +
      '\n' +
      'var BlockElementType;\n' +
      '\n' +
      '(function (BlockElementType) {\n' +
      '  BlockElementType["Rect"] = "rect";\n' +
      '  BlockElementType["Line"] = "line";\n' +
      '  BlockElementType["Highlight"] = "highlight";\n' +
      '})(BlockElementType || (BlockElementType = {}));\n' +
      '\n' +
      'var PositioningSystem;\n' +
      '\n' +
      '(function (PositioningSystem) {\n' +
      '  PositioningSystem["Auto"] = "auto";\n' +
      '  PositioningSystem["Grid"] = "grid";\n' +
      '})(PositioningSystem || (PositioningSystem = {}));\n' +
      '\n' +
      'var ActionType;\n' +
      '\n' +
      '(function (ActionType) {\n' +
      '  ActionType["Connect"] = "connect";\n' +
      '  ActionType["AddNewBlock"] = "newBlock";\n' +
      '  ActionType["ChangePosition"] = "changePosition";\n' +
      '  ActionType["ChangeLabel"] = "changeLabel";\n' +
      '  ActionType["Highlight"] = "highlight";\n' +
      '  ActionType["RemoveHighlight"] = "removeHighlight";\n' +
      '})(ActionType || (ActionType = {}));\n' +
      '\n' +
      'var ChangeType;\n' +
      '\n' +
      '(function (ChangeType) {\n' +
      '  ChangeType[ChangeType["AddNewBlock"] = 0] = "AddNewBlock";\n' +
      '  ChangeType[ChangeType["ChangeStyle"] = 1] = "ChangeStyle";\n' +
      '  ChangeType[ChangeType["RemoveBlock"] = 2] = "RemoveBlock";\n' +
      '})(ChangeType || (ChangeType = {}));\n' +
      '\n' +
      'function isNotNullOrUndefined(obj) {\n' +
      '  return obj !== null && typeof obj !== "undefined";\n' +
      '}\n' +
      'function isNullOrUndefined(obj) {\n' +
      '  return obj === null || typeof obj === "undefined";\n' +
      '}\n' +
      'function isString(obj) {\n' +
      '  return typeof obj === "string";\n' +
      '}\n' +
      'function isBlockElementDescription(obj) {\n' +
      '  return typeof obj === "object" && isNotNullOrUndefined(obj) && "label" in obj;\n' +
      '}\n' +
      'function isParentBlockElement(obj) {\n' +
      '  return !!obj && !!obj.id && !!obj.label && Array.isArray(obj.children) && obj.children.length > 0;\n' +
      '}\n' +
      'function isArchitectureDescription(obj) {\n' +
      '  if (!!obj) {\n' +
      '    var maybeDescription = obj;\n' +
      '    return !!maybeDescription.blocks\n' +
      '    /* && !!maybeDescription.animation && !!maybeDescription.phases */\n' +
      '    ;\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isRectPositioning(obj) {\n' +
      '  if (!!obj) {\n' +
      '    var rectPos = obj;\n' +
      '    return isNotNullOrUndefined(rectPos.x) && isNotNullOrUndefined(rectPos.y)\n' +
      '    /* && isNotNullOrUndefined(rectPos.width)  && isNotNullOrUndefined(rectPos.height)*/\n' +
      '    ;\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isPhaseAction(obj) {\n' +
      '  if (obj) {\n' +
      '    var action = obj;\n' +
      '    return typeof action === "object" && !Array.isArray(action) && Object.keys(action).every(function (x) {\n' +
      '      var val = action[x];\n' +
      '\n' +
      '      if (typeof val === "string") {\n' +
      '        return true;\n' +
      '      }\n' +
      '\n' +
      '      if (Array.isArray(val)) {\n' +
      '        return val.every(function (y) {\n' +
      '          return typeof y === "string" || isActionSetting(y);\n' +
      '        });\n' +
      '      }\n' +
      '\n' +
      '      return Object.values(ActionType).some(function (y) {\n' +
      '        return y === x;\n' +
      '      });\n' +
      '    });\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isParallelPhase(obj) {\n' +
      '  if (obj) {\n' +
      '    var phase = obj;\n' +
      '    return typeof phase === "object" && !Array.isArray(phase) && !isPhaseAction(phase);\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isGraduallyPhases(obj) {\n' +
      '  return !!obj && Array.isArray(obj);\n' +
      '}\n' +
      'function isConnectActionSetting(obj) {\n' +
      '  if (obj) {\n' +
      '    var connect = obj;\n' +
      '    return !!connect.to && !!connect.from;\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isAddNewBlockActionSetting(obj) {\n' +
      '  if (obj) {\n' +
      '    var connect = obj;\n' +
      '    return isBlockElementDescription(connect);\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isActionSetting(obj) {\n' +
      '  var action = obj;\n' +
      '  return isConnectActionSetting(action) && isAddNewBlockActionSetting(action);\n' +
      '}\n' +
      'function isArray(obj) {\n' +
      '  return Array.isArray(obj);\n' +
      '}\n' +
      'function isLineBlockElementDescription(obj) {\n' +
      '  if (!!obj) {\n' +
      '    var line = obj;\n' +
      '    return line.type === BlockElementType.Line;\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isLineBlockElement(obj) {\n' +
      '  if (!!obj) {\n' +
      '    var line = obj;\n' +
      '    return line.type === BlockElementType.Line;\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isContainerBlock(obj) {\n' +
      '  if (!!obj) {\n' +
      '    var container = obj;\n' +
      '    if (!!container.parentId) return true;\n' +
      '    var blockEl = obj;\n' +
      '    return !blockEl.type;\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isFormulaValue(obj) {\n' +
      '  if (!!obj) {\n' +
      '    var formulaValue = obj;\n' +
      '    return !!formulaValue.formula && typeof formulaValue.formula === "string" || typeof formulaValue === "string";\n' +
      '  }\n' +
      '\n' +
      '  return false;\n' +
      '}\n' +
      'function isHasLabel(obj) {\n' +
      '  return !!obj && typeof obj.label === "string";\n' +
      '}\n' +
      '\n' +
      'function deepCopy(val) {\n' +
      '  return !!val ? JSON.parse(JSON.stringify(val)) : val;\n' +
      '}\n' +
      '\n' +
      'function createBlockElementByString(id, label, blockStyle) {\n' +
      '  var _blockStyle$label;\n' +
      '\n' +
      '  return {\n' +
      '    id: id,\n' +
      '    label: (_blockStyle$label = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label : label,\n' +
      '    enter: getDefaultEnter()\n' +
      '  };\n' +
      '}\n' +
      'function createBlockElementByDescription(id, element, blockStyle) {\n' +
      '  var _ref, _blockStyle$label2, _deepCopy;\n' +
      '\n' +
      '  return {\n' +
      '    label: (_ref = (_blockStyle$label2 = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label2 : element.label) != null ? _ref : id,\n' +
      '    enter: (_deepCopy = deepCopy(element.enter)) != null ? _deepCopy : getDefaultEnter(),\n' +
      '    id: id\n' +
      '  };\n' +
      '}\n' +
      'function getDefaultEnter() {\n' +
      '  return {\n' +
      '    from: {\n' +
      '      opacity: 0\n' +
      '    },\n' +
      '    to: {\n' +
      '      opacity: 1,\n' +
      '      duration: 3\n' +
      '    }\n' +
      '  };\n' +
      '}\n' +
      '\n' +
      'function _extends() {\n' +
      '  _extends = Object.assign || function (target) {\n' +
      '    for (var i = 1; i < arguments.length; i++) {\n' +
      '      var source = arguments[i];\n' +
      '\n' +
      '      for (var key in source) {\n' +
      '        if (Object.prototype.hasOwnProperty.call(source, key)) {\n' +
      '          target[key] = source[key];\n' +
      '        }\n' +
      '      }\n' +
      '    }\n' +
      '\n' +
      '    return target;\n' +
      '  };\n' +
      '\n' +
      '  return _extends.apply(this, arguments);\n' +
      '}\n' +
      '\n' +
      'function createLineElementByDescription(id, value, blockStyle) {\n' +
      '  var _ref, _blockStyle$label;\n' +
      '\n' +
      '  return _extends({\n' +
      '    id: id\n' +
      '  }, value, {\n' +
      '    label: (_ref = (_blockStyle$label = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label : value.label) != null ? _ref : id\n' +
      '  });\n' +
      '}\n' +
      '\n' +
      'function blockGroupDescriptionsToBlock(architecture) {\n' +
      '  var description = architecture.blocks;\n' +
      '\n' +
      '  var blockGroupDescriptionsToBlock2 = function blockGroupDescriptionsToBlock2(description) {\n' +
      '    var blocks = Object.keys(description).flatMap(function (key) {\n' +
      '      var _architecture$style, _architecture$style$b;\n' +
      '\n' +
      '      var value = description[key];\n' +
      '      var blockStyle = (_architecture$style = architecture.style) == null ? void 0 : (_architecture$style$b = _architecture$style.blocks) == null ? void 0 : _architecture$style$b[key];\n' +
      '\n' +
      '      if (isString(value)) {\n' +
      '        return createBlockElementByString(key, value, blockStyle);\n' +
      '      }\n' +
      '\n' +
      '      if (isBlockElementDescription(value)) {\n' +
      '        if (isLineBlockElementDescription(value)) {\n' +
      '          return createLineElementByDescription(key, value, blockStyle);\n' +
      '        }\n' +
      '\n' +
      '        return createBlockElementByDescription(key, value, blockStyle);\n' +
      '      }\n' +
      '\n' +
      '      if (value === null) {\n' +
      '        return createBlockElementByString(key, key, blockStyle);\n' +
      '      }\n' +
      '\n' +
      '      var items = blockGroupDescriptionsToBlock2(value);\n' +
      '      items.forEach(function (x) {\n' +
      '        var _x$parentId;\n' +
      '\n' +
      '        return isContainerBlock(x) ? x.parentId = (_x$parentId = x.parentId) != null ? _x$parentId : key : null;\n' +
      '      });\n' +
      '      return [{\n' +
      '        id: key,\n' +
      '        label: key,\n' +
      '        children: items.filter(function (x) {\n' +
      '          return isContainerBlock(x) && x.parentId === key;\n' +
      '        }),\n' +
      '        enter: getDefaultEnter()\n' +
      '      }].concat(items);\n' +
      '    });\n' +
      '    return blocks;\n' +
      '  };\n' +
      '\n' +
      '  return blockGroupDescriptionsToBlock2(description);\n' +
      '}\n' +
      '\n' +
      'function getNumber(obj) {\n' +
      '  return isRef(obj) ? obj.value : obj;\n' +
      '}\n' +
      '\n' +
      'function getFormulaValueFuncContext(blocksPositioning, setting) {\n' +
      '  return {\n' +
      '    blockNamesAsFuncParams: blocksPositioning.value.map(function (x) {\n' +
      '      return x.blockId;\n' +
      '    }).join(", ") + ", _",\n' +
      '    blocksValues: [].concat(blocksPositioning.value.map(function (x) {\n' +
      '      return x.position;\n' +
      '    }), [{\n' +
      '      viewBox: {\n' +
      '        x: unref(setting.viewBox.x),\n' +
      '        y: unref(setting.viewBox.y),\n' +
      '        w: unref(setting.viewBox.w),\n' +
      '        h: unref(setting.viewBox.h)\n' +
      '      }\n' +
      '    }])\n' +
      '  };\n' +
      '}\n' +
      '\n' +
      'function getFormulaValue(val, positioning, setting) {\n' +
      '  if (typeof val === "number") {\n' +
      '    return ref(val);\n' +
      '  }\n' +
      '\n' +
      '  if (isFormulaValue(val)) {\n' +
      '    var formula = typeof val === "string" ? val : val.formula;\n' +
      '    return computed(function () {\n' +
      '      var context = getFormulaValueFuncContext(positioning, setting);\n' +
      '      var fn = Function("\\"use strict\\";return (function(" + context.blockNamesAsFuncParams + "){return " + formula + ";})")();\n' +
      '      return fn.apply(null, context.blocksValues) || 0;\n' +
      '    });\n' +
      '  }\n' +
      '\n' +
      '  return ref(0);\n' +
      '}\n' +
      '\n' +
      'function lineBlockPosition(blocksPositions, block, setting, blockStyle) {\n' +
      '  var _blockStyle$position$, _blockStyle$position, _blockStyle$position2, _blockStyle$position$2, _blockStyle$position3, _blockStyle$position4, _blockStyle$position$3, _blockStyle$position5, _blockStyle$position6, _blockStyle$position$4, _blockStyle$position7, _blockStyle$position8, _blockStyle$position9, _blockStyle$position10, _blockStyle$position11, _blockStyle$position12, _blockStyle$position13, _blockStyle$position14, _blockStyle$position15, _blockStyle$position16;\n' +
      '\n' +
      '  var blockFromPos = computed(function () {\n' +
      '    var _blocksPositions$valu;\n' +
      '\n' +
      '    return (_blocksPositions$valu = blocksPositions.value) == null ? void 0 : _blocksPositions$valu.find(function (x) {\n' +
      '      return x.blockId === block.from;\n' +
      '    });\n' +
      '  });\n' +
      '  var blockToPos = computed(function () {\n' +
      '    var _blocksPositions$valu2;\n' +
      '\n' +
      '    return (_blocksPositions$valu2 = blocksPositions.value) == null ? void 0 : _blocksPositions$valu2.find(function (x) {\n' +
      '      return x.blockId === block.to;\n' +
      '    });\n' +
      '  });\n' +
      '  var isToRighter = computed(function () {\n' +
      '    var _blockFromPos$value, _blockToPos$value, _blockFromPos$value2, _blockToPos$value2;\n' +
      '\n' +
      '    return ((_blockFromPos$value = blockFromPos.value) == null ? void 0 : _blockFromPos$value.position) && ((_blockToPos$value = blockToPos.value) == null ? void 0 : _blockToPos$value.position) && isRectPositioning((_blockFromPos$value2 = blockFromPos.value) == null ? void 0 : _blockFromPos$value2.position) && isRectPositioning((_blockToPos$value2 = blockToPos.value) == null ? void 0 : _blockToPos$value2.position) && blockFromPos.value.position.x < blockToPos.value.position.x;\n' +
      '  });\n' +
      '\n' +
      '  var getValueByCtx = function getValueByCtx(x) {\n' +
      '    return getFormulaValue(x, blocksPositions, setting);\n' +
      '  };\n' +
      '\n' +
      '  var indentX1 = getValueByCtx((_blockStyle$position$ = blockStyle == null ? void 0 : (_blockStyle$position = blockStyle.position) == null ? void 0 : _blockStyle$position.indentX1) != null ? _blockStyle$position$ : blockStyle == null ? void 0 : (_blockStyle$position2 = blockStyle.position) == null ? void 0 : _blockStyle$position2.indentX);\n' +
      '  var indentX2 = getValueByCtx((_blockStyle$position$2 = blockStyle == null ? void 0 : (_blockStyle$position3 = blockStyle.position) == null ? void 0 : _blockStyle$position3.indentX2) != null ? _blockStyle$position$2 : blockStyle == null ? void 0 : (_blockStyle$position4 = blockStyle.position) == null ? void 0 : _blockStyle$position4.indentX);\n' +
      '  var indentY1 = getValueByCtx((_blockStyle$position$3 = blockStyle == null ? void 0 : (_blockStyle$position5 = blockStyle.position) == null ? void 0 : _blockStyle$position5.indentY1) != null ? _blockStyle$position$3 : blockStyle == null ? void 0 : (_blockStyle$position6 = blockStyle.position) == null ? void 0 : _blockStyle$position6.indentY);\n' +
      '  var indentY2 = getValueByCtx((_blockStyle$position$4 = blockStyle == null ? void 0 : (_blockStyle$position7 = blockStyle.position) == null ? void 0 : _blockStyle$position7.indentY2) != null ? _blockStyle$position$4 : blockStyle == null ? void 0 : (_blockStyle$position8 = blockStyle.position) == null ? void 0 : _blockStyle$position8.indentY);\n' +
      '  var x1 = blockStyle != null && (_blockStyle$position9 = blockStyle.position) != null && _blockStyle$position9.x1 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position10 = blockStyle.position) == null ? void 0 : _blockStyle$position10.x1) : computed(function () {\n' +
      '    var blockPos = blockFromPos.value;\n' +
      '\n' +
      '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.x) {\n' +
      '      return getNumber(blockPos.position.x) + (!isToRighter.value ? 0 : getNumber(blockPos.position.width)) + indentX1.value;\n' +
      '    }\n' +
      '\n' +
      '    return indentX1.value;\n' +
      '  });\n' +
      '  var y1 = blockStyle != null && (_blockStyle$position11 = blockStyle.position) != null && _blockStyle$position11.y1 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position12 = blockStyle.position) == null ? void 0 : _blockStyle$position12.y1) : computed(function () {\n' +
      '    var blockPos = blockFromPos.value;\n' +
      '\n' +
      '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.y) {\n' +
      '      return getNumber(blockPos == null ? void 0 : blockPos.position.y) + getNumber(blockPos.position.height) / 2 + indentY1.value;\n' +
      '    }\n' +
      '\n' +
      '    return indentY1.value;\n' +
      '  });\n' +
      '  var x2 = blockStyle != null && (_blockStyle$position13 = blockStyle.position) != null && _blockStyle$position13.x2 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position14 = blockStyle.position) == null ? void 0 : _blockStyle$position14.x2) : computed(function () {\n' +
      '    var blockPos = blockToPos.value;\n' +
      '\n' +
      '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.x) {\n' +
      '      return getNumber(blockPos == null ? void 0 : blockPos.position.x) + (!isToRighter.value ? getNumber(blockPos.position.width) : 0) + indentX2.value;\n' +
      '    }\n' +
      '\n' +
      '    return indentX2.value;\n' +
      '  });\n' +
      '  var y2 = blockStyle != null && (_blockStyle$position15 = blockStyle.position) != null && _blockStyle$position15.y2 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position16 = blockStyle.position) == null ? void 0 : _blockStyle$position16.y2) : computed(function () {\n' +
      '    var blockPos = blockToPos.value;\n' +
      '\n' +
      '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.y) {\n' +
      '      return getNumber(blockPos == null ? void 0 : blockPos.position.y) + getNumber(blockPos.position.height) / 2 + indentY2.value;\n' +
      '    }\n' +
      '\n' +
      '    return indentY2.value;\n' +
      '  });\n' +
      '  return {\n' +
      '    blockId: block.id,\n' +
      '    position: {\n' +
      '      x1: x1,\n' +
      '      y1: y1,\n' +
      '      x2: x2,\n' +
      '      y2: y2\n' +
      '    }\n' +
      '  };\n' +
      '}\n' +
      '\n' +
      'function autoPositioning(setting) {\n' +
      '  var _setting$sizeSetting;\n' +
      '\n' +
      '  var sizeSetting = (_setting$sizeSetting = setting.sizeSetting) != null ? _setting$sizeSetting : defaultSiseSettings;\n' +
      '  var blocks = setting.blocks;\n' +
      '  var blocksPositioning = ref([]);\n' +
      '  blocksPositioning.value = blocks.map(function (block) {\n' +
      '    if (!isContainerBlock(block)) {\n' +
      '      if (isLineBlockElement(block)) {\n' +
      '        return lineBlockPosition(blocksPositioning, block, setting.setting);\n' +
      '      }\n' +
      '\n' +
      '      return null;\n' +
      '    }\n' +
      '\n' +
      '    var parentBlockComp = computed(function () {\n' +
      '      return blocks.find(function (x) {\n' +
      '        return x.id === block.parentId;\n' +
      '      });\n' +
      '    });\n' +
      '    var parentPosComp = computed(function () {\n' +
      '      var _parentBlockComp$valu;\n' +
      '\n' +
      '      return (_parentBlockComp$valu = parentBlockComp.value) != null && _parentBlockComp$valu.id ? getBlockPositioning(blocksPositioning.value, parentBlockComp.value.id) : null;\n' +
      '    });\n' +
      '    var blockInParentIndexComp = computed(function () {\n' +
      '      return isParentBlockElement(parentBlockComp.value) ? parentBlockComp.value.children.indexOf(block) : -1;\n' +
      '    });\n' +
      '    var columnIndexComp = computed(function () {\n' +
      '      return blockInParentIndexComp.value % sizeSetting.parentChildrenInRowCount;\n' +
      '    });\n' +
      '    var rowIndexComp = computed(function () {\n' +
      '      return Math.floor(blockInParentIndexComp.value / sizeSetting.parentChildrenInRowCount);\n' +
      '    });\n' +
      '    var brotherLeftBlockComp = computed(function () {\n' +
      '      return isParentBlockElement(parentBlockComp.value) ? parentBlockComp.value.children[blockInParentIndexComp.value - 1] : null;\n' +
      '    });\n' +
      '    var brotherLeftPosComp = computed(function () {\n' +
      '      var _brotherLeftBlockComp, _brotherLeftBlockComp2;\n' +
      '\n' +
      '      return (_brotherLeftBlockComp = brotherLeftBlockComp.value) != null && _brotherLeftBlockComp.id ? getBlockPositioning(blocksPositioning.value, (_brotherLeftBlockComp2 = brotherLeftBlockComp.value) == null ? void 0 : _brotherLeftBlockComp2.id) : null;\n' +
      '    });\n' +
      '    var x = computed(function () {\n' +
      '      if (block.parentId) {\n' +
      '        var parentBlock = parentBlockComp.value;\n' +
      '        var parentPos = parentPosComp.value;\n' +
      '\n' +
      '        if (isParentBlockElement(parentBlock) && isRectPositioning(parentPos)) {\n' +
      '          if (columnIndexComp.value === 0) {\n' +
      '            return getNumber(parentPos.x) + sizeSetting.gap;\n' +
      '          }\n' +
      '\n' +
      '          var brotherPos = brotherLeftPosComp.value;\n' +
      '\n' +
      '          if (isRectPositioning(brotherPos)) {\n' +
      '            return getNumber(brotherPos.x) + getNumber(brotherPos.width) + sizeSetting.gap;\n' +
      '          }\n' +
      '\n' +
      '          return getNumber(parentPos.x) + sizeSetting.gap;\n' +
      '        }\n' +
      '      }\n' +
      '\n' +
      '      return sizeSetting.gap;\n' +
      '    });\n' +
      '    var y = computed(function () {\n' +
      '      if (block.parentId) {\n' +
      '        var parentBlock = parentBlockComp.value;\n' +
      '        var parentPos = parentPosComp.value;\n' +
      '\n' +
      '        if (isParentBlockElement(parentBlock) && isRectPositioning(parentPos)) {\n' +
      '          if (rowIndexComp.value === 0) {\n' +
      '            return getNumber(parentPos.y) + sizeSetting.gap;\n' +
      '          }\n' +
      '\n' +
      '          var previousRowIndex = rowIndexComp.value - 1;\n' +
      '          var startIndex = previousRowIndex * sizeSetting.parentChildrenInRowCount;\n' +
      '          var maxY = 0;\n' +
      '          parentBlock.children.slice(startIndex, startIndex + sizeSetting.parentChildrenInRowCount).forEach(function (brotherBlock) {\n' +
      '            var pos = getBlockPositioning(blocksPositioning.value, brotherBlock.id);\n' +
      '\n' +
      '            if (isRectPositioning(pos)) {\n' +
      '              var newY = getNumber(pos.y) + getNumber(pos.height);\n' +
      '\n' +
      '              if (newY > maxY) {\n' +
      '                maxY = newY;\n' +
      '              }\n' +
      '            }\n' +
      '          });\n' +
      '          return maxY + sizeSetting.gap;\n' +
      '        }\n' +
      '      }\n' +
      '\n' +
      '      return sizeSetting.gap;\n' +
      '    });\n' +
      '    var width = computed(function () {\n' +
      '      if (isParentBlockElement(block)) {\n' +
      '        var maxX = 0;\n' +
      '        block.children.forEach(function (child) {\n' +
      '          var _blocksPositioning$va;\n' +
      '\n' +
      '          var pos = (_blocksPositioning$va = blocksPositioning.value.find(function (x) {\n' +
      '            return x.blockId === child.id;\n' +
      '          })) == null ? void 0 : _blocksPositioning$va.position;\n' +
      '\n' +
      '          if (isRectPositioning(pos)) {\n' +
      '            var newX = getNumber(pos.x) + getNumber(pos.width);\n' +
      '\n' +
      '            if (newX > maxX) {\n' +
      '              maxX = newX;\n' +
      '            }\n' +
      '          }\n' +
      '        });\n' +
      '        return maxX - x.value + sizeSetting.gap;\n' +
      '      }\n' +
      '\n' +
      '      return sizeSetting.rectWidth;\n' +
      '    });\n' +
      '    var height = computed(function () {\n' +
      '      if (isParentBlockElement(block)) {\n' +
      '        var maxY = 0;\n' +
      '        block.children.forEach(function (child) {\n' +
      '          var _blocksPositioning$va2;\n' +
      '\n' +
      '          var pos = (_blocksPositioning$va2 = blocksPositioning.value.find(function (x) {\n' +
      '            return x.blockId === child.id;\n' +
      '          })) == null ? void 0 : _blocksPositioning$va2.position;\n' +
      '\n' +
      '          if (isRectPositioning(pos)) {\n' +
      '            var newY = getNumber(pos.y) + getNumber(pos.height);\n' +
      '\n' +
      '            if (newY > maxY) {\n' +
      '              maxY = newY;\n' +
      '            }\n' +
      '          }\n' +
      '        });\n' +
      '        return maxY - y.value + sizeSetting.gap;\n' +
      '      }\n' +
      '\n' +
      '      return sizeSetting.rectHeight;\n' +
      '    });\n' +
      '    return {\n' +
      '      blockId: block.id,\n' +
      '      position: {\n' +
      '        x: x,\n' +
      '        y: y,\n' +
      '        width: width,\n' +
      '        height: height\n' +
      '      }\n' +
      '    };\n' +
      '  }).filter(isNotNullOrUndefined);\n' +
      '  return blocksPositioning.value;\n' +
      '}\n' +
      'var defaultSiseSettings = {\n' +
      '  rectHeight: 20,\n' +
      '  rectWidth: 30,\n' +
      '  gap: 10,\n' +
      '  parentChildrenInRowCount: 3\n' +
      '};\n' +
      '\n' +
      'function getBlockPositioning(blocksPositioning, id) {\n' +
      '  var _blocksPositioning$fi;\n' +
      '\n' +
      '  return (_blocksPositioning$fi = blocksPositioning.find(function (x) {\n' +
      '    return x.blockId === id;\n' +
      '  })) == null ? void 0 : _blocksPositioning$fi.position;\n' +
      '}\n' +
      '\n' +
      'function gridPositioning(option) {\n' +
      '  var _option$architectureD3;\n' +
      '\n' +
      '  var blocks = option.blocks.filter(function (x) {\n' +
      '    return x.id !== "main";\n' +
      '  });\n' +
      '  var notSettetBlocks = blocks.filter(function (block) {\n' +
      '    var _option$architectureD, _option$architectureD2;\n' +
      '\n' +
      '    if (isLineBlockElement(block)) {\n' +
      '      return false;\n' +
      '    }\n' +
      '\n' +
      '    var styleBlock = (_option$architectureD = option.architectureDescription.style) == null ? void 0 : (_option$architectureD2 = _option$architectureD.blocks) == null ? void 0 : _option$architectureD2[block.id];\n' +
      '    return !styleBlock || !styleBlock.position;\n' +
      '  });\n' +
      '  var style = (_option$architectureD3 = option.architectureDescription.style) == null ? void 0 : _option$architectureD3.blocks;\n' +
      '\n' +
      '  if (!style || notSettetBlocks.length > 0) {\n' +
      '    throw "Not every block has setting: [" + notSettetBlocks.map(function (x) {\n' +
      '      return x.id;\n' +
      '    }) + "]";\n' +
      '  }\n' +
      '\n' +
      '  var gridSize = {\n' +
      '    columnWidth: 20,\n' +
      '    rowHeight: 20\n' +
      '  };\n' +
      '  var blocksPositioning = ref([]);\n' +
      '\n' +
      '  var getValueByCtx = function getValueByCtx(x, multiplier) {\n' +
      '    if (multiplier === void 0) {\n' +
      '      multiplier = 1;\n' +
      '    }\n' +
      '\n' +
      '    var res = getFormulaValue(x, blocksPositioning, option.setting);\n' +
      '\n' +
      '    if (isFormulaValue(x)) {\n' +
      '      return res;\n' +
      '    }\n' +
      '\n' +
      '    return ref(res.value * multiplier);\n' +
      '  };\n' +
      '\n' +
      '  blocksPositioning.value = blocks.map(function (block) {\n' +
      '    var blockStyle = style[block.id];\n' +
      '\n' +
      '    if (!isContainerBlock(block)) {\n' +
      '      if (isLineBlockElement(block)) {\n' +
      '        return lineBlockPosition(blocksPositioning, block, option.setting, blockStyle);\n' +
      '      }\n' +
      '\n' +
      '      return null;\n' +
      '    }\n' +
      '\n' +
      '    if (blockStyle.position) {\n' +
      '      var _getValueByCtx, _getValueByCtx2;\n' +
      '\n' +
      '      var pos = blockStyle.position;\n' +
      '      var indentX = (_getValueByCtx = getValueByCtx(pos.indentX)) != null ? _getValueByCtx : 0;\n' +
      '      var indentY = (_getValueByCtx2 = getValueByCtx(pos.indentY)) != null ? _getValueByCtx2 : 0;\n' +
      '      return {\n' +
      '        blockId: block.id,\n' +
      '        position: {\n' +
      '          x: computed(function () {\n' +
      '            return getValueByCtx(pos.x, gridSize.columnWidth).value + indentX.value;\n' +
      '          }),\n' +
      '          y: computed(function () {\n' +
      '            return getValueByCtx(pos.y, gridSize.rowHeight).value + indentY.value;\n' +
      '          }),\n' +
      '          width: computed(function () {\n' +
      '            return getValueByCtx(pos.w, gridSize.columnWidth).value + indentX.value;\n' +
      '          }),\n' +
      '          height: computed(function () {\n' +
      '            return getValueByCtx(pos.h, gridSize.rowHeight).value + indentY.value;\n' +
      '          })\n' +
      '        }\n' +
      '      };\n' +
      '    }\n' +
      '\n' +
      '    return null;\n' +
      '  }).filter(isNotNullOrUndefined);\n' +
      '  return blocksPositioning.value;\n' +
      '}\n' +
      '\n' +
      'function prepareCss(architectureDescription) {\n' +
      '  var _architectureDescript, _architectureDescript2;\n' +
      '\n' +
      '  return (_architectureDescript = architectureDescription.style) != null && _architectureDescript.css ? serialize(compile("#" + architectureDescription.name + " {" + ((_architectureDescript2 = architectureDescription.style) == null ? void 0 : _architectureDescript2.css) + "}"), stringify) : undefined;\n' +
      '}\n' +
      '\n' +
      'function styleDescriptionToArchitectureStyle(architectureDescription, blocks, setting) {\n' +
      '  var _architectureDescript, _architectureDescript2;\n' +
      '\n' +
      '  var positioningSystem = (_architectureDescript = architectureDescription.style) == null ? void 0 : _architectureDescript.positioning;\n' +
      '  var css = prepareCss(architectureDescription);\n' +
      '  return {\n' +
      '    id: "style",\n' +
      '    positioning: !positioningSystem || positioningSystem === PositioningSystem.Auto ? autoPositioning({\n' +
      '      architectureDescription: architectureDescription,\n' +
      '      blocks: blocks,\n' +
      '      setting: setting\n' +
      '    }) : gridPositioning({\n' +
      '      architectureDescription: architectureDescription,\n' +
      '      blocks: blocks,\n' +
      '      setting: setting\n' +
      '    }),\n' +
      '    debug: deepCopy((_architectureDescript2 = architectureDescription.style) == null ? void 0 : _architectureDescript2.debug),\n' +
      '    css: css,\n' +
      '    blocks: architectureDescription.style ? generateBlocksStyle(architectureDescription.style) : undefined\n' +
      '  };\n' +
      '}\n' +
      '\n' +
      'function generateBlocksStyle(style) {\n' +
      '  return style.blocks;\n' +
      '}\n' +
      '\n' +
      'function deepAssign() {\n' +
      '  var isObject = function isObject(obj) {\n' +
      "    return obj && typeof obj === 'object';\n" +
      '  };\n' +
      '\n' +
      '  function deepMergeInner(target, source) {\n' +
      '    Object.keys(source).forEach(function (key) {\n' +
      '      var targetValue = target[key];\n' +
      '      var sourceValue = source[key];\n' +
      '\n' +
      '      if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n' +
      '        target[key] = targetValue.concat(sourceValue);\n' +
      '      } else if (isObject(targetValue) && isObject(sourceValue)) {\n' +
      '        target[key] = deepMergeInner(Object.assign({}, targetValue), sourceValue);\n' +
      '      } else {\n' +
      '        target[key] = sourceValue;\n' +
      '      }\n' +
      '    });\n' +
      '    return target;\n' +
      '  }\n' +
      '\n' +
      '  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n' +
      '    objects[_key] = arguments[_key];\n' +
      '  }\n' +
      '\n' +
      '  if (objects.length < 2) {\n' +
      "    throw new Error('deepMerge: this function expects at least 2 objects to be provided');\n" +
      '  }\n' +
      '\n' +
      '  if (objects.some(function (object) {\n' +
      '    return !isObject(object);\n' +
      '  })) {\n' +
      `    throw new Error('deepMerge: all values should be of type "object"');\n` +
      '  }\n' +
      '\n' +
      '  var target = objects.shift();\n' +
      '  var source;\n' +
      '\n' +
      '  while (source = objects.shift()) {\n' +
      '    deepMergeInner(target, source);\n' +
      '  }\n' +
      '\n' +
      '  return target;\n' +
      '}\n' +
      '\n' +
      'function addHighlightActionExecutor(context, action) {\n' +
      '  var _val$gap;\n' +
      '\n' +
      '  if (!context) {\n' +
      '    return null;\n' +
      '  }\n' +
      '\n' +
      '  var val = action.value;\n' +
      '  var blocks = typeof val.blocks === "string" ? [val.blocks] : val.blocks;\n' +
      '  var gap = (_val$gap = val.gap) != null ? _val$gap : 5;\n' +
      '  return blocks.flatMap(function (block) {\n' +
      '    return [{\n' +
      '      type: ChangeType.ChangeStyle,\n' +
      '      setting: {\n' +
      '        blockId: "highlight_" + block,\n' +
      '        newStyle: {\n' +
      '          position: {\n' +
      '            x: block + ".x - " + gap,\n' +
      '            y: block + ".y - " + gap,\n' +
      '            w: block + ".width + " + gap * 2,\n' +
      '            h: block + ".height + " + gap * 2\n' +
      '          },\n' +
      '          isHighlight: true\n' +
      '        }\n' +
      '      }\n' +
      '    }, {\n' +
      '      type: ChangeType.AddNewBlock,\n' +
      '      setting: {\n' +
      '        newBlockId: "highlight_" + block,\n' +
      '        blockSettings: {\n' +
      '          type: BlockElementType.Rect,\n' +
      '          label: ""\n' +
      '        }\n' +
      '      }\n' +
      '    }];\n' +
      '  });\n' +
      '}\n' +
      '\n' +
      'function addNewBlockActionExecutor(context, action) {\n' +
      '  if (!context) {\n' +
      '    return null;\n' +
      '  }\n' +
      '\n' +
      '  var val = action.value;\n' +
      '  return Object.keys(val).map(function (key) {\n' +
      '    return {\n' +
      '      type: ChangeType.AddNewBlock,\n' +
      '      setting: {\n' +
      '        newBlockId: key,\n' +
      '        blockSettings: val[key]\n' +
      '      }\n' +
      '    };\n' +
      '  });\n' +
      '}\n' +
      '\n' +
      'function changeBlockPositionActionExecutor(context, action) {\n' +
      '  if (!context) {\n' +
      '    return null;\n' +
      '  }\n' +
      '\n' +
      '  var val = action.value;\n' +
      '  return Object.keys(val).map(function (key) {\n' +
      '    return {\n' +
      '      type: ChangeType.ChangeStyle,\n' +
      '      setting: {\n' +
      '        blockId: key,\n' +
      '        newStyle: {\n' +
      '          position: val[key]\n' +
      '        }\n' +
      '      }\n' +
      '    };\n' +
      '  });\n' +
      '}\n' +
      '\n' +
      'function changeLabelActionExecutor(context, action) {\n' +
      '  if (!context) {\n' +
      '    return null;\n' +
      '  }\n' +
      '\n' +
      '  var val = action.value;\n' +
      '  return Object.keys(val).map(function (key) {\n' +
      '    var v = val[key];\n' +
      '    return {\n' +
      '      type: ChangeType.ChangeStyle,\n' +
      '      setting: {\n' +
      '        blockId: key,\n' +
      '        newStyle: {\n' +
      '          label: isHasLabel(v) ? v.label : v\n' +
      '        }\n' +
      '      }\n' +
      '    };\n' +
      '  });\n' +
      '}\n' +
      '\n' +
      'function connectActionExecutor(context, action) {\n' +
      '  if (isConnectActionSetting(action.value)) {\n' +
      '    var _action$value$name, _action$value$label;\n' +
      '\n' +
      '    var newBlockId = (_action$value$name = action.value.name) != null ? _action$value$name : "line_" + context.indexItem.phaseId;\n' +
      '    return [{\n' +
      '      type: ChangeType.AddNewBlock,\n' +
      '      setting: {\n' +
      '        newBlockId: newBlockId,\n' +
      '        blockSettings: _extends({}, action.value, {\n' +
      '          type: BlockElementType.Line,\n' +
      '          label: (_action$value$label = action.value.label) != null ? _action$value$label : newBlockId\n' +
      '        })\n' +
      '      }\n' +
      '    }];\n' +
      '  }\n' +
      '\n' +
      '  return null;\n' +
      '}\n' +
      '\n' +
      'function removeHighlightActionExecutor(context, _) {\n' +
      '  var _context$architecture;\n' +
      '\n' +
      '  var blocks = ((_context$architecture = context.architecture.style) == null ? void 0 : _context$architecture.blocks) || {};\n' +
      '  return [{\n' +
      '    type: ChangeType.RemoveBlock,\n' +
      '    setting: {\n' +
      '      blocks: Object.keys(blocks).filter(function (x) {\n' +
      '        return blocks[x].isHighlight;\n' +
      '      })\n' +
      '    }\n' +
      '  }];\n' +
      '}\n' +
      '\n' +
      'function startPhases(architecture, phaseIndex, phaseInfo) {\n' +
      '  var indexItems = phaseIndex.getPhaseById(phaseInfo.current);\n' +
      '\n' +
      '  if (indexItems) {\n' +
      '    return indexItems.map(function (indexItem) {\n' +
      '      var actionContext = {\n' +
      '        indexItem: indexItem,\n' +
      '        architecture: architecture,\n' +
      '        phaseIndex: phaseIndex\n' +
      '      };\n' +
      '      var changes = indexItem.actions.flatMap(function (item) {\n' +
      '        return executePhaseIndex(item, actionContext);\n' +
      '      });\n' +
      '      changes.filter(isNotNullOrUndefined).forEach(function (change) {\n' +
      '        return makeChange(architecture, change);\n' +
      '      });\n' +
      '      return indexItem.nextPhaseId;\n' +
      '    })[0];\n' +
      '  }\n' +
      '\n' +
      '  return null;\n' +
      '}\n' +
      '\n' +
      'function executePhaseIndex(item, context) {\n' +
      '  if (item.action.name === ActionType.Connect) {\n' +
      '    return connectActionExecutor(context, item.action);\n' +
      '  } else if (item.action.name === ActionType.AddNewBlock) {\n' +
      '    return addNewBlockActionExecutor(context, item.action);\n' +
      '  } else if (item.action.name === ActionType.ChangePosition) {\n' +
      '    return changeBlockPositionActionExecutor(context, item.action);\n' +
      '  } else if (item.action.name === ActionType.ChangeLabel) {\n' +
      '    return changeLabelActionExecutor(context, item.action);\n' +
      '  } else if (item.action.name === ActionType.Highlight) {\n' +
      '    return addHighlightActionExecutor(context, item.action);\n' +
      '  } else if (item.action.name === ActionType.RemoveHighlight) {\n' +
      '    return removeHighlightActionExecutor(context);\n' +
      '  }\n' +
      '\n' +
      '  throw "Not implemented!";\n' +
      '}\n' +
      '\n' +
      'function makeChange(architecture, change) {\n' +
      '  if (change.type === ChangeType.AddNewBlock) {\n' +
      '    var setting = change.setting;\n' +
      '\n' +
      '    if (setting) {\n' +
      '      architecture.blocks[setting.newBlockId] = setting.blockSettings;\n' +
      '    }\n' +
      '  } else if (change.type === ChangeType.ChangeStyle) {\n' +
      '    var _architecture$style;\n' +
      '\n' +
      '    var _setting = change.setting;\n' +
      '\n' +
      '    if (_setting && (_architecture$style = architecture.style) != null && _architecture$style.blocks) {\n' +
      '      var _architecture$style2, _architecture$style2$;\n' +
      '\n' +
      '      var currentSetting = (_architecture$style2 = architecture.style) == null ? void 0 : (_architecture$style2$ = _architecture$style2.blocks) == null ? void 0 : _architecture$style2$[_setting.blockId];\n' +
      '\n' +
      '      if (currentSetting) {\n' +
      '        architecture.style.blocks[_setting.blockId] = deepAssign({}, currentSetting, _setting.newStyle);\n' +
      '      } else {\n' +
      '        architecture.style.blocks[_setting.blockId] = deepAssign({}, _setting.newStyle);\n' +
      '      }\n' +
      '    }\n' +
      '  } else if (change.type === ChangeType.RemoveBlock) {\n' +
      '    var _setting2 = change.setting;\n' +
      '\n' +
      '    _setting2.blocks.forEach(function (x) {\n' +
      '      var _architecture$style3, _architecture$style3$;\n' +
      '\n' +
      '      delete architecture.blocks[x];\n' +
      '      (_architecture$style3 = architecture.style) == null ? true : (_architecture$style3$ = _architecture$style3.blocks) == null ? true : delete _architecture$style3$[x];\n' +
      '    });\n' +
      '  } else {\n' +
      '    throw new Error("Function not implemented.");\n' +
      '  }\n' +
      '}\n' +
      '\n' +
      'function buildPhasesIndex(phases) {\n' +
      '  var index = buildIndexObject(phases);\n' +
      '  return {\n' +
      '    getPhaseById: function getPhaseById(id) {\n' +
      '      if (!id) {\n' +
      '        return index.filter(function (x) {\n' +
      '          return x.isStart;\n' +
      '        });\n' +
      '      }\n' +
      '\n' +
      '      var ids = [];\n' +
      '\n' +
      '      if (Array.isArray(id)) {\n' +
      '        ids = id.filter(isNotNullOrUndefined);\n' +
      '      } else {\n' +
      '        ids = [id];\n' +
      '      }\n' +
      '\n' +
      '      return index.filter(function (x) {\n' +
      '        return x.phaseId && ids.indexOf(x.phaseId) > -1;\n' +
      '      });\n' +
      '    },\n' +
      '    phases: index.map(function (x) {\n' +
      '      return x.phaseId;\n' +
      '    }),\n' +
      '    getPhaseIndex: function getPhaseIndex(phase) {\n' +
      '      return index.findIndex(function (x) {\n' +
      '        return x.phaseId === phase;\n' +
      '      });\n' +
      '    }\n' +
      '  };\n' +
      '}\n' +
      '\n' +
      'function buildIndexObject(phase, isStart, id) {\n' +
      '  if (isStart === void 0) {\n' +
      '    isStart = true;\n' +
      '  }\n' +
      '\n' +
      '  if (id === void 0) {\n' +
      '    id = "start";\n' +
      '  }\n' +
      '\n' +
      '  if (!phase) {\n' +
      '    return [];\n' +
      '  }\n' +
      '\n' +
      '  if (isPhaseAction(phase)) {\n' +
      '    var actions = Object.keys(phase).flatMap(function (key) {\n' +
      '      var action = phase[key];\n' +
      '      var actions = [];\n' +
      '\n' +
      '      if (!Array.isArray(action)) {\n' +
      '        actions = [action];\n' +
      '      } else {\n' +
      '        actions = action;\n' +
      '      }\n' +
      '\n' +
      '      return actions.map(function (y) {\n' +
      '        return {\n' +
      '          action: {\n' +
      '            name: key,\n' +
      '            value: y\n' +
      '          }\n' +
      '        };\n' +
      '      });\n' +
      '    });\n' +
      '    return [{\n' +
      '      isStart: isStart,\n' +
      '      nextPhaseId: null,\n' +
      '      phaseId: "" + id,\n' +
      '      actions: actions\n' +
      '    }];\n' +
      '  } else if (isParallelPhase(phase)) {\n' +
      '    var items = Object.keys(phase).flatMap(function (x) {\n' +
      '      var val = phase[x];\n' +
      '      return buildIndexObject(val, isStart, id + "_" + x);\n' +
      '    });\n' +
      '    return items;\n' +
      '  } else if (isGraduallyPhases(phase)) {\n' +
      '    var childId = id + "_child";\n' +
      '\n' +
      '    var _items = phase.map(function (x, index) {\n' +
      '      return buildIndexObject(x, isStart && index === 0, childId);\n' +
      '    });\n' +
      '\n' +
      '    _items.forEach(function (group, index) {\n' +
      '      group.forEach(function (groupItem) {\n' +
      '        if (groupItem.phaseId === childId) {\n' +
      '          groupItem.phaseId += "_" + index;\n' +
      '\n' +
      '          if (index + 1 < _items.length) {\n' +
      '            groupItem.nextPhaseId = childId + "_" + (index + 1);\n' +
      '          }\n' +
      '        }\n' +
      '      });\n' +
      '    });\n' +
      '\n' +
      '    return _items.flatMap(function (x) {\n' +
      '      return x;\n' +
      '    });\n' +
      '  }\n' +
      '\n' +
      '  throw "Not implemented!";\n' +
      '}\n' +
      '\n' +
      'function transformToArchitecture(description, setting) {\n' +
      '  var refDescription = isRef(description) ? description : ref(description);\n' +
      '  var value = refDescription.value;\n' +
      '  var transitionalArchitectureRef = ref(deepCopy(value));\n' +
      '  var transitionalArchitecture = transitionalArchitectureRef.value;\n' +
      '  transitionalArchitecture.blocks = {\n' +
      '    main: transitionalArchitecture.blocks\n' +
      '  };\n' +
      '  var architecture = computed(function () {\n' +
      '    if (isArchitectureDescription(transitionalArchitectureRef.value)) {\n' +
      '      return transformDescriptionToArchitecture(transitionalArchitectureRef, setting);\n' +
      '    }\n' +
      '\n' +
      '    return {\n' +
      '      name: "",\n' +
      '      blocks: ref([]),\n' +
      '      style: ref(null),\n' +
      '      phases: [],\n' +
      '      currentPhase: null,\n' +
      '      next: function next() {\n' +
      '        return null;\n' +
      '      },\n' +
      '      back: function back() {\n' +
      '        return null;\n' +
      '      },\n' +
      '      toPhase: function toPhase() {}\n' +
      '    };\n' +
      '  });\n' +
      '  return architecture;\n' +
      '}\n' +
      'function transformDescriptionToArchitecture(transitionalArchitectureRef, setting) {\n' +
      '  var oldValues = [];\n' +
      '  var enableWatcher = true;\n' +
      '  var currentPhase = reactive({\n' +
      '    current: null\n' +
      '  });\n' +
      '  watch(function () {\n' +
      '    return deepCopy(transitionalArchitectureRef.value);\n' +
      '  }, function (_, oldVal) {\n' +
      '    if (enableWatcher) {\n' +
      '      oldValues.push({\n' +
      '        arch: oldVal,\n' +
      '        phaseId: currentPhase.current\n' +
      '      });\n' +
      '    }\n' +
      '  });\n' +
      '  var blocks = computed(function () {\n' +
      '    return BlockGroupDescriptionsToBlock(transitionalArchitectureRef.value);\n' +
      '  });\n' +
      '  var phaseIndex = buildPhasesIndex(transitionalArchitectureRef.value.phases);\n' +
      '\n' +
      '  var next = function next() {\n' +
      '    enableWatcher = true;\n' +
      '    var nextPhaseId = startPhases(transitionalArchitectureRef.value, phaseIndex, currentPhase);\n' +
      '    currentPhase.current = nextPhaseId;\n' +
      '    return nextPhaseId;\n' +
      '  };\n' +
      '\n' +
      '  var back = function back() {\n' +
      '    var _val2;\n' +
      '\n' +
      '    var val = oldValues.pop();\n' +
      '\n' +
      '    while (oldValues.length > 0 && oldValues[oldValues.length - 1].phaseId == ((_val = val) == null ? void 0 : _val.phaseId)) {\n' +
      '      var _val;\n' +
      '\n' +
      '      val = oldValues.pop();\n' +
      '    }\n' +
      '\n' +
      '    if (val) {\n' +
      '      enableWatcher = false;\n' +
      '      transitionalArchitectureRef.value = val.arch;\n' +
      '      currentPhase.current = val.phaseId;\n' +
      '    }\n' +
      '\n' +
      '    return (_val2 = val) == null ? void 0 : _val2.phaseId;\n' +
      '  };\n' +
      '\n' +
      '  return {\n' +
      '    name: transitionalArchitectureRef.value.name,\n' +
      '    blocks: blocks,\n' +
      '    style: computed(function () {\n' +
      '      return styleDescriptionToArchitectureStyle(transitionalArchitectureRef.value, blocks.value, setting);\n' +
      '    }),\n' +
      '    next: next,\n' +
      '    back: back,\n' +
      '    toPhase: function toPhase(phaseId) {\n' +
      '      var phaseInd = phaseIndex.getPhaseIndex(phaseId);\n' +
      '      var currentPhaseInd = phaseIndex.getPhaseIndex(currentPhase.current);\n' +
      '      var walkerFn = phaseInd > currentPhaseInd ? next : back;\n' +
      '      var curPhaseId = null;\n' +
      '\n' +
      '      do {\n' +
      '        curPhaseId = walkerFn();\n' +
      '      } while (!!curPhaseId && curPhaseId.length > 0 && curPhaseId.indexOf(phaseId) === -1);\n' +
      '    },\n' +
      '    phases: phaseIndex.phases,\n' +
      '    currentPhase: computed(function () {\n' +
      '      return currentPhase.current;\n' +
      '    })\n' +
      '  };\n' +
      '}\n' +
      'function BlockGroupDescriptionsToBlock(description) {\n' +
      '  return blockGroupDescriptionsToBlock(description);\n' +
      '}\n' +
      '\n' +
      'var sum = function sum(a, b) {\n' +
      '  return a + b;\n' +
      '};\n' +
      '\n' +
      'export { ActionType, BlockElementType, ChangeType, PositioningSystem, autoPositioning, isActionSetting, isAddNewBlockActionSetting, isArchitectureDescription, isArray, isBlockElementDescription, isConnectActionSetting, isContainerBlock, isFormulaValue, isGraduallyPhases, isHasLabel, isLineBlockElement, isLineBlockElementDescription, isNotNullOrUndefined, isNullOrUndefined, isParallelPhase, isParentBlockElement, isPhaseAction, isRectPositioning, isString, startPhases, sum, transformDescriptionToArchitecture, transformToArchitecture };\n' +
      '//# sourceMappingURL=core.esm.js.map\n',
    deoptimizationTracker: PathTracker { entityPaths: [Object: null prototype] {} },
    error: [Function: bound error],
    fileName: '/home/alex/RiderProjects/Coya/Coya/libraries/core/dist/core.esm.js',
    getExports: [Function: bound getExports],
    getModuleExecIndex: [Function: getModuleExecIndex],
    getModuleName: [Function: bound basename],
    getReexports: [Function: bound getReexports],
    importDescriptions: [Object: null prototype] {
      isRef: [Object],
      unref: [Object],
      ref: [Object],
      computed: [Object],
      reactive: [Object],
      serialize: [Object],
      compile: [Object],
      stringify: [Object],
      watch: [Object]
    },
    includeAllExports: [Function: includeAllExports],
    includeDynamicImport: [Function: bound includeDynamicImport],
    includeVariableInModule: [Function: bound includeVariableInModule],
    magicString: MagicString {},
    module: [Circular *1],
    moduleContext: 'undefined',
    nodeConstructors: {
      ArrayExpression: [class ArrayExpression extends NodeBase],
      ArrayPattern: [class ArrayPattern extends NodeBase],
      ArrowFunctionExpression: [class ArrowFunctionExpression extends NodeBase],
      AssignmentExpression: [class AssignmentExpression extends NodeBase],
      AssignmentPattern: [class AssignmentPattern extends NodeBase],
      AwaitExpression: [class AwaitExpression extends NodeBase],
      BinaryExpression: [class BinaryExpression extends NodeBase],
      BlockStatement: [class BlockStatement extends NodeBase],
      BreakStatement: [class BreakStatement extends NodeBase],
      CallExpression: [class CallExpression extends NodeBase],
      CatchClause: [class CatchClause extends NodeBase],
      ChainExpression: [class ChainExpression extends NodeBase],
      ClassBody: [class ClassBody extends NodeBase],
      ClassDeclaration: [class ClassDeclaration extends ClassNode],
      ClassExpression: [class ClassExpression extends ClassNode],
      ConditionalExpression: [class ConditionalExpression extends NodeBase],
      ContinueStatement: [class ContinueStatement extends NodeBase],
      DoWhileStatement: [class DoWhileStatement extends NodeBase],
      EmptyStatement: [class EmptyStatement extends NodeBase],
      ExportAllDeclaration: [class ExportAllDeclaration extends NodeBase],
      ExportDefaultDeclaration: [class ExportDefaultDeclaration extends NodeBase],
      ExportNamedDeclaration: [class ExportNamedDeclaration extends NodeBase],
      ExportSpecifier: [class ExportSpecifier extends NodeBase],
      ExpressionStatement: [class ExpressionStatement extends NodeBase],
      ForInStatement: [class ForInStatement extends NodeBase],
      ForOfStatement: [class ForOfStatement extends NodeBase],
      ForStatement: [class ForStatement extends NodeBase],
      FunctionDeclaration: [class FunctionDeclaration extends FunctionNode],
      FunctionExpression: [class FunctionExpression extends FunctionNode],
      Identifier: [class Identifier extends NodeBase],
      IfStatement: [class IfStatement extends NodeBase],
      ImportDeclaration: [class ImportDeclaration extends NodeBase],
      ImportDefaultSpecifier: [class ImportDefaultSpecifier extends NodeBase],
      ImportExpression: [class ImportExpression extends NodeBase],
      ImportNamespaceSpecifier: [class ImportNamespaceSpecifier extends NodeBase],
      ImportSpecifier: [class ImportSpecifier extends NodeBase],
      LabeledStatement: [class LabeledStatement extends NodeBase],
      Literal: [class Literal extends NodeBase],
      LogicalExpression: [class LogicalExpression extends NodeBase],
      MemberExpression: [class MemberExpression extends NodeBase],
      MetaProperty: [class MetaProperty extends NodeBase],
      MethodDefinition: [class MethodDefinition extends MethodBase],
      NewExpression: [class NewExpression extends NodeBase],
      ObjectExpression: [class ObjectExpression extends NodeBase],
      ObjectPattern: [class ObjectPattern extends NodeBase],
      PrivateIdentifier: [class PrivateIdentifier extends NodeBase],
      Program: [class Program extends NodeBase],
      Property: [class Property extends MethodBase],
      PropertyDefinition: [class PropertyDefinition extends NodeBase],
      RestElement: [class RestElement extends NodeBase],
      ReturnStatement: [class ReturnStatement extends NodeBase],
      SequenceExpression: [class SequenceExpression extends NodeBase],
      SpreadElement: [class SpreadElement extends NodeBase],
      Super: [class Super extends NodeBase],
      SwitchCase: [class SwitchCase extends NodeBase],
      SwitchStatement: [class SwitchStatement extends NodeBase],
      TaggedTemplateExpression: [class TaggedTemplateExpression extends NodeBase],
      TemplateElement: [class TemplateElement extends NodeBase],
      TemplateLiteral: [class TemplateLiteral extends NodeBase],
      ThisExpression: [class ThisExpression extends NodeBase],
      ThrowStatement: [class ThrowStatement extends NodeBase],
      TryStatement: [class TryStatement extends NodeBase],
      UnaryExpression: [class UnaryExpression extends NodeBase],
      UnknownNode: [class UnknownNode extends NodeBase],
      UpdateExpression: [class UpdateExpression extends NodeBase],
      VariableDeclaration: [class VariableDeclaration extends NodeBase],
      VariableDeclarator: [class VariableDeclarator extends NodeBase],
      WhileStatement: [class WhileStatement extends NodeBase],
      YieldExpression: [class YieldExpression extends NodeBase]
    },
    options: {
      acorn: [Object],
      acornInjectPlugins: [],
      context: 'undefined',
      experimentalCacheExpiry: 10,
      external: [Function (anonymous)],
      inlineDynamicImports: undefined,
      input: [Array],
      makeAbsoluteExternalsRelative: true,
      manualChunks: undefined,
      maxParallelFileReads: 20,
      moduleContext: [Function (anonymous)],
      onwarn: [Function (anonymous)],
      perf: false,
      plugins: [Array],
      preserveEntrySignatures: false,
      preserveModules: undefined,
      preserveSymlinks: false,
      shimMissingExports: false,
      strictDeprecations: false,
      treeshake: [Object]
    },
    requestTreeshakingPass: [Function: requestTreeshakingPass],
    traceExport: [Function: bound getVariableForExportName],
    traceVariable: [Function: bound traceVariable],
    usesTopLevelAwait: false,
    warn: [Function: bound warn]
  },
  scope: ModuleScope {
    children: [
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope], [FunctionScope],
      [FunctionScope], [FunctionScope]
    ],
    variables: Map(58) {
      'this' => [LocalVariable],
      'BlockElementType' => [LocalVariable],
      'PositioningSystem' => [LocalVariable],
      'ActionType' => [LocalVariable],
      'ChangeType' => [LocalVariable],
      'isNotNullOrUndefined' => [LocalVariable],
      'isNullOrUndefined' => [LocalVariable],
      'isString' => [LocalVariable],
      'isBlockElementDescription' => [LocalVariable],
      'isParentBlockElement' => [LocalVariable],
      'isArchitectureDescription' => [LocalVariable],
      'isRectPositioning' => [LocalVariable],
      'isPhaseAction' => [LocalVariable],
      'isParallelPhase' => [LocalVariable],
      'isGraduallyPhases' => [LocalVariable],
      'isConnectActionSetting' => [LocalVariable],
      'isAddNewBlockActionSetting' => [LocalVariable],
      'isActionSetting' => [LocalVariable],
      'isArray' => [LocalVariable],
      'isLineBlockElementDescription' => [LocalVariable],
      'isLineBlockElement' => [LocalVariable],
      'isContainerBlock' => [LocalVariable],
      'isFormulaValue' => [LocalVariable],
      'isHasLabel' => [LocalVariable],
      'deepCopy' => [LocalVariable],
      'createBlockElementByString' => [LocalVariable],
      'createBlockElementByDescription' => [LocalVariable],
      'getDefaultEnter' => [LocalVariable],
      '_extends' => [LocalVariable],
      'createLineElementByDescription' => [LocalVariable],
      'blockGroupDescriptionsToBlock' => [LocalVariable],
      'getNumber' => [LocalVariable],
      'getFormulaValueFuncContext' => [LocalVariable],
      'getFormulaValue' => [LocalVariable],
      'lineBlockPosition' => [LocalVariable],
      'autoPositioning' => [LocalVariable],
      'defaultSiseSettings' => [LocalVariable],
      'getBlockPositioning' => [LocalVariable],
      'gridPositioning' => [LocalVariable],
      'prepareCss' => [LocalVariable],
      'styleDescriptionToArchitectureStyle' => [LocalVariable],
      'generateBlocksStyle' => [LocalVariable],
      'deepAssign' => [LocalVariable],
      'addHighlightActionExecutor' => [LocalVariable],
      'addNewBlockActionExecutor' => [LocalVariable],
      'changeBlockPositionActionExecutor' => [LocalVariable],
      'changeLabelActionExecutor' => [LocalVariable],
      'connectActionExecutor' => [LocalVariable],
      'removeHighlightActionExecutor' => [LocalVariable],
      'startPhases' => [LocalVariable],
      'executePhaseIndex' => [LocalVariable],
      'makeChange' => [LocalVariable],
      'buildPhasesIndex' => [LocalVariable],
      'buildIndexObject' => [LocalVariable],
      'transformToArchitecture' => [LocalVariable],
      'transformDescriptionToArchitecture' => [LocalVariable],
      'BlockGroupDescriptionsToBlock' => [LocalVariable],
      'sum' => [LocalVariable]
    },
    accessedOutsideVariables: Map(0) {},
    parent: GlobalScope { children: [Array], variables: [Map] },
    context: {
      addDynamicImport: [Function: bound addDynamicImport],
      addExport: [Function: bound addExport],
      addImport: [Function: bound addImport],
      addImportMeta: [Function: bound addImportMeta],
      code: "import { isRef, unref, ref, computed, reactive } from '@vue/reactivity';\n" +
        "import { serialize, compile, stringify } from 'stylis';\n" +
        "import { watch } from '@vue-reactivity/watch';\n" +
        '\n' +
        'var BlockElementType;\n' +
        '\n' +
        '(function (BlockElementType) {\n' +
        '  BlockElementType["Rect"] = "rect";\n' +
        '  BlockElementType["Line"] = "line";\n' +
        '  BlockElementType["Highlight"] = "highlight";\n' +
        '})(BlockElementType || (BlockElementType = {}));\n' +
        '\n' +
        'var PositioningSystem;\n' +
        '\n' +
        '(function (PositioningSystem) {\n' +
        '  PositioningSystem["Auto"] = "auto";\n' +
        '  PositioningSystem["Grid"] = "grid";\n' +
        '})(PositioningSystem || (PositioningSystem = {}));\n' +
        '\n' +
        'var ActionType;\n' +
        '\n' +
        '(function (ActionType) {\n' +
        '  ActionType["Connect"] = "connect";\n' +
        '  ActionType["AddNewBlock"] = "newBlock";\n' +
        '  ActionType["ChangePosition"] = "changePosition";\n' +
        '  ActionType["ChangeLabel"] = "changeLabel";\n' +
        '  ActionType["Highlight"] = "highlight";\n' +
        '  ActionType["RemoveHighlight"] = "removeHighlight";\n' +
        '})(ActionType || (ActionType = {}));\n' +
        '\n' +
        'var ChangeType;\n' +
        '\n' +
        '(function (ChangeType) {\n' +
        '  ChangeType[ChangeType["AddNewBlock"] = 0] = "AddNewBlock";\n' +
        '  ChangeType[ChangeType["ChangeStyle"] = 1] = "ChangeStyle";\n' +
        '  ChangeType[ChangeType["RemoveBlock"] = 2] = "RemoveBlock";\n' +
        '})(ChangeType || (ChangeType = {}));\n' +
        '\n' +
        'function isNotNullOrUndefined(obj) {\n' +
        '  return obj !== null && typeof obj !== "undefined";\n' +
        '}\n' +
        'function isNullOrUndefined(obj) {\n' +
        '  return obj === null || typeof obj === "undefined";\n' +
        '}\n' +
        'function isString(obj) {\n' +
        '  return typeof obj === "string";\n' +
        '}\n' +
        'function isBlockElementDescription(obj) {\n' +
        '  return typeof obj === "object" && isNotNullOrUndefined(obj) && "label" in obj;\n' +
        '}\n' +
        'function isParentBlockElement(obj) {\n' +
        '  return !!obj && !!obj.id && !!obj.label && Array.isArray(obj.children) && obj.children.length > 0;\n' +
        '}\n' +
        'function isArchitectureDescription(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var maybeDescription = obj;\n' +
        '    return !!maybeDescription.blocks\n' +
        '    /* && !!maybeDescription.animation && !!maybeDescription.phases */\n' +
        '    ;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isRectPositioning(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var rectPos = obj;\n' +
        '    return isNotNullOrUndefined(rectPos.x) && isNotNullOrUndefined(rectPos.y)\n' +
        '    /* && isNotNullOrUndefined(rectPos.width)  && isNotNullOrUndefined(rectPos.height)*/\n' +
        '    ;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isPhaseAction(obj) {\n' +
        '  if (obj) {\n' +
        '    var action = obj;\n' +
        '    return typeof action === "object" && !Array.isArray(action) && Object.keys(action).every(function (x) {\n' +
        '      var val = action[x];\n' +
        '\n' +
        '      if (typeof val === "string") {\n' +
        '        return true;\n' +
        '      }\n' +
        '\n' +
        '      if (Array.isArray(val)) {\n' +
        '        return val.every(function (y) {\n' +
        '          return typeof y === "string" || isActionSetting(y);\n' +
        '        });\n' +
        '      }\n' +
        '\n' +
        '      return Object.values(ActionType).some(function (y) {\n' +
        '        return y === x;\n' +
        '      });\n' +
        '    });\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isParallelPhase(obj) {\n' +
        '  if (obj) {\n' +
        '    var phase = obj;\n' +
        '    return typeof phase === "object" && !Array.isArray(phase) && !isPhaseAction(phase);\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isGraduallyPhases(obj) {\n' +
        '  return !!obj && Array.isArray(obj);\n' +
        '}\n' +
        'function isConnectActionSetting(obj) {\n' +
        '  if (obj) {\n' +
        '    var connect = obj;\n' +
        '    return !!connect.to && !!connect.from;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isAddNewBlockActionSetting(obj) {\n' +
        '  if (obj) {\n' +
        '    var connect = obj;\n' +
        '    return isBlockElementDescription(connect);\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isActionSetting(obj) {\n' +
        '  var action = obj;\n' +
        '  return isConnectActionSetting(action) && isAddNewBlockActionSetting(action);\n' +
        '}\n' +
        'function isArray(obj) {\n' +
        '  return Array.isArray(obj);\n' +
        '}\n' +
        'function isLineBlockElementDescription(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var line = obj;\n' +
        '    return line.type === BlockElementType.Line;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isLineBlockElement(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var line = obj;\n' +
        '    return line.type === BlockElementType.Line;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isContainerBlock(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var container = obj;\n' +
        '    if (!!container.parentId) return true;\n' +
        '    var blockEl = obj;\n' +
        '    return !blockEl.type;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isFormulaValue(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var formulaValue = obj;\n' +
        '    return !!formulaValue.formula && typeof formulaValue.formula === "string" || typeof formulaValue === "string";\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isHasLabel(obj) {\n' +
        '  return !!obj && typeof obj.label === "string";\n' +
        '}\n' +
        '\n' +
        'function deepCopy(val) {\n' +
        '  return !!val ? JSON.parse(JSON.stringify(val)) : val;\n' +
        '}\n' +
        '\n' +
        'function createBlockElementByString(id, label, blockStyle) {\n' +
        '  var _blockStyle$label;\n' +
        '\n' +
        '  return {\n' +
        '    id: id,\n' +
        '    label: (_blockStyle$label = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label : label,\n' +
        '    enter: getDefaultEnter()\n' +
        '  };\n' +
        '}\n' +
        'function createBlockElementByDescription(id, element, blockStyle) {\n' +
        '  var _ref, _blockStyle$label2, _deepCopy;\n' +
        '\n' +
        '  return {\n' +
        '    label: (_ref = (_blockStyle$label2 = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label2 : element.label) != null ? _ref : id,\n' +
        '    enter: (_deepCopy = deepCopy(element.enter)) != null ? _deepCopy : getDefaultEnter(),\n' +
        '    id: id\n' +
        '  };\n' +
        '}\n' +
        'function getDefaultEnter() {\n' +
        '  return {\n' +
        '    from: {\n' +
        '      opacity: 0\n' +
        '    },\n' +
        '    to: {\n' +
        '      opacity: 1,\n' +
        '      duration: 3\n' +
        '    }\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function _extends() {\n' +
        '  _extends = Object.assign || function (target) {\n' +
        '    for (var i = 1; i < arguments.length; i++) {\n' +
        '      var source = arguments[i];\n' +
        '\n' +
        '      for (var key in source) {\n' +
        '        if (Object.prototype.hasOwnProperty.call(source, key)) {\n' +
        '          target[key] = source[key];\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '\n' +
        '    return target;\n' +
        '  };\n' +
        '\n' +
        '  return _extends.apply(this, arguments);\n' +
        '}\n' +
        '\n' +
        'function createLineElementByDescription(id, value, blockStyle) {\n' +
        '  var _ref, _blockStyle$label;\n' +
        '\n' +
        '  return _extends({\n' +
        '    id: id\n' +
        '  }, value, {\n' +
        '    label: (_ref = (_blockStyle$label = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label : value.label) != null ? _ref : id\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function blockGroupDescriptionsToBlock(architecture) {\n' +
        '  var description = architecture.blocks;\n' +
        '\n' +
        '  var blockGroupDescriptionsToBlock2 = function blockGroupDescriptionsToBlock2(description) {\n' +
        '    var blocks = Object.keys(description).flatMap(function (key) {\n' +
        '      var _architecture$style, _architecture$style$b;\n' +
        '\n' +
        '      var value = description[key];\n' +
        '      var blockStyle = (_architecture$style = architecture.style) == null ? void 0 : (_architecture$style$b = _architecture$style.blocks) == null ? void 0 : _architecture$style$b[key];\n' +
        '\n' +
        '      if (isString(value)) {\n' +
        '        return createBlockElementByString(key, value, blockStyle);\n' +
        '      }\n' +
        '\n' +
        '      if (isBlockElementDescription(value)) {\n' +
        '        if (isLineBlockElementDescription(value)) {\n' +
        '          return createLineElementByDescription(key, value, blockStyle);\n' +
        '        }\n' +
        '\n' +
        '        return createBlockElementByDescription(key, value, blockStyle);\n' +
        '      }\n' +
        '\n' +
        '      if (value === null) {\n' +
        '        return createBlockElementByString(key, key, blockStyle);\n' +
        '      }\n' +
        '\n' +
        '      var items = blockGroupDescriptionsToBlock2(value);\n' +
        '      items.forEach(function (x) {\n' +
        '        var _x$parentId;\n' +
        '\n' +
        '        return isContainerBlock(x) ? x.parentId = (_x$parentId = x.parentId) != null ? _x$parentId : key : null;\n' +
        '      });\n' +
        '      return [{\n' +
        '        id: key,\n' +
        '        label: key,\n' +
        '        children: items.filter(function (x) {\n' +
        '          return isContainerBlock(x) && x.parentId === key;\n' +
        '        }),\n' +
        '        enter: getDefaultEnter()\n' +
        '      }].concat(items);\n' +
        '    });\n' +
        '    return blocks;\n' +
        '  };\n' +
        '\n' +
        '  return blockGroupDescriptionsToBlock2(description);\n' +
        '}\n' +
        '\n' +
        'function getNumber(obj) {\n' +
        '  return isRef(obj) ? obj.value : obj;\n' +
        '}\n' +
        '\n' +
        'function getFormulaValueFuncContext(blocksPositioning, setting) {\n' +
        '  return {\n' +
        '    blockNamesAsFuncParams: blocksPositioning.value.map(function (x) {\n' +
        '      return x.blockId;\n' +
        '    }).join(", ") + ", _",\n' +
        '    blocksValues: [].concat(blocksPositioning.value.map(function (x) {\n' +
        '      return x.position;\n' +
        '    }), [{\n' +
        '      viewBox: {\n' +
        '        x: unref(setting.viewBox.x),\n' +
        '        y: unref(setting.viewBox.y),\n' +
        '        w: unref(setting.viewBox.w),\n' +
        '        h: unref(setting.viewBox.h)\n' +
        '      }\n' +
        '    }])\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function getFormulaValue(val, positioning, setting) {\n' +
        '  if (typeof val === "number") {\n' +
        '    return ref(val);\n' +
        '  }\n' +
        '\n' +
        '  if (isFormulaValue(val)) {\n' +
        '    var formula = typeof val === "string" ? val : val.formula;\n' +
        '    return computed(function () {\n' +
        '      var context = getFormulaValueFuncContext(positioning, setting);\n' +
        '      var fn = Function("\\"use strict\\";return (function(" + context.blockNamesAsFuncParams + "){return " + formula + ";})")();\n' +
        '      return fn.apply(null, context.blocksValues) || 0;\n' +
        '    });\n' +
        '  }\n' +
        '\n' +
        '  return ref(0);\n' +
        '}\n' +
        '\n' +
        'function lineBlockPosition(blocksPositions, block, setting, blockStyle) {\n' +
        '  var _blockStyle$position$, _blockStyle$position, _blockStyle$position2, _blockStyle$position$2, _blockStyle$position3, _blockStyle$position4, _blockStyle$position$3, _blockStyle$position5, _blockStyle$position6, _blockStyle$position$4, _blockStyle$position7, _blockStyle$position8, _blockStyle$position9, _blockStyle$position10, _blockStyle$position11, _blockStyle$position12, _blockStyle$position13, _blockStyle$position14, _blockStyle$position15, _blockStyle$position16;\n' +
        '\n' +
        '  var blockFromPos = computed(function () {\n' +
        '    var _blocksPositions$valu;\n' +
        '\n' +
        '    return (_blocksPositions$valu = blocksPositions.value) == null ? void 0 : _blocksPositions$valu.find(function (x) {\n' +
        '      return x.blockId === block.from;\n' +
        '    });\n' +
        '  });\n' +
        '  var blockToPos = computed(function () {\n' +
        '    var _blocksPositions$valu2;\n' +
        '\n' +
        '    return (_blocksPositions$valu2 = blocksPositions.value) == null ? void 0 : _blocksPositions$valu2.find(function (x) {\n' +
        '      return x.blockId === block.to;\n' +
        '    });\n' +
        '  });\n' +
        '  var isToRighter = computed(function () {\n' +
        '    var _blockFromPos$value, _blockToPos$value, _blockFromPos$value2, _blockToPos$value2;\n' +
        '\n' +
        '    return ((_blockFromPos$value = blockFromPos.value) == null ? void 0 : _blockFromPos$value.position) && ((_blockToPos$value = blockToPos.value) == null ? void 0 : _blockToPos$value.position) && isRectPositioning((_blockFromPos$value2 = blockFromPos.value) == null ? void 0 : _blockFromPos$value2.position) && isRectPositioning((_blockToPos$value2 = blockToPos.value) == null ? void 0 : _blockToPos$value2.position) && blockFromPos.value.position.x < blockToPos.value.position.x;\n' +
        '  });\n' +
        '\n' +
        '  var getValueByCtx = function getValueByCtx(x) {\n' +
        '    return getFormulaValue(x, blocksPositions, setting);\n' +
        '  };\n' +
        '\n' +
        '  var indentX1 = getValueByCtx((_blockStyle$position$ = blockStyle == null ? void 0 : (_blockStyle$position = blockStyle.position) == null ? void 0 : _blockStyle$position.indentX1) != null ? _blockStyle$position$ : blockStyle == null ? void 0 : (_blockStyle$position2 = blockStyle.position) == null ? void 0 : _blockStyle$position2.indentX);\n' +
        '  var indentX2 = getValueByCtx((_blockStyle$position$2 = blockStyle == null ? void 0 : (_blockStyle$position3 = blockStyle.position) == null ? void 0 : _blockStyle$position3.indentX2) != null ? _blockStyle$position$2 : blockStyle == null ? void 0 : (_blockStyle$position4 = blockStyle.position) == null ? void 0 : _blockStyle$position4.indentX);\n' +
        '  var indentY1 = getValueByCtx((_blockStyle$position$3 = blockStyle == null ? void 0 : (_blockStyle$position5 = blockStyle.position) == null ? void 0 : _blockStyle$position5.indentY1) != null ? _blockStyle$position$3 : blockStyle == null ? void 0 : (_blockStyle$position6 = blockStyle.position) == null ? void 0 : _blockStyle$position6.indentY);\n' +
        '  var indentY2 = getValueByCtx((_blockStyle$position$4 = blockStyle == null ? void 0 : (_blockStyle$position7 = blockStyle.position) == null ? void 0 : _blockStyle$position7.indentY2) != null ? _blockStyle$position$4 : blockStyle == null ? void 0 : (_blockStyle$position8 = blockStyle.position) == null ? void 0 : _blockStyle$position8.indentY);\n' +
        '  var x1 = blockStyle != null && (_blockStyle$position9 = blockStyle.position) != null && _blockStyle$position9.x1 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position10 = blockStyle.position) == null ? void 0 : _blockStyle$position10.x1) : computed(function () {\n' +
        '    var blockPos = blockFromPos.value;\n' +
        '\n' +
        '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.x) {\n' +
        '      return getNumber(blockPos.position.x) + (!isToRighter.value ? 0 : getNumber(blockPos.position.width)) + indentX1.value;\n' +
        '    }\n' +
        '\n' +
        '    return indentX1.value;\n' +
        '  });\n' +
        '  var y1 = blockStyle != null && (_blockStyle$position11 = blockStyle.position) != null && _blockStyle$position11.y1 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position12 = blockStyle.position) == null ? void 0 : _blockStyle$position12.y1) : computed(function () {\n' +
        '    var blockPos = blockFromPos.value;\n' +
        '\n' +
        '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.y) {\n' +
        '      return getNumber(blockPos == null ? void 0 : blockPos.position.y) + getNumber(blockPos.position.height) / 2 + indentY1.value;\n' +
        '    }\n' +
        '\n' +
        '    return indentY1.value;\n' +
        '  });\n' +
        '  var x2 = blockStyle != null && (_blockStyle$position13 = blockStyle.position) != null && _blockStyle$position13.x2 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position14 = blockStyle.position) == null ? void 0 : _blockStyle$position14.x2) : computed(function () {\n' +
        '    var blockPos = blockToPos.value;\n' +
        '\n' +
        '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.x) {\n' +
        '      return getNumber(blockPos == null ? void 0 : blockPos.position.x) + (!isToRighter.value ? getNumber(blockPos.position.width) : 0) + indentX2.value;\n' +
        '    }\n' +
        '\n' +
        '    return indentX2.value;\n' +
        '  });\n' +
        '  var y2 = blockStyle != null && (_blockStyle$position15 = blockStyle.position) != null && _blockStyle$position15.y2 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position16 = blockStyle.position) == null ? void 0 : _blockStyle$position16.y2) : computed(function () {\n' +
        '    var blockPos = blockToPos.value;\n' +
        '\n' +
        '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.y) {\n' +
        '      return getNumber(blockPos == null ? void 0 : blockPos.position.y) + getNumber(blockPos.position.height) / 2 + indentY2.value;\n' +
        '    }\n' +
        '\n' +
        '    return indentY2.value;\n' +
        '  });\n' +
        '  return {\n' +
        '    blockId: block.id,\n' +
        '    position: {\n' +
        '      x1: x1,\n' +
        '      y1: y1,\n' +
        '      x2: x2,\n' +
        '      y2: y2\n' +
        '    }\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function autoPositioning(setting) {\n' +
        '  var _setting$sizeSetting;\n' +
        '\n' +
        '  var sizeSetting = (_setting$sizeSetting = setting.sizeSetting) != null ? _setting$sizeSetting : defaultSiseSettings;\n' +
        '  var blocks = setting.blocks;\n' +
        '  var blocksPositioning = ref([]);\n' +
        '  blocksPositioning.value = blocks.map(function (block) {\n' +
        '    if (!isContainerBlock(block)) {\n' +
        '      if (isLineBlockElement(block)) {\n' +
        '        return lineBlockPosition(blocksPositioning, block, setting.setting);\n' +
        '      }\n' +
        '\n' +
        '      return null;\n' +
        '    }\n' +
        '\n' +
        '    var parentBlockComp = computed(function () {\n' +
        '      return blocks.find(function (x) {\n' +
        '        return x.id === block.parentId;\n' +
        '      });\n' +
        '    });\n' +
        '    var parentPosComp = computed(function () {\n' +
        '      var _parentBlockComp$valu;\n' +
        '\n' +
        '      return (_parentBlockComp$valu = parentBlockComp.value) != null && _parentBlockComp$valu.id ? getBlockPositioning(blocksPositioning.value, parentBlockComp.value.id) : null;\n' +
        '    });\n' +
        '    var blockInParentIndexComp = computed(function () {\n' +
        '      return isParentBlockElement(parentBlockComp.value) ? parentBlockComp.value.children.indexOf(block) : -1;\n' +
        '    });\n' +
        '    var columnIndexComp = computed(function () {\n' +
        '      return blockInParentIndexComp.value % sizeSetting.parentChildrenInRowCount;\n' +
        '    });\n' +
        '    var rowIndexComp = computed(function () {\n' +
        '      return Math.floor(blockInParentIndexComp.value / sizeSetting.parentChildrenInRowCount);\n' +
        '    });\n' +
        '    var brotherLeftBlockComp = computed(function () {\n' +
        '      return isParentBlockElement(parentBlockComp.value) ? parentBlockComp.value.children[blockInParentIndexComp.value - 1] : null;\n' +
        '    });\n' +
        '    var brotherLeftPosComp = computed(function () {\n' +
        '      var _brotherLeftBlockComp, _brotherLeftBlockComp2;\n' +
        '\n' +
        '      return (_brotherLeftBlockComp = brotherLeftBlockComp.value) != null && _brotherLeftBlockComp.id ? getBlockPositioning(blocksPositioning.value, (_brotherLeftBlockComp2 = brotherLeftBlockComp.value) == null ? void 0 : _brotherLeftBlockComp2.id) : null;\n' +
        '    });\n' +
        '    var x = computed(function () {\n' +
        '      if (block.parentId) {\n' +
        '        var parentBlock = parentBlockComp.value;\n' +
        '        var parentPos = parentPosComp.value;\n' +
        '\n' +
        '        if (isParentBlockElement(parentBlock) && isRectPositioning(parentPos)) {\n' +
        '          if (columnIndexComp.value === 0) {\n' +
        '            return getNumber(parentPos.x) + sizeSetting.gap;\n' +
        '          }\n' +
        '\n' +
        '          var brotherPos = brotherLeftPosComp.value;\n' +
        '\n' +
        '          if (isRectPositioning(brotherPos)) {\n' +
        '            return getNumber(brotherPos.x) + getNumber(brotherPos.width) + sizeSetting.gap;\n' +
        '          }\n' +
        '\n' +
        '          return getNumber(parentPos.x) + sizeSetting.gap;\n' +
        '        }\n' +
        '      }\n' +
        '\n' +
        '      return sizeSetting.gap;\n' +
        '    });\n' +
        '    var y = computed(function () {\n' +
        '      if (block.parentId) {\n' +
        '        var parentBlock = parentBlockComp.value;\n' +
        '        var parentPos = parentPosComp.value;\n' +
        '\n' +
        '        if (isParentBlockElement(parentBlock) && isRectPositioning(parentPos)) {\n' +
        '          if (rowIndexComp.value === 0) {\n' +
        '            return getNumber(parentPos.y) + sizeSetting.gap;\n' +
        '          }\n' +
        '\n' +
        '          var previousRowIndex = rowIndexComp.value - 1;\n' +
        '          var startIndex = previousRowIndex * sizeSetting.parentChildrenInRowCount;\n' +
        '          var maxY = 0;\n' +
        '          parentBlock.children.slice(startIndex, startIndex + sizeSetting.parentChildrenInRowCount).forEach(function (brotherBlock) {\n' +
        '            var pos = getBlockPositioning(blocksPositioning.value, brotherBlock.id);\n' +
        '\n' +
        '            if (isRectPositioning(pos)) {\n' +
        '              var newY = getNumber(pos.y) + getNumber(pos.height);\n' +
        '\n' +
        '              if (newY > maxY) {\n' +
        '                maxY = newY;\n' +
        '              }\n' +
        '            }\n' +
        '          });\n' +
        '          return maxY + sizeSetting.gap;\n' +
        '        }\n' +
        '      }\n' +
        '\n' +
        '      return sizeSetting.gap;\n' +
        '    });\n' +
        '    var width = computed(function () {\n' +
        '      if (isParentBlockElement(block)) {\n' +
        '        var maxX = 0;\n' +
        '        block.children.forEach(function (child) {\n' +
        '          var _blocksPositioning$va;\n' +
        '\n' +
        '          var pos = (_blocksPositioning$va = blocksPositioning.value.find(function (x) {\n' +
        '            return x.blockId === child.id;\n' +
        '          })) == null ? void 0 : _blocksPositioning$va.position;\n' +
        '\n' +
        '          if (isRectPositioning(pos)) {\n' +
        '            var newX = getNumber(pos.x) + getNumber(pos.width);\n' +
        '\n' +
        '            if (newX > maxX) {\n' +
        '              maxX = newX;\n' +
        '            }\n' +
        '          }\n' +
        '        });\n' +
        '        return maxX - x.value + sizeSetting.gap;\n' +
        '      }\n' +
        '\n' +
        '      return sizeSetting.rectWidth;\n' +
        '    });\n' +
        '    var height = computed(function () {\n' +
        '      if (isParentBlockElement(block)) {\n' +
        '        var maxY = 0;\n' +
        '        block.children.forEach(function (child) {\n' +
        '          var _blocksPositioning$va2;\n' +
        '\n' +
        '          var pos = (_blocksPositioning$va2 = blocksPositioning.value.find(function (x) {\n' +
        '            return x.blockId === child.id;\n' +
        '          })) == null ? void 0 : _blocksPositioning$va2.position;\n' +
        '\n' +
        '          if (isRectPositioning(pos)) {\n' +
        '            var newY = getNumber(pos.y) + getNumber(pos.height);\n' +
        '\n' +
        '            if (newY > maxY) {\n' +
        '              maxY = newY;\n' +
        '            }\n' +
        '          }\n' +
        '        });\n' +
        '        return maxY - y.value + sizeSetting.gap;\n' +
        '      }\n' +
        '\n' +
        '      return sizeSetting.rectHeight;\n' +
        '    });\n' +
        '    return {\n' +
        '      blockId: block.id,\n' +
        '      position: {\n' +
        '        x: x,\n' +
        '        y: y,\n' +
        '        width: width,\n' +
        '        height: height\n' +
        '      }\n' +
        '    };\n' +
        '  }).filter(isNotNullOrUndefined);\n' +
        '  return blocksPositioning.value;\n' +
        '}\n' +
        'var defaultSiseSettings = {\n' +
        '  rectHeight: 20,\n' +
        '  rectWidth: 30,\n' +
        '  gap: 10,\n' +
        '  parentChildrenInRowCount: 3\n' +
        '};\n' +
        '\n' +
        'function getBlockPositioning(blocksPositioning, id) {\n' +
        '  var _blocksPositioning$fi;\n' +
        '\n' +
        '  return (_blocksPositioning$fi = blocksPositioning.find(function (x) {\n' +
        '    return x.blockId === id;\n' +
        '  })) == null ? void 0 : _blocksPositioning$fi.position;\n' +
        '}\n' +
        '\n' +
        'function gridPositioning(option) {\n' +
        '  var _option$architectureD3;\n' +
        '\n' +
        '  var blocks = option.blocks.filter(function (x) {\n' +
        '    return x.id !== "main";\n' +
        '  });\n' +
        '  var notSettetBlocks = blocks.filter(function (block) {\n' +
        '    var _option$architectureD, _option$architectureD2;\n' +
        '\n' +
        '    if (isLineBlockElement(block)) {\n' +
        '      return false;\n' +
        '    }\n' +
        '\n' +
        '    var styleBlock = (_option$architectureD = option.architectureDescription.style) == null ? void 0 : (_option$architectureD2 = _option$architectureD.blocks) == null ? void 0 : _option$architectureD2[block.id];\n' +
        '    return !styleBlock || !styleBlock.position;\n' +
        '  });\n' +
        '  var style = (_option$architectureD3 = option.architectureDescription.style) == null ? void 0 : _option$architectureD3.blocks;\n' +
        '\n' +
        '  if (!style || notSettetBlocks.length > 0) {\n' +
        '    throw "Not every block has setting: [" + notSettetBlocks.map(function (x) {\n' +
        '      return x.id;\n' +
        '    }) + "]";\n' +
        '  }\n' +
        '\n' +
        '  var gridSize = {\n' +
        '    columnWidth: 20,\n' +
        '    rowHeight: 20\n' +
        '  };\n' +
        '  var blocksPositioning = ref([]);\n' +
        '\n' +
        '  var getValueByCtx = function getValueByCtx(x, multiplier) {\n' +
        '    if (multiplier === void 0) {\n' +
        '      multiplier = 1;\n' +
        '    }\n' +
        '\n' +
        '    var res = getFormulaValue(x, blocksPositioning, option.setting);\n' +
        '\n' +
        '    if (isFormulaValue(x)) {\n' +
        '      return res;\n' +
        '    }\n' +
        '\n' +
        '    return ref(res.value * multiplier);\n' +
        '  };\n' +
        '\n' +
        '  blocksPositioning.value = blocks.map(function (block) {\n' +
        '    var blockStyle = style[block.id];\n' +
        '\n' +
        '    if (!isContainerBlock(block)) {\n' +
        '      if (isLineBlockElement(block)) {\n' +
        '        return lineBlockPosition(blocksPositioning, block, option.setting, blockStyle);\n' +
        '      }\n' +
        '\n' +
        '      return null;\n' +
        '    }\n' +
        '\n' +
        '    if (blockStyle.position) {\n' +
        '      var _getValueByCtx, _getValueByCtx2;\n' +
        '\n' +
        '      var pos = blockStyle.position;\n' +
        '      var indentX = (_getValueByCtx = getValueByCtx(pos.indentX)) != null ? _getValueByCtx : 0;\n' +
        '      var indentY = (_getValueByCtx2 = getValueByCtx(pos.indentY)) != null ? _getValueByCtx2 : 0;\n' +
        '      return {\n' +
        '        blockId: block.id,\n' +
        '        position: {\n' +
        '          x: computed(function () {\n' +
        '            return getValueByCtx(pos.x, gridSize.columnWidth).value + indentX.value;\n' +
        '          }),\n' +
        '          y: computed(function () {\n' +
        '            return getValueByCtx(pos.y, gridSize.rowHeight).value + indentY.value;\n' +
        '          }),\n' +
        '          width: computed(function () {\n' +
        '            return getValueByCtx(pos.w, gridSize.columnWidth).value + indentX.value;\n' +
        '          }),\n' +
        '          height: computed(function () {\n' +
        '            return getValueByCtx(pos.h, gridSize.rowHeight).value + indentY.value;\n' +
        '          })\n' +
        '        }\n' +
        '      };\n' +
        '    }\n' +
        '\n' +
        '    return null;\n' +
        '  }).filter(isNotNullOrUndefined);\n' +
        '  return blocksPositioning.value;\n' +
        '}\n' +
        '\n' +
        'function prepareCss(architectureDescription) {\n' +
        '  var _architectureDescript, _architectureDescript2;\n' +
        '\n' +
        '  return (_architectureDescript = architectureDescription.style) != null && _architectureDescript.css ? serialize(compile("#" + architectureDescription.name + " {" + ((_architectureDescript2 = architectureDescription.style) == null ? void 0 : _architectureDescript2.css) + "}"), stringify) : undefined;\n' +
        '}\n' +
        '\n' +
        'function styleDescriptionToArchitectureStyle(architectureDescription, blocks, setting) {\n' +
        '  var _architectureDescript, _architectureDescript2;\n' +
        '\n' +
        '  var positioningSystem = (_architectureDescript = architectureDescription.style) == null ? void 0 : _architectureDescript.positioning;\n' +
        '  var css = prepareCss(architectureDescription);\n' +
        '  return {\n' +
        '    id: "style",\n' +
        '    positioning: !positioningSystem || positioningSystem === PositioningSystem.Auto ? autoPositioning({\n' +
        '      architectureDescription: architectureDescription,\n' +
        '      blocks: blocks,\n' +
        '      setting: setting\n' +
        '    }) : gridPositioning({\n' +
        '      architectureDescription: architectureDescription,\n' +
        '      blocks: blocks,\n' +
        '      setting: setting\n' +
        '    }),\n' +
        '    debug: deepCopy((_architectureDescript2 = architectureDescription.style) == null ? void 0 : _architectureDescript2.debug),\n' +
        '    css: css,\n' +
        '    blocks: architectureDescription.style ? generateBlocksStyle(architectureDescription.style) : undefined\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function generateBlocksStyle(style) {\n' +
        '  return style.blocks;\n' +
        '}\n' +
        '\n' +
        'function deepAssign() {\n' +
        '  var isObject = function isObject(obj) {\n' +
        "    return obj && typeof obj === 'object';\n" +
        '  };\n' +
        '\n' +
        '  function deepMergeInner(target, source) {\n' +
        '    Object.keys(source).forEach(function (key) {\n' +
        '      var targetValue = target[key];\n' +
        '      var sourceValue = source[key];\n' +
        '\n' +
        '      if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n' +
        '        target[key] = targetValue.concat(sourceValue);\n' +
        '      } else if (isObject(targetValue) && isObject(sourceValue)) {\n' +
        '        target[key] = deepMergeInner(Object.assign({}, targetValue), sourceValue);\n' +
        '      } else {\n' +
        '        target[key] = sourceValue;\n' +
        '      }\n' +
        '    });\n' +
        '    return target;\n' +
        '  }\n' +
        '\n' +
        '  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n' +
        '    objects[_key] = arguments[_key];\n' +
        '  }\n' +
        '\n' +
        '  if (objects.length < 2) {\n' +
        "    throw new Error('deepMerge: this function expects at least 2 objects to be provided');\n" +
        '  }\n' +
        '\n' +
        '  if (objects.some(function (object) {\n' +
        '    return !isObject(object);\n' +
        '  })) {\n' +
        `    throw new Error('deepMerge: all values should be of type "object"');\n` +
        '  }\n' +
        '\n' +
        '  var target = objects.shift();\n' +
        '  var source;\n' +
        '\n' +
        '  while (source = objects.shift()) {\n' +
        '    deepMergeInner(target, source);\n' +
        '  }\n' +
        '\n' +
        '  return target;\n' +
        '}\n' +
        '\n' +
        'function addHighlightActionExecutor(context, action) {\n' +
        '  var _val$gap;\n' +
        '\n' +
        '  if (!context) {\n' +
        '    return null;\n' +
        '  }\n' +
        '\n' +
        '  var val = action.value;\n' +
        '  var blocks = typeof val.blocks === "string" ? [val.blocks] : val.blocks;\n' +
        '  var gap = (_val$gap = val.gap) != null ? _val$gap : 5;\n' +
        '  return blocks.flatMap(function (block) {\n' +
        '    return [{\n' +
        '      type: ChangeType.ChangeStyle,\n' +
        '      setting: {\n' +
        '        blockId: "highlight_" + block,\n' +
        '        newStyle: {\n' +
        '          position: {\n' +
        '            x: block + ".x - " + gap,\n' +
        '            y: block + ".y - " + gap,\n' +
        '            w: block + ".width + " + gap * 2,\n' +
        '            h: block + ".height + " + gap * 2\n' +
        '          },\n' +
        '          isHighlight: true\n' +
        '        }\n' +
        '      }\n' +
        '    }, {\n' +
        '      type: ChangeType.AddNewBlock,\n' +
        '      setting: {\n' +
        '        newBlockId: "highlight_" + block,\n' +
        '        blockSettings: {\n' +
        '          type: BlockElementType.Rect,\n' +
        '          label: ""\n' +
        '        }\n' +
        '      }\n' +
        '    }];\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function addNewBlockActionExecutor(context, action) {\n' +
        '  if (!context) {\n' +
        '    return null;\n' +
        '  }\n' +
        '\n' +
        '  var val = action.value;\n' +
        '  return Object.keys(val).map(function (key) {\n' +
        '    return {\n' +
        '      type: ChangeType.AddNewBlock,\n' +
        '      setting: {\n' +
        '        newBlockId: key,\n' +
        '        blockSettings: val[key]\n' +
        '      }\n' +
        '    };\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function changeBlockPositionActionExecutor(context, action) {\n' +
        '  if (!context) {\n' +
        '    return null;\n' +
        '  }\n' +
        '\n' +
        '  var val = action.value;\n' +
        '  return Object.keys(val).map(function (key) {\n' +
        '    return {\n' +
        '      type: ChangeType.ChangeStyle,\n' +
        '      setting: {\n' +
        '        blockId: key,\n' +
        '        newStyle: {\n' +
        '          position: val[key]\n' +
        '        }\n' +
        '      }\n' +
        '    };\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function changeLabelActionExecutor(context, action) {\n' +
        '  if (!context) {\n' +
        '    return null;\n' +
        '  }\n' +
        '\n' +
        '  var val = action.value;\n' +
        '  return Object.keys(val).map(function (key) {\n' +
        '    var v = val[key];\n' +
        '    return {\n' +
        '      type: ChangeType.ChangeStyle,\n' +
        '      setting: {\n' +
        '        blockId: key,\n' +
        '        newStyle: {\n' +
        '          label: isHasLabel(v) ? v.label : v\n' +
        '        }\n' +
        '      }\n' +
        '    };\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function connectActionExecutor(context, action) {\n' +
        '  if (isConnectActionSetting(action.value)) {\n' +
        '    var _action$value$name, _action$value$label;\n' +
        '\n' +
        '    var newBlockId = (_action$value$name = action.value.name) != null ? _action$value$name : "line_" + context.indexItem.phaseId;\n' +
        '    return [{\n' +
        '      type: ChangeType.AddNewBlock,\n' +
        '      setting: {\n' +
        '        newBlockId: newBlockId,\n' +
        '        blockSettings: _extends({}, action.value, {\n' +
        '          type: BlockElementType.Line,\n' +
        '          label: (_action$value$label = action.value.label) != null ? _action$value$label : newBlockId\n' +
        '        })\n' +
        '      }\n' +
        '    }];\n' +
        '  }\n' +
        '\n' +
        '  return null;\n' +
        '}\n' +
        '\n' +
        'function removeHighlightActionExecutor(context, _) {\n' +
        '  var _context$architecture;\n' +
        '\n' +
        '  var blocks = ((_context$architecture = context.architecture.style) == null ? void 0 : _context$architecture.blocks) || {};\n' +
        '  return [{\n' +
        '    type: ChangeType.RemoveBlock,\n' +
        '    setting: {\n' +
        '      blocks: Object.keys(blocks).filter(function (x) {\n' +
        '        return blocks[x].isHighlight;\n' +
        '      })\n' +
        '    }\n' +
        '  }];\n' +
        '}\n' +
        '\n' +
        'function startPhases(architecture, phaseIndex, phaseInfo) {\n' +
        '  var indexItems = phaseIndex.getPhaseById(phaseInfo.current);\n' +
        '\n' +
        '  if (indexItems) {\n' +
        '    return indexItems.map(function (indexItem) {\n' +
        '      var actionContext = {\n' +
        '        indexItem: indexItem,\n' +
        '        architecture: architecture,\n' +
        '        phaseIndex: phaseIndex\n' +
        '      };\n' +
        '      var changes = indexItem.actions.flatMap(function (item) {\n' +
        '        return executePhaseIndex(item, actionContext);\n' +
        '      });\n' +
        '      changes.filter(isNotNullOrUndefined).forEach(function (change) {\n' +
        '        return makeChange(architecture, change);\n' +
        '      });\n' +
        '      return indexItem.nextPhaseId;\n' +
        '    })[0];\n' +
        '  }\n' +
        '\n' +
        '  return null;\n' +
        '}\n' +
        '\n' +
        'function executePhaseIndex(item, context) {\n' +
        '  if (item.action.name === ActionType.Connect) {\n' +
        '    return connectActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.AddNewBlock) {\n' +
        '    return addNewBlockActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.ChangePosition) {\n' +
        '    return changeBlockPositionActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.ChangeLabel) {\n' +
        '    return changeLabelActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.Highlight) {\n' +
        '    return addHighlightActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.RemoveHighlight) {\n' +
        '    return removeHighlightActionExecutor(context);\n' +
        '  }\n' +
        '\n' +
        '  throw "Not implemented!";\n' +
        '}\n' +
        '\n' +
        'function makeChange(architecture, change) {\n' +
        '  if (change.type === ChangeType.AddNewBlock) {\n' +
        '    var setting = change.setting;\n' +
        '\n' +
        '    if (setting) {\n' +
        '      architecture.blocks[setting.newBlockId] = setting.blockSettings;\n' +
        '    }\n' +
        '  } else if (change.type === ChangeType.ChangeStyle) {\n' +
        '    var _architecture$style;\n' +
        '\n' +
        '    var _setting = change.setting;\n' +
        '\n' +
        '    if (_setting && (_architecture$style = architecture.style) != null && _architecture$style.blocks) {\n' +
        '      var _architecture$style2, _architecture$style2$;\n' +
        '\n' +
        '      var currentSetting = (_architecture$style2 = architecture.style) == null ? void 0 : (_architecture$style2$ = _architecture$style2.blocks) == null ? void 0 : _architecture$style2$[_setting.blockId];\n' +
        '\n' +
        '      if (currentSetting) {\n' +
        '        architecture.style.blocks[_setting.blockId] = deepAssign({}, currentSetting, _setting.newStyle);\n' +
        '      } else {\n' +
        '        architecture.style.blocks[_setting.blockId] = deepAssign({}, _setting.newStyle);\n' +
        '      }\n' +
        '    }\n' +
        '  } else if (change.type === ChangeType.RemoveBlock) {\n' +
        '    var _setting2 = change.setting;\n' +
        '\n' +
        '    _setting2.blocks.forEach(function (x) {\n' +
        '      var _architecture$style3, _architecture$style3$;\n' +
        '\n' +
        '      delete architecture.blocks[x];\n' +
        '      (_architecture$style3 = architecture.style) == null ? true : (_architecture$style3$ = _architecture$style3.blocks) == null ? true : delete _architecture$style3$[x];\n' +
        '    });\n' +
        '  } else {\n' +
        '    throw new Error("Function not implemented.");\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'function buildPhasesIndex(phases) {\n' +
        '  var index = buildIndexObject(phases);\n' +
        '  return {\n' +
        '    getPhaseById: function getPhaseById(id) {\n' +
        '      if (!id) {\n' +
        '        return index.filter(function (x) {\n' +
        '          return x.isStart;\n' +
        '        });\n' +
        '      }\n' +
        '\n' +
        '      var ids = [];\n' +
        '\n' +
        '      if (Array.isArray(id)) {\n' +
        '        ids = id.filter(isNotNullOrUndefined);\n' +
        '      } else {\n' +
        '        ids = [id];\n' +
        '      }\n' +
        '\n' +
        '      return index.filter(function (x) {\n' +
        '        return x.phaseId && ids.indexOf(x.phaseId) > -1;\n' +
        '      });\n' +
        '    },\n' +
        '    phases: index.map(function (x) {\n' +
        '      return x.phaseId;\n' +
        '    }),\n' +
        '    getPhaseIndex: function getPhaseIndex(phase) {\n' +
        '      return index.findIndex(function (x) {\n' +
        '        return x.phaseId === phase;\n' +
        '      });\n' +
        '    }\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function buildIndexObject(phase, isStart, id) {\n' +
        '  if (isStart === void 0) {\n' +
        '    isStart = true;\n' +
        '  }\n' +
        '\n' +
        '  if (id === void 0) {\n' +
        '    id = "start";\n' +
        '  }\n' +
        '\n' +
        '  if (!phase) {\n' +
        '    return [];\n' +
        '  }\n' +
        '\n' +
        '  if (isPhaseAction(phase)) {\n' +
        '    var actions = Object.keys(phase).flatMap(function (key) {\n' +
        '      var action = phase[key];\n' +
        '      var actions = [];\n' +
        '\n' +
        '      if (!Array.isArray(action)) {\n' +
        '        actions = [action];\n' +
        '      } else {\n' +
        '        actions = action;\n' +
        '      }\n' +
        '\n' +
        '      return actions.map(function (y) {\n' +
        '        return {\n' +
        '          action: {\n' +
        '            name: key,\n' +
        '            value: y\n' +
        '          }\n' +
        '        };\n' +
        '      });\n' +
        '    });\n' +
        '    return [{\n' +
        '      isStart: isStart,\n' +
        '      nextPhaseId: null,\n' +
        '      phaseId: "" + id,\n' +
        '      actions: actions\n' +
        '    }];\n' +
        '  } else if (isParallelPhase(phase)) {\n' +
        '    var items = Object.keys(phase).flatMap(function (x) {\n' +
        '      var val = phase[x];\n' +
        '      return buildIndexObject(val, isStart, id + "_" + x);\n' +
        '    });\n' +
        '    return items;\n' +
        '  } else if (isGraduallyPhases(phase)) {\n' +
        '    var childId = id + "_child";\n' +
        '\n' +
        '    var _items = phase.map(function (x, index) {\n' +
        '      return buildIndexObject(x, isStart && index === 0, childId);\n' +
        '    });\n' +
        '\n' +
        '    _items.forEach(function (group, index) {\n' +
        '      group.forEach(function (groupItem) {\n' +
        '        if (groupItem.phaseId === childId) {\n' +
        '          groupItem.phaseId += "_" + index;\n' +
        '\n' +
        '          if (index + 1 < _items.length) {\n' +
        '            groupItem.nextPhaseId = childId + "_" + (index + 1);\n' +
        '          }\n' +
        '        }\n' +
        '      });\n' +
        '    });\n' +
        '\n' +
        '    return _items.flatMap(function (x) {\n' +
        '      return x;\n' +
        '    });\n' +
        '  }\n' +
        '\n' +
        '  throw "Not implemented!";\n' +
        '}\n' +
        '\n' +
        'function transformToArchitecture(description, setting) {\n' +
        '  var refDescription = isRef(description) ? description : ref(description);\n' +
        '  var value = refDescription.value;\n' +
        '  var transitionalArchitectureRef = ref(deepCopy(value));\n' +
        '  var transitionalArchitecture = transitionalArchitectureRef.value;\n' +
        '  transitionalArchitecture.blocks = {\n' +
        '    main: transitionalArchitecture.blocks\n' +
        '  };\n' +
        '  var architecture = computed(function () {\n' +
        '    if (isArchitectureDescription(transitionalArchitectureRef.value)) {\n' +
        '      return transformDescriptionToArchitecture(transitionalArchitectureRef, setting);\n' +
        '    }\n' +
        '\n' +
        '    return {\n' +
        '      name: "",\n' +
        '      blocks: ref([]),\n' +
        '      style: ref(null),\n' +
        '      phases: [],\n' +
        '      currentPhase: null,\n' +
        '      next: function next() {\n' +
        '        return null;\n' +
        '      },\n' +
        '      back: function back() {\n' +
        '        return null;\n' +
        '      },\n' +
        '      toPhase: function toPhase() {}\n' +
        '    };\n' +
        '  });\n' +
        '  return architecture;\n' +
        '}\n' +
        'function transformDescriptionToArchitecture(transitionalArchitectureRef, setting) {\n' +
        '  var oldValues = [];\n' +
        '  var enableWatcher = true;\n' +
        '  var currentPhase = reactive({\n' +
        '    current: null\n' +
        '  });\n' +
        '  watch(function () {\n' +
        '    return deepCopy(transitionalArchitectureRef.value);\n' +
        '  }, function (_, oldVal) {\n' +
        '    if (enableWatcher) {\n' +
        '      oldValues.push({\n' +
        '        arch: oldVal,\n' +
        '        phaseId: currentPhase.current\n' +
        '      });\n' +
        '    }\n' +
        '  });\n' +
        '  var blocks = computed(function () {\n' +
        '    return BlockGroupDescriptionsToBlock(transitionalArchitectureRef.value);\n' +
        '  });\n' +
        '  var phaseIndex = buildPhasesIndex(transitionalArchitectureRef.value.phases);\n' +
        '\n' +
        '  var next = function next() {\n' +
        '    enableWatcher = true;\n' +
        '    var nextPhaseId = startPhases(transitionalArchitectureRef.value, phaseIndex, currentPhase);\n' +
        '    currentPhase.current = nextPhaseId;\n' +
        '    return nextPhaseId;\n' +
        '  };\n' +
        '\n' +
        '  var back = function back() {\n' +
        '    var _val2;\n' +
        '\n' +
        '    var val = oldValues.pop();\n' +
        '\n' +
        '    while (oldValues.length > 0 && oldValues[oldValues.length - 1].phaseId == ((_val = val) == null ? void 0 : _val.phaseId)) {\n' +
        '      var _val;\n' +
        '\n' +
        '      val = oldValues.pop();\n' +
        '    }\n' +
        '\n' +
        '    if (val) {\n' +
        '      enableWatcher = false;\n' +
        '      transitionalArchitectureRef.value = val.arch;\n' +
        '      currentPhase.current = val.phaseId;\n' +
        '    }\n' +
        '\n' +
        '    return (_val2 = val) == null ? void 0 : _val2.phaseId;\n' +
        '  };\n' +
        '\n' +
        '  return {\n' +
        '    name: transitionalArchitectureRef.value.name,\n' +
        '    blocks: blocks,\n' +
        '    style: computed(function () {\n' +
        '      return styleDescriptionToArchitectureStyle(transitionalArchitectureRef.value, blocks.value, setting);\n' +
        '    }),\n' +
        '    next: next,\n' +
        '    back: back,\n' +
        '    toPhase: function toPhase(phaseId) {\n' +
        '      var phaseInd = phaseIndex.getPhaseIndex(phaseId);\n' +
        '      var currentPhaseInd = phaseIndex.getPhaseIndex(currentPhase.current);\n' +
        '      var walkerFn = phaseInd > currentPhaseInd ? next : back;\n' +
        '      var curPhaseId = null;\n' +
        '\n' +
        '      do {\n' +
        '        curPhaseId = walkerFn();\n' +
        '      } while (!!curPhaseId && curPhaseId.length > 0 && curPhaseId.indexOf(phaseId) === -1);\n' +
        '    },\n' +
        '    phases: phaseIndex.phases,\n' +
        '    currentPhase: computed(function () {\n' +
        '      return currentPhase.current;\n' +
        '    })\n' +
        '  };\n' +
        '}\n' +
        'function BlockGroupDescriptionsToBlock(description) {\n' +
        '  return blockGroupDescriptionsToBlock(description);\n' +
        '}\n' +
        '\n' +
        'var sum = function sum(a, b) {\n' +
        '  return a + b;\n' +
        '};\n' +
        '\n' +
        'export { ActionType, BlockElementType, ChangeType, PositioningSystem, autoPositioning, isActionSetting, isAddNewBlockActionSetting, isArchitectureDescription, isArray, isBlockElementDescription, isConnectActionSetting, isContainerBlock, isFormulaValue, isGraduallyPhases, isHasLabel, isLineBlockElement, isLineBlockElementDescription, isNotNullOrUndefined, isNullOrUndefined, isParallelPhase, isParentBlockElement, isPhaseAction, isRectPositioning, isString, startPhases, sum, transformDescriptionToArchitecture, transformToArchitecture };\n' +
        '//# sourceMappingURL=core.esm.js.map\n',
      deoptimizationTracker: [PathTracker],
      error: [Function: bound error],
      fileName: '/home/alex/RiderProjects/Coya/Coya/libraries/core/dist/core.esm.js',
      getExports: [Function: bound getExports],
      getModuleExecIndex: [Function: getModuleExecIndex],
      getModuleName: [Function: bound basename],
      getReexports: [Function: bound getReexports],
      importDescriptions: [Object: null prototype],
      includeAllExports: [Function: includeAllExports],
      includeDynamicImport: [Function: bound includeDynamicImport],
      includeVariableInModule: [Function: bound includeVariableInModule],
      magicString: MagicString {},
      module: [Circular *1],
      moduleContext: 'undefined',
      nodeConstructors: [Object],
      options: [Object],
      requestTreeshakingPass: [Function: requestTreeshakingPass],
      traceExport: [Function: bound getVariableForExportName],
      traceVariable: [Function: bound traceVariable],
      usesTopLevelAwait: false,
      warn: [Function: bound warn]
    }
  },
  namespace: NamespaceVariable {
    included: false,
    name: 'core_esm',
    alwaysRendered: false,
    initReached: false,
    isId: false,
    isReassigned: false,
    kind: null,
    renderBaseName: null,
    renderName: null,
    memberVariables: null,
    mergedNamespaces: [],
    referencedEarly: false,
    references: [],
    context: {
      addDynamicImport: [Function: bound addDynamicImport],
      addExport: [Function: bound addExport],
      addImport: [Function: bound addImport],
      addImportMeta: [Function: bound addImportMeta],
      code: "import { isRef, unref, ref, computed, reactive } from '@vue/reactivity';\n" +
        "import { serialize, compile, stringify } from 'stylis';\n" +
        "import { watch } from '@vue-reactivity/watch';\n" +
        '\n' +
        'var BlockElementType;\n' +
        '\n' +
        '(function (BlockElementType) {\n' +
        '  BlockElementType["Rect"] = "rect";\n' +
        '  BlockElementType["Line"] = "line";\n' +
        '  BlockElementType["Highlight"] = "highlight";\n' +
        '})(BlockElementType || (BlockElementType = {}));\n' +
        '\n' +
        'var PositioningSystem;\n' +
        '\n' +
        '(function (PositioningSystem) {\n' +
        '  PositioningSystem["Auto"] = "auto";\n' +
        '  PositioningSystem["Grid"] = "grid";\n' +
        '})(PositioningSystem || (PositioningSystem = {}));\n' +
        '\n' +
        'var ActionType;\n' +
        '\n' +
        '(function (ActionType) {\n' +
        '  ActionType["Connect"] = "connect";\n' +
        '  ActionType["AddNewBlock"] = "newBlock";\n' +
        '  ActionType["ChangePosition"] = "changePosition";\n' +
        '  ActionType["ChangeLabel"] = "changeLabel";\n' +
        '  ActionType["Highlight"] = "highlight";\n' +
        '  ActionType["RemoveHighlight"] = "removeHighlight";\n' +
        '})(ActionType || (ActionType = {}));\n' +
        '\n' +
        'var ChangeType;\n' +
        '\n' +
        '(function (ChangeType) {\n' +
        '  ChangeType[ChangeType["AddNewBlock"] = 0] = "AddNewBlock";\n' +
        '  ChangeType[ChangeType["ChangeStyle"] = 1] = "ChangeStyle";\n' +
        '  ChangeType[ChangeType["RemoveBlock"] = 2] = "RemoveBlock";\n' +
        '})(ChangeType || (ChangeType = {}));\n' +
        '\n' +
        'function isNotNullOrUndefined(obj) {\n' +
        '  return obj !== null && typeof obj !== "undefined";\n' +
        '}\n' +
        'function isNullOrUndefined(obj) {\n' +
        '  return obj === null || typeof obj === "undefined";\n' +
        '}\n' +
        'function isString(obj) {\n' +
        '  return typeof obj === "string";\n' +
        '}\n' +
        'function isBlockElementDescription(obj) {\n' +
        '  return typeof obj === "object" && isNotNullOrUndefined(obj) && "label" in obj;\n' +
        '}\n' +
        'function isParentBlockElement(obj) {\n' +
        '  return !!obj && !!obj.id && !!obj.label && Array.isArray(obj.children) && obj.children.length > 0;\n' +
        '}\n' +
        'function isArchitectureDescription(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var maybeDescription = obj;\n' +
        '    return !!maybeDescription.blocks\n' +
        '    /* && !!maybeDescription.animation && !!maybeDescription.phases */\n' +
        '    ;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isRectPositioning(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var rectPos = obj;\n' +
        '    return isNotNullOrUndefined(rectPos.x) && isNotNullOrUndefined(rectPos.y)\n' +
        '    /* && isNotNullOrUndefined(rectPos.width)  && isNotNullOrUndefined(rectPos.height)*/\n' +
        '    ;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isPhaseAction(obj) {\n' +
        '  if (obj) {\n' +
        '    var action = obj;\n' +
        '    return typeof action === "object" && !Array.isArray(action) && Object.keys(action).every(function (x) {\n' +
        '      var val = action[x];\n' +
        '\n' +
        '      if (typeof val === "string") {\n' +
        '        return true;\n' +
        '      }\n' +
        '\n' +
        '      if (Array.isArray(val)) {\n' +
        '        return val.every(function (y) {\n' +
        '          return typeof y === "string" || isActionSetting(y);\n' +
        '        });\n' +
        '      }\n' +
        '\n' +
        '      return Object.values(ActionType).some(function (y) {\n' +
        '        return y === x;\n' +
        '      });\n' +
        '    });\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isParallelPhase(obj) {\n' +
        '  if (obj) {\n' +
        '    var phase = obj;\n' +
        '    return typeof phase === "object" && !Array.isArray(phase) && !isPhaseAction(phase);\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isGraduallyPhases(obj) {\n' +
        '  return !!obj && Array.isArray(obj);\n' +
        '}\n' +
        'function isConnectActionSetting(obj) {\n' +
        '  if (obj) {\n' +
        '    var connect = obj;\n' +
        '    return !!connect.to && !!connect.from;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isAddNewBlockActionSetting(obj) {\n' +
        '  if (obj) {\n' +
        '    var connect = obj;\n' +
        '    return isBlockElementDescription(connect);\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isActionSetting(obj) {\n' +
        '  var action = obj;\n' +
        '  return isConnectActionSetting(action) && isAddNewBlockActionSetting(action);\n' +
        '}\n' +
        'function isArray(obj) {\n' +
        '  return Array.isArray(obj);\n' +
        '}\n' +
        'function isLineBlockElementDescription(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var line = obj;\n' +
        '    return line.type === BlockElementType.Line;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isLineBlockElement(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var line = obj;\n' +
        '    return line.type === BlockElementType.Line;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isContainerBlock(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var container = obj;\n' +
        '    if (!!container.parentId) return true;\n' +
        '    var blockEl = obj;\n' +
        '    return !blockEl.type;\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isFormulaValue(obj) {\n' +
        '  if (!!obj) {\n' +
        '    var formulaValue = obj;\n' +
        '    return !!formulaValue.formula && typeof formulaValue.formula === "string" || typeof formulaValue === "string";\n' +
        '  }\n' +
        '\n' +
        '  return false;\n' +
        '}\n' +
        'function isHasLabel(obj) {\n' +
        '  return !!obj && typeof obj.label === "string";\n' +
        '}\n' +
        '\n' +
        'function deepCopy(val) {\n' +
        '  return !!val ? JSON.parse(JSON.stringify(val)) : val;\n' +
        '}\n' +
        '\n' +
        'function createBlockElementByString(id, label, blockStyle) {\n' +
        '  var _blockStyle$label;\n' +
        '\n' +
        '  return {\n' +
        '    id: id,\n' +
        '    label: (_blockStyle$label = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label : label,\n' +
        '    enter: getDefaultEnter()\n' +
        '  };\n' +
        '}\n' +
        'function createBlockElementByDescription(id, element, blockStyle) {\n' +
        '  var _ref, _blockStyle$label2, _deepCopy;\n' +
        '\n' +
        '  return {\n' +
        '    label: (_ref = (_blockStyle$label2 = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label2 : element.label) != null ? _ref : id,\n' +
        '    enter: (_deepCopy = deepCopy(element.enter)) != null ? _deepCopy : getDefaultEnter(),\n' +
        '    id: id\n' +
        '  };\n' +
        '}\n' +
        'function getDefaultEnter() {\n' +
        '  return {\n' +
        '    from: {\n' +
        '      opacity: 0\n' +
        '    },\n' +
        '    to: {\n' +
        '      opacity: 1,\n' +
        '      duration: 3\n' +
        '    }\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function _extends() {\n' +
        '  _extends = Object.assign || function (target) {\n' +
        '    for (var i = 1; i < arguments.length; i++) {\n' +
        '      var source = arguments[i];\n' +
        '\n' +
        '      for (var key in source) {\n' +
        '        if (Object.prototype.hasOwnProperty.call(source, key)) {\n' +
        '          target[key] = source[key];\n' +
        '        }\n' +
        '      }\n' +
        '    }\n' +
        '\n' +
        '    return target;\n' +
        '  };\n' +
        '\n' +
        '  return _extends.apply(this, arguments);\n' +
        '}\n' +
        '\n' +
        'function createLineElementByDescription(id, value, blockStyle) {\n' +
        '  var _ref, _blockStyle$label;\n' +
        '\n' +
        '  return _extends({\n' +
        '    id: id\n' +
        '  }, value, {\n' +
        '    label: (_ref = (_blockStyle$label = blockStyle == null ? void 0 : blockStyle.label) != null ? _blockStyle$label : value.label) != null ? _ref : id\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function blockGroupDescriptionsToBlock(architecture) {\n' +
        '  var description = architecture.blocks;\n' +
        '\n' +
        '  var blockGroupDescriptionsToBlock2 = function blockGroupDescriptionsToBlock2(description) {\n' +
        '    var blocks = Object.keys(description).flatMap(function (key) {\n' +
        '      var _architecture$style, _architecture$style$b;\n' +
        '\n' +
        '      var value = description[key];\n' +
        '      var blockStyle = (_architecture$style = architecture.style) == null ? void 0 : (_architecture$style$b = _architecture$style.blocks) == null ? void 0 : _architecture$style$b[key];\n' +
        '\n' +
        '      if (isString(value)) {\n' +
        '        return createBlockElementByString(key, value, blockStyle);\n' +
        '      }\n' +
        '\n' +
        '      if (isBlockElementDescription(value)) {\n' +
        '        if (isLineBlockElementDescription(value)) {\n' +
        '          return createLineElementByDescription(key, value, blockStyle);\n' +
        '        }\n' +
        '\n' +
        '        return createBlockElementByDescription(key, value, blockStyle);\n' +
        '      }\n' +
        '\n' +
        '      if (value === null) {\n' +
        '        return createBlockElementByString(key, key, blockStyle);\n' +
        '      }\n' +
        '\n' +
        '      var items = blockGroupDescriptionsToBlock2(value);\n' +
        '      items.forEach(function (x) {\n' +
        '        var _x$parentId;\n' +
        '\n' +
        '        return isContainerBlock(x) ? x.parentId = (_x$parentId = x.parentId) != null ? _x$parentId : key : null;\n' +
        '      });\n' +
        '      return [{\n' +
        '        id: key,\n' +
        '        label: key,\n' +
        '        children: items.filter(function (x) {\n' +
        '          return isContainerBlock(x) && x.parentId === key;\n' +
        '        }),\n' +
        '        enter: getDefaultEnter()\n' +
        '      }].concat(items);\n' +
        '    });\n' +
        '    return blocks;\n' +
        '  };\n' +
        '\n' +
        '  return blockGroupDescriptionsToBlock2(description);\n' +
        '}\n' +
        '\n' +
        'function getNumber(obj) {\n' +
        '  return isRef(obj) ? obj.value : obj;\n' +
        '}\n' +
        '\n' +
        'function getFormulaValueFuncContext(blocksPositioning, setting) {\n' +
        '  return {\n' +
        '    blockNamesAsFuncParams: blocksPositioning.value.map(function (x) {\n' +
        '      return x.blockId;\n' +
        '    }).join(", ") + ", _",\n' +
        '    blocksValues: [].concat(blocksPositioning.value.map(function (x) {\n' +
        '      return x.position;\n' +
        '    }), [{\n' +
        '      viewBox: {\n' +
        '        x: unref(setting.viewBox.x),\n' +
        '        y: unref(setting.viewBox.y),\n' +
        '        w: unref(setting.viewBox.w),\n' +
        '        h: unref(setting.viewBox.h)\n' +
        '      }\n' +
        '    }])\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function getFormulaValue(val, positioning, setting) {\n' +
        '  if (typeof val === "number") {\n' +
        '    return ref(val);\n' +
        '  }\n' +
        '\n' +
        '  if (isFormulaValue(val)) {\n' +
        '    var formula = typeof val === "string" ? val : val.formula;\n' +
        '    return computed(function () {\n' +
        '      var context = getFormulaValueFuncContext(positioning, setting);\n' +
        '      var fn = Function("\\"use strict\\";return (function(" + context.blockNamesAsFuncParams + "){return " + formula + ";})")();\n' +
        '      return fn.apply(null, context.blocksValues) || 0;\n' +
        '    });\n' +
        '  }\n' +
        '\n' +
        '  return ref(0);\n' +
        '}\n' +
        '\n' +
        'function lineBlockPosition(blocksPositions, block, setting, blockStyle) {\n' +
        '  var _blockStyle$position$, _blockStyle$position, _blockStyle$position2, _blockStyle$position$2, _blockStyle$position3, _blockStyle$position4, _blockStyle$position$3, _blockStyle$position5, _blockStyle$position6, _blockStyle$position$4, _blockStyle$position7, _blockStyle$position8, _blockStyle$position9, _blockStyle$position10, _blockStyle$position11, _blockStyle$position12, _blockStyle$position13, _blockStyle$position14, _blockStyle$position15, _blockStyle$position16;\n' +
        '\n' +
        '  var blockFromPos = computed(function () {\n' +
        '    var _blocksPositions$valu;\n' +
        '\n' +
        '    return (_blocksPositions$valu = blocksPositions.value) == null ? void 0 : _blocksPositions$valu.find(function (x) {\n' +
        '      return x.blockId === block.from;\n' +
        '    });\n' +
        '  });\n' +
        '  var blockToPos = computed(function () {\n' +
        '    var _blocksPositions$valu2;\n' +
        '\n' +
        '    return (_blocksPositions$valu2 = blocksPositions.value) == null ? void 0 : _blocksPositions$valu2.find(function (x) {\n' +
        '      return x.blockId === block.to;\n' +
        '    });\n' +
        '  });\n' +
        '  var isToRighter = computed(function () {\n' +
        '    var _blockFromPos$value, _blockToPos$value, _blockFromPos$value2, _blockToPos$value2;\n' +
        '\n' +
        '    return ((_blockFromPos$value = blockFromPos.value) == null ? void 0 : _blockFromPos$value.position) && ((_blockToPos$value = blockToPos.value) == null ? void 0 : _blockToPos$value.position) && isRectPositioning((_blockFromPos$value2 = blockFromPos.value) == null ? void 0 : _blockFromPos$value2.position) && isRectPositioning((_blockToPos$value2 = blockToPos.value) == null ? void 0 : _blockToPos$value2.position) && blockFromPos.value.position.x < blockToPos.value.position.x;\n' +
        '  });\n' +
        '\n' +
        '  var getValueByCtx = function getValueByCtx(x) {\n' +
        '    return getFormulaValue(x, blocksPositions, setting);\n' +
        '  };\n' +
        '\n' +
        '  var indentX1 = getValueByCtx((_blockStyle$position$ = blockStyle == null ? void 0 : (_blockStyle$position = blockStyle.position) == null ? void 0 : _blockStyle$position.indentX1) != null ? _blockStyle$position$ : blockStyle == null ? void 0 : (_blockStyle$position2 = blockStyle.position) == null ? void 0 : _blockStyle$position2.indentX);\n' +
        '  var indentX2 = getValueByCtx((_blockStyle$position$2 = blockStyle == null ? void 0 : (_blockStyle$position3 = blockStyle.position) == null ? void 0 : _blockStyle$position3.indentX2) != null ? _blockStyle$position$2 : blockStyle == null ? void 0 : (_blockStyle$position4 = blockStyle.position) == null ? void 0 : _blockStyle$position4.indentX);\n' +
        '  var indentY1 = getValueByCtx((_blockStyle$position$3 = blockStyle == null ? void 0 : (_blockStyle$position5 = blockStyle.position) == null ? void 0 : _blockStyle$position5.indentY1) != null ? _blockStyle$position$3 : blockStyle == null ? void 0 : (_blockStyle$position6 = blockStyle.position) == null ? void 0 : _blockStyle$position6.indentY);\n' +
        '  var indentY2 = getValueByCtx((_blockStyle$position$4 = blockStyle == null ? void 0 : (_blockStyle$position7 = blockStyle.position) == null ? void 0 : _blockStyle$position7.indentY2) != null ? _blockStyle$position$4 : blockStyle == null ? void 0 : (_blockStyle$position8 = blockStyle.position) == null ? void 0 : _blockStyle$position8.indentY);\n' +
        '  var x1 = blockStyle != null && (_blockStyle$position9 = blockStyle.position) != null && _blockStyle$position9.x1 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position10 = blockStyle.position) == null ? void 0 : _blockStyle$position10.x1) : computed(function () {\n' +
        '    var blockPos = blockFromPos.value;\n' +
        '\n' +
        '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.x) {\n' +
        '      return getNumber(blockPos.position.x) + (!isToRighter.value ? 0 : getNumber(blockPos.position.width)) + indentX1.value;\n' +
        '    }\n' +
        '\n' +
        '    return indentX1.value;\n' +
        '  });\n' +
        '  var y1 = blockStyle != null && (_blockStyle$position11 = blockStyle.position) != null && _blockStyle$position11.y1 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position12 = blockStyle.position) == null ? void 0 : _blockStyle$position12.y1) : computed(function () {\n' +
        '    var blockPos = blockFromPos.value;\n' +
        '\n' +
        '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.y) {\n' +
        '      return getNumber(blockPos == null ? void 0 : blockPos.position.y) + getNumber(blockPos.position.height) / 2 + indentY1.value;\n' +
        '    }\n' +
        '\n' +
        '    return indentY1.value;\n' +
        '  });\n' +
        '  var x2 = blockStyle != null && (_blockStyle$position13 = blockStyle.position) != null && _blockStyle$position13.x2 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position14 = blockStyle.position) == null ? void 0 : _blockStyle$position14.x2) : computed(function () {\n' +
        '    var blockPos = blockToPos.value;\n' +
        '\n' +
        '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.x) {\n' +
        '      return getNumber(blockPos == null ? void 0 : blockPos.position.x) + (!isToRighter.value ? getNumber(blockPos.position.width) : 0) + indentX2.value;\n' +
        '    }\n' +
        '\n' +
        '    return indentX2.value;\n' +
        '  });\n' +
        '  var y2 = blockStyle != null && (_blockStyle$position15 = blockStyle.position) != null && _blockStyle$position15.y2 ? getValueByCtx(blockStyle == null ? void 0 : (_blockStyle$position16 = blockStyle.position) == null ? void 0 : _blockStyle$position16.y2) : computed(function () {\n' +
        '    var blockPos = blockToPos.value;\n' +
        '\n' +
        '    if (isRectPositioning(blockPos == null ? void 0 : blockPos.position) && blockPos != null && blockPos.position.y) {\n' +
        '      return getNumber(blockPos == null ? void 0 : blockPos.position.y) + getNumber(blockPos.position.height) / 2 + indentY2.value;\n' +
        '    }\n' +
        '\n' +
        '    return indentY2.value;\n' +
        '  });\n' +
        '  return {\n' +
        '    blockId: block.id,\n' +
        '    position: {\n' +
        '      x1: x1,\n' +
        '      y1: y1,\n' +
        '      x2: x2,\n' +
        '      y2: y2\n' +
        '    }\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function autoPositioning(setting) {\n' +
        '  var _setting$sizeSetting;\n' +
        '\n' +
        '  var sizeSetting = (_setting$sizeSetting = setting.sizeSetting) != null ? _setting$sizeSetting : defaultSiseSettings;\n' +
        '  var blocks = setting.blocks;\n' +
        '  var blocksPositioning = ref([]);\n' +
        '  blocksPositioning.value = blocks.map(function (block) {\n' +
        '    if (!isContainerBlock(block)) {\n' +
        '      if (isLineBlockElement(block)) {\n' +
        '        return lineBlockPosition(blocksPositioning, block, setting.setting);\n' +
        '      }\n' +
        '\n' +
        '      return null;\n' +
        '    }\n' +
        '\n' +
        '    var parentBlockComp = computed(function () {\n' +
        '      return blocks.find(function (x) {\n' +
        '        return x.id === block.parentId;\n' +
        '      });\n' +
        '    });\n' +
        '    var parentPosComp = computed(function () {\n' +
        '      var _parentBlockComp$valu;\n' +
        '\n' +
        '      return (_parentBlockComp$valu = parentBlockComp.value) != null && _parentBlockComp$valu.id ? getBlockPositioning(blocksPositioning.value, parentBlockComp.value.id) : null;\n' +
        '    });\n' +
        '    var blockInParentIndexComp = computed(function () {\n' +
        '      return isParentBlockElement(parentBlockComp.value) ? parentBlockComp.value.children.indexOf(block) : -1;\n' +
        '    });\n' +
        '    var columnIndexComp = computed(function () {\n' +
        '      return blockInParentIndexComp.value % sizeSetting.parentChildrenInRowCount;\n' +
        '    });\n' +
        '    var rowIndexComp = computed(function () {\n' +
        '      return Math.floor(blockInParentIndexComp.value / sizeSetting.parentChildrenInRowCount);\n' +
        '    });\n' +
        '    var brotherLeftBlockComp = computed(function () {\n' +
        '      return isParentBlockElement(parentBlockComp.value) ? parentBlockComp.value.children[blockInParentIndexComp.value - 1] : null;\n' +
        '    });\n' +
        '    var brotherLeftPosComp = computed(function () {\n' +
        '      var _brotherLeftBlockComp, _brotherLeftBlockComp2;\n' +
        '\n' +
        '      return (_brotherLeftBlockComp = brotherLeftBlockComp.value) != null && _brotherLeftBlockComp.id ? getBlockPositioning(blocksPositioning.value, (_brotherLeftBlockComp2 = brotherLeftBlockComp.value) == null ? void 0 : _brotherLeftBlockComp2.id) : null;\n' +
        '    });\n' +
        '    var x = computed(function () {\n' +
        '      if (block.parentId) {\n' +
        '        var parentBlock = parentBlockComp.value;\n' +
        '        var parentPos = parentPosComp.value;\n' +
        '\n' +
        '        if (isParentBlockElement(parentBlock) && isRectPositioning(parentPos)) {\n' +
        '          if (columnIndexComp.value === 0) {\n' +
        '            return getNumber(parentPos.x) + sizeSetting.gap;\n' +
        '          }\n' +
        '\n' +
        '          var brotherPos = brotherLeftPosComp.value;\n' +
        '\n' +
        '          if (isRectPositioning(brotherPos)) {\n' +
        '            return getNumber(brotherPos.x) + getNumber(brotherPos.width) + sizeSetting.gap;\n' +
        '          }\n' +
        '\n' +
        '          return getNumber(parentPos.x) + sizeSetting.gap;\n' +
        '        }\n' +
        '      }\n' +
        '\n' +
        '      return sizeSetting.gap;\n' +
        '    });\n' +
        '    var y = computed(function () {\n' +
        '      if (block.parentId) {\n' +
        '        var parentBlock = parentBlockComp.value;\n' +
        '        var parentPos = parentPosComp.value;\n' +
        '\n' +
        '        if (isParentBlockElement(parentBlock) && isRectPositioning(parentPos)) {\n' +
        '          if (rowIndexComp.value === 0) {\n' +
        '            return getNumber(parentPos.y) + sizeSetting.gap;\n' +
        '          }\n' +
        '\n' +
        '          var previousRowIndex = rowIndexComp.value - 1;\n' +
        '          var startIndex = previousRowIndex * sizeSetting.parentChildrenInRowCount;\n' +
        '          var maxY = 0;\n' +
        '          parentBlock.children.slice(startIndex, startIndex + sizeSetting.parentChildrenInRowCount).forEach(function (brotherBlock) {\n' +
        '            var pos = getBlockPositioning(blocksPositioning.value, brotherBlock.id);\n' +
        '\n' +
        '            if (isRectPositioning(pos)) {\n' +
        '              var newY = getNumber(pos.y) + getNumber(pos.height);\n' +
        '\n' +
        '              if (newY > maxY) {\n' +
        '                maxY = newY;\n' +
        '              }\n' +
        '            }\n' +
        '          });\n' +
        '          return maxY + sizeSetting.gap;\n' +
        '        }\n' +
        '      }\n' +
        '\n' +
        '      return sizeSetting.gap;\n' +
        '    });\n' +
        '    var width = computed(function () {\n' +
        '      if (isParentBlockElement(block)) {\n' +
        '        var maxX = 0;\n' +
        '        block.children.forEach(function (child) {\n' +
        '          var _blocksPositioning$va;\n' +
        '\n' +
        '          var pos = (_blocksPositioning$va = blocksPositioning.value.find(function (x) {\n' +
        '            return x.blockId === child.id;\n' +
        '          })) == null ? void 0 : _blocksPositioning$va.position;\n' +
        '\n' +
        '          if (isRectPositioning(pos)) {\n' +
        '            var newX = getNumber(pos.x) + getNumber(pos.width);\n' +
        '\n' +
        '            if (newX > maxX) {\n' +
        '              maxX = newX;\n' +
        '            }\n' +
        '          }\n' +
        '        });\n' +
        '        return maxX - x.value + sizeSetting.gap;\n' +
        '      }\n' +
        '\n' +
        '      return sizeSetting.rectWidth;\n' +
        '    });\n' +
        '    var height = computed(function () {\n' +
        '      if (isParentBlockElement(block)) {\n' +
        '        var maxY = 0;\n' +
        '        block.children.forEach(function (child) {\n' +
        '          var _blocksPositioning$va2;\n' +
        '\n' +
        '          var pos = (_blocksPositioning$va2 = blocksPositioning.value.find(function (x) {\n' +
        '            return x.blockId === child.id;\n' +
        '          })) == null ? void 0 : _blocksPositioning$va2.position;\n' +
        '\n' +
        '          if (isRectPositioning(pos)) {\n' +
        '            var newY = getNumber(pos.y) + getNumber(pos.height);\n' +
        '\n' +
        '            if (newY > maxY) {\n' +
        '              maxY = newY;\n' +
        '            }\n' +
        '          }\n' +
        '        });\n' +
        '        return maxY - y.value + sizeSetting.gap;\n' +
        '      }\n' +
        '\n' +
        '      return sizeSetting.rectHeight;\n' +
        '    });\n' +
        '    return {\n' +
        '      blockId: block.id,\n' +
        '      position: {\n' +
        '        x: x,\n' +
        '        y: y,\n' +
        '        width: width,\n' +
        '        height: height\n' +
        '      }\n' +
        '    };\n' +
        '  }).filter(isNotNullOrUndefined);\n' +
        '  return blocksPositioning.value;\n' +
        '}\n' +
        'var defaultSiseSettings = {\n' +
        '  rectHeight: 20,\n' +
        '  rectWidth: 30,\n' +
        '  gap: 10,\n' +
        '  parentChildrenInRowCount: 3\n' +
        '};\n' +
        '\n' +
        'function getBlockPositioning(blocksPositioning, id) {\n' +
        '  var _blocksPositioning$fi;\n' +
        '\n' +
        '  return (_blocksPositioning$fi = blocksPositioning.find(function (x) {\n' +
        '    return x.blockId === id;\n' +
        '  })) == null ? void 0 : _blocksPositioning$fi.position;\n' +
        '}\n' +
        '\n' +
        'function gridPositioning(option) {\n' +
        '  var _option$architectureD3;\n' +
        '\n' +
        '  var blocks = option.blocks.filter(function (x) {\n' +
        '    return x.id !== "main";\n' +
        '  });\n' +
        '  var notSettetBlocks = blocks.filter(function (block) {\n' +
        '    var _option$architectureD, _option$architectureD2;\n' +
        '\n' +
        '    if (isLineBlockElement(block)) {\n' +
        '      return false;\n' +
        '    }\n' +
        '\n' +
        '    var styleBlock = (_option$architectureD = option.architectureDescription.style) == null ? void 0 : (_option$architectureD2 = _option$architectureD.blocks) == null ? void 0 : _option$architectureD2[block.id];\n' +
        '    return !styleBlock || !styleBlock.position;\n' +
        '  });\n' +
        '  var style = (_option$architectureD3 = option.architectureDescription.style) == null ? void 0 : _option$architectureD3.blocks;\n' +
        '\n' +
        '  if (!style || notSettetBlocks.length > 0) {\n' +
        '    throw "Not every block has setting: [" + notSettetBlocks.map(function (x) {\n' +
        '      return x.id;\n' +
        '    }) + "]";\n' +
        '  }\n' +
        '\n' +
        '  var gridSize = {\n' +
        '    columnWidth: 20,\n' +
        '    rowHeight: 20\n' +
        '  };\n' +
        '  var blocksPositioning = ref([]);\n' +
        '\n' +
        '  var getValueByCtx = function getValueByCtx(x, multiplier) {\n' +
        '    if (multiplier === void 0) {\n' +
        '      multiplier = 1;\n' +
        '    }\n' +
        '\n' +
        '    var res = getFormulaValue(x, blocksPositioning, option.setting);\n' +
        '\n' +
        '    if (isFormulaValue(x)) {\n' +
        '      return res;\n' +
        '    }\n' +
        '\n' +
        '    return ref(res.value * multiplier);\n' +
        '  };\n' +
        '\n' +
        '  blocksPositioning.value = blocks.map(function (block) {\n' +
        '    var blockStyle = style[block.id];\n' +
        '\n' +
        '    if (!isContainerBlock(block)) {\n' +
        '      if (isLineBlockElement(block)) {\n' +
        '        return lineBlockPosition(blocksPositioning, block, option.setting, blockStyle);\n' +
        '      }\n' +
        '\n' +
        '      return null;\n' +
        '    }\n' +
        '\n' +
        '    if (blockStyle.position) {\n' +
        '      var _getValueByCtx, _getValueByCtx2;\n' +
        '\n' +
        '      var pos = blockStyle.position;\n' +
        '      var indentX = (_getValueByCtx = getValueByCtx(pos.indentX)) != null ? _getValueByCtx : 0;\n' +
        '      var indentY = (_getValueByCtx2 = getValueByCtx(pos.indentY)) != null ? _getValueByCtx2 : 0;\n' +
        '      return {\n' +
        '        blockId: block.id,\n' +
        '        position: {\n' +
        '          x: computed(function () {\n' +
        '            return getValueByCtx(pos.x, gridSize.columnWidth).value + indentX.value;\n' +
        '          }),\n' +
        '          y: computed(function () {\n' +
        '            return getValueByCtx(pos.y, gridSize.rowHeight).value + indentY.value;\n' +
        '          }),\n' +
        '          width: computed(function () {\n' +
        '            return getValueByCtx(pos.w, gridSize.columnWidth).value + indentX.value;\n' +
        '          }),\n' +
        '          height: computed(function () {\n' +
        '            return getValueByCtx(pos.h, gridSize.rowHeight).value + indentY.value;\n' +
        '          })\n' +
        '        }\n' +
        '      };\n' +
        '    }\n' +
        '\n' +
        '    return null;\n' +
        '  }).filter(isNotNullOrUndefined);\n' +
        '  return blocksPositioning.value;\n' +
        '}\n' +
        '\n' +
        'function prepareCss(architectureDescription) {\n' +
        '  var _architectureDescript, _architectureDescript2;\n' +
        '\n' +
        '  return (_architectureDescript = architectureDescription.style) != null && _architectureDescript.css ? serialize(compile("#" + architectureDescription.name + " {" + ((_architectureDescript2 = architectureDescription.style) == null ? void 0 : _architectureDescript2.css) + "}"), stringify) : undefined;\n' +
        '}\n' +
        '\n' +
        'function styleDescriptionToArchitectureStyle(architectureDescription, blocks, setting) {\n' +
        '  var _architectureDescript, _architectureDescript2;\n' +
        '\n' +
        '  var positioningSystem = (_architectureDescript = architectureDescription.style) == null ? void 0 : _architectureDescript.positioning;\n' +
        '  var css = prepareCss(architectureDescription);\n' +
        '  return {\n' +
        '    id: "style",\n' +
        '    positioning: !positioningSystem || positioningSystem === PositioningSystem.Auto ? autoPositioning({\n' +
        '      architectureDescription: architectureDescription,\n' +
        '      blocks: blocks,\n' +
        '      setting: setting\n' +
        '    }) : gridPositioning({\n' +
        '      architectureDescription: architectureDescription,\n' +
        '      blocks: blocks,\n' +
        '      setting: setting\n' +
        '    }),\n' +
        '    debug: deepCopy((_architectureDescript2 = architectureDescription.style) == null ? void 0 : _architectureDescript2.debug),\n' +
        '    css: css,\n' +
        '    blocks: architectureDescription.style ? generateBlocksStyle(architectureDescription.style) : undefined\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function generateBlocksStyle(style) {\n' +
        '  return style.blocks;\n' +
        '}\n' +
        '\n' +
        'function deepAssign() {\n' +
        '  var isObject = function isObject(obj) {\n' +
        "    return obj && typeof obj === 'object';\n" +
        '  };\n' +
        '\n' +
        '  function deepMergeInner(target, source) {\n' +
        '    Object.keys(source).forEach(function (key) {\n' +
        '      var targetValue = target[key];\n' +
        '      var sourceValue = source[key];\n' +
        '\n' +
        '      if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n' +
        '        target[key] = targetValue.concat(sourceValue);\n' +
        '      } else if (isObject(targetValue) && isObject(sourceValue)) {\n' +
        '        target[key] = deepMergeInner(Object.assign({}, targetValue), sourceValue);\n' +
        '      } else {\n' +
        '        target[key] = sourceValue;\n' +
        '      }\n' +
        '    });\n' +
        '    return target;\n' +
        '  }\n' +
        '\n' +
        '  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n' +
        '    objects[_key] = arguments[_key];\n' +
        '  }\n' +
        '\n' +
        '  if (objects.length < 2) {\n' +
        "    throw new Error('deepMerge: this function expects at least 2 objects to be provided');\n" +
        '  }\n' +
        '\n' +
        '  if (objects.some(function (object) {\n' +
        '    return !isObject(object);\n' +
        '  })) {\n' +
        `    throw new Error('deepMerge: all values should be of type "object"');\n` +
        '  }\n' +
        '\n' +
        '  var target = objects.shift();\n' +
        '  var source;\n' +
        '\n' +
        '  while (source = objects.shift()) {\n' +
        '    deepMergeInner(target, source);\n' +
        '  }\n' +
        '\n' +
        '  return target;\n' +
        '}\n' +
        '\n' +
        'function addHighlightActionExecutor(context, action) {\n' +
        '  var _val$gap;\n' +
        '\n' +
        '  if (!context) {\n' +
        '    return null;\n' +
        '  }\n' +
        '\n' +
        '  var val = action.value;\n' +
        '  var blocks = typeof val.blocks === "string" ? [val.blocks] : val.blocks;\n' +
        '  var gap = (_val$gap = val.gap) != null ? _val$gap : 5;\n' +
        '  return blocks.flatMap(function (block) {\n' +
        '    return [{\n' +
        '      type: ChangeType.ChangeStyle,\n' +
        '      setting: {\n' +
        '        blockId: "highlight_" + block,\n' +
        '        newStyle: {\n' +
        '          position: {\n' +
        '            x: block + ".x - " + gap,\n' +
        '            y: block + ".y - " + gap,\n' +
        '            w: block + ".width + " + gap * 2,\n' +
        '            h: block + ".height + " + gap * 2\n' +
        '          },\n' +
        '          isHighlight: true\n' +
        '        }\n' +
        '      }\n' +
        '    }, {\n' +
        '      type: ChangeType.AddNewBlock,\n' +
        '      setting: {\n' +
        '        newBlockId: "highlight_" + block,\n' +
        '        blockSettings: {\n' +
        '          type: BlockElementType.Rect,\n' +
        '          label: ""\n' +
        '        }\n' +
        '      }\n' +
        '    }];\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function addNewBlockActionExecutor(context, action) {\n' +
        '  if (!context) {\n' +
        '    return null;\n' +
        '  }\n' +
        '\n' +
        '  var val = action.value;\n' +
        '  return Object.keys(val).map(function (key) {\n' +
        '    return {\n' +
        '      type: ChangeType.AddNewBlock,\n' +
        '      setting: {\n' +
        '        newBlockId: key,\n' +
        '        blockSettings: val[key]\n' +
        '      }\n' +
        '    };\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function changeBlockPositionActionExecutor(context, action) {\n' +
        '  if (!context) {\n' +
        '    return null;\n' +
        '  }\n' +
        '\n' +
        '  var val = action.value;\n' +
        '  return Object.keys(val).map(function (key) {\n' +
        '    return {\n' +
        '      type: ChangeType.ChangeStyle,\n' +
        '      setting: {\n' +
        '        blockId: key,\n' +
        '        newStyle: {\n' +
        '          position: val[key]\n' +
        '        }\n' +
        '      }\n' +
        '    };\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function changeLabelActionExecutor(context, action) {\n' +
        '  if (!context) {\n' +
        '    return null;\n' +
        '  }\n' +
        '\n' +
        '  var val = action.value;\n' +
        '  return Object.keys(val).map(function (key) {\n' +
        '    var v = val[key];\n' +
        '    return {\n' +
        '      type: ChangeType.ChangeStyle,\n' +
        '      setting: {\n' +
        '        blockId: key,\n' +
        '        newStyle: {\n' +
        '          label: isHasLabel(v) ? v.label : v\n' +
        '        }\n' +
        '      }\n' +
        '    };\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'function connectActionExecutor(context, action) {\n' +
        '  if (isConnectActionSetting(action.value)) {\n' +
        '    var _action$value$name, _action$value$label;\n' +
        '\n' +
        '    var newBlockId = (_action$value$name = action.value.name) != null ? _action$value$name : "line_" + context.indexItem.phaseId;\n' +
        '    return [{\n' +
        '      type: ChangeType.AddNewBlock,\n' +
        '      setting: {\n' +
        '        newBlockId: newBlockId,\n' +
        '        blockSettings: _extends({}, action.value, {\n' +
        '          type: BlockElementType.Line,\n' +
        '          label: (_action$value$label = action.value.label) != null ? _action$value$label : newBlockId\n' +
        '        })\n' +
        '      }\n' +
        '    }];\n' +
        '  }\n' +
        '\n' +
        '  return null;\n' +
        '}\n' +
        '\n' +
        'function removeHighlightActionExecutor(context, _) {\n' +
        '  var _context$architecture;\n' +
        '\n' +
        '  var blocks = ((_context$architecture = context.architecture.style) == null ? void 0 : _context$architecture.blocks) || {};\n' +
        '  return [{\n' +
        '    type: ChangeType.RemoveBlock,\n' +
        '    setting: {\n' +
        '      blocks: Object.keys(blocks).filter(function (x) {\n' +
        '        return blocks[x].isHighlight;\n' +
        '      })\n' +
        '    }\n' +
        '  }];\n' +
        '}\n' +
        '\n' +
        'function startPhases(architecture, phaseIndex, phaseInfo) {\n' +
        '  var indexItems = phaseIndex.getPhaseById(phaseInfo.current);\n' +
        '\n' +
        '  if (indexItems) {\n' +
        '    return indexItems.map(function (indexItem) {\n' +
        '      var actionContext = {\n' +
        '        indexItem: indexItem,\n' +
        '        architecture: architecture,\n' +
        '        phaseIndex: phaseIndex\n' +
        '      };\n' +
        '      var changes = indexItem.actions.flatMap(function (item) {\n' +
        '        return executePhaseIndex(item, actionContext);\n' +
        '      });\n' +
        '      changes.filter(isNotNullOrUndefined).forEach(function (change) {\n' +
        '        return makeChange(architecture, change);\n' +
        '      });\n' +
        '      return indexItem.nextPhaseId;\n' +
        '    })[0];\n' +
        '  }\n' +
        '\n' +
        '  return null;\n' +
        '}\n' +
        '\n' +
        'function executePhaseIndex(item, context) {\n' +
        '  if (item.action.name === ActionType.Connect) {\n' +
        '    return connectActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.AddNewBlock) {\n' +
        '    return addNewBlockActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.ChangePosition) {\n' +
        '    return changeBlockPositionActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.ChangeLabel) {\n' +
        '    return changeLabelActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.Highlight) {\n' +
        '    return addHighlightActionExecutor(context, item.action);\n' +
        '  } else if (item.action.name === ActionType.RemoveHighlight) {\n' +
        '    return removeHighlightActionExecutor(context);\n' +
        '  }\n' +
        '\n' +
        '  throw "Not implemented!";\n' +
        '}\n' +
        '\n' +
        'function makeChange(architecture, change) {\n' +
        '  if (change.type === ChangeType.AddNewBlock) {\n' +
        '    var setting = change.setting;\n' +
        '\n' +
        '    if (setting) {\n' +
        '      architecture.blocks[setting.newBlockId] = setting.blockSettings;\n' +
        '    }\n' +
        '  } else if (change.type === ChangeType.ChangeStyle) {\n' +
        '    var _architecture$style;\n' +
        '\n' +
        '    var _setting = change.setting;\n' +
        '\n' +
        '    if (_setting && (_architecture$style = architecture.style) != null && _architecture$style.blocks) {\n' +
        '      var _architecture$style2, _architecture$style2$;\n' +
        '\n' +
        '      var currentSetting = (_architecture$style2 = architecture.style) == null ? void 0 : (_architecture$style2$ = _architecture$style2.blocks) == null ? void 0 : _architecture$style2$[_setting.blockId];\n' +
        '\n' +
        '      if (currentSetting) {\n' +
        '        architecture.style.blocks[_setting.blockId] = deepAssign({}, currentSetting, _setting.newStyle);\n' +
        '      } else {\n' +
        '        architecture.style.blocks[_setting.blockId] = deepAssign({}, _setting.newStyle);\n' +
        '      }\n' +
        '    }\n' +
        '  } else if (change.type === ChangeType.RemoveBlock) {\n' +
        '    var _setting2 = change.setting;\n' +
        '\n' +
        '    _setting2.blocks.forEach(function (x) {\n' +
        '      var _architecture$style3, _architecture$style3$;\n' +
        '\n' +
        '      delete architecture.blocks[x];\n' +
        '      (_architecture$style3 = architecture.style) == null ? true : (_architecture$style3$ = _architecture$style3.blocks) == null ? true : delete _architecture$style3$[x];\n' +
        '    });\n' +
        '  } else {\n' +
        '    throw new Error("Function not implemented.");\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'function buildPhasesIndex(phases) {\n' +
        '  var index = buildIndexObject(phases);\n' +
        '  return {\n' +
        '    getPhaseById: function getPhaseById(id) {\n' +
        '      if (!id) {\n' +
        '        return index.filter(function (x) {\n' +
        '          return x.isStart;\n' +
        '        });\n' +
        '      }\n' +
        '\n' +
        '      var ids = [];\n' +
        '\n' +
        '      if (Array.isArray(id)) {\n' +
        '        ids = id.filter(isNotNullOrUndefined);\n' +
        '      } else {\n' +
        '        ids = [id];\n' +
        '      }\n' +
        '\n' +
        '      return index.filter(function (x) {\n' +
        '        return x.phaseId && ids.indexOf(x.phaseId) > -1;\n' +
        '      });\n' +
        '    },\n' +
        '    phases: index.map(function (x) {\n' +
        '      return x.phaseId;\n' +
        '    }),\n' +
        '    getPhaseIndex: function getPhaseIndex(phase) {\n' +
        '      return index.findIndex(function (x) {\n' +
        '        return x.phaseId === phase;\n' +
        '      });\n' +
        '    }\n' +
        '  };\n' +
        '}\n' +
        '\n' +
        'function buildIndexObject(phase, isStart, id) {\n' +
        '  if (isStart === void 0) {\n' +
        '    isStart = true;\n' +
        '  }\n' +
        '\n' +
        '  if (id === void 0) {\n' +
        '    id = "start";\n' +
        '  }\n' +
        '\n' +
        '  if (!phase) {\n' +
        '    return [];\n' +
        '  }\n' +
        '\n' +
        '  if (isPhaseAction(phase)) {\n' +
        '    var actions = Object.keys(phase).flatMap(function (key) {\n' +
        '      var action = phase[key];\n' +
        '      var actions = [];\n' +
        '\n' +
        '      if (!Array.isArray(action)) {\n' +
        '        actions = [action];\n' +
        '      } else {\n' +
        '        actions = action;\n' +
        '      }\n' +
        '\n' +
        '      return actions.map(function (y) {\n' +
        '        return {\n' +
        '          action: {\n' +
        '            name: key,\n' +
        '            value: y\n' +
        '          }\n' +
        '        };\n' +
        '      });\n' +
        '    });\n' +
        '    return [{\n' +
        '      isStart: isStart,\n' +
        '      nextPhaseId: null,\n' +
        '      phaseId: "" + id,\n' +
        '      actions: actions\n' +
        '    }];\n' +
        '  } else if (isParallelPhase(phase)) {\n' +
        '    var items = Object.keys(phase).flatMap(function (x) {\n' +
        '      var val = phase[x];\n' +
        '      return buildIndexObject(val, isStart, id + "_" + x);\n' +
        '    });\n' +
        '    return items;\n' +
        '  } else if (isGraduallyPhases(phase)) {\n' +
        '    var childId = id + "_child";\n' +
        '\n' +
        '    var _items = phase.map(function (x, index) {\n' +
        '      return buildIndexObject(x, isStart && index === 0, childId);\n' +
        '    });\n' +
        '\n' +
        '    _items.forEach(function (group, index) {\n' +
        '      group.forEach(function (groupItem) {\n' +
        '        if (groupItem.phaseId === childId) {\n' +
        '          groupItem.phaseId += "_" + index;\n' +
        '\n' +
        '          if (index + 1 < _items.length) {\n' +
        '            groupItem.nextPhaseId = childId + "_" + (index + 1);\n' +
        '          }\n' +
        '        }\n' +
        '      });\n' +
        '    });\n' +
        '\n' +
        '    return _items.flatMap(function (x) {\n' +
        '      return x;\n' +
        '    });\n' +
        '  }\n' +
        '\n' +
        '  throw "Not implemented!";\n' +
        '}\n' +
        '\n' +
        'function transformToArchitecture(description, setting) {\n' +
        '  var refDescription = isRef(description) ? description : ref(description);\n' +
        '  var value = refDescription.value;\n' +
        '  var transitionalArchitectureRef = ref(deepCopy(value));\n' +
        '  var transitionalArchitecture = transitionalArchitectureRef.value;\n' +
        '  transitionalArchitecture.blocks = {\n' +
        '    main: transitionalArchitecture.blocks\n' +
        '  };\n' +
        '  var architecture = computed(function () {\n' +
        '    if (isArchitectureDescription(transitionalArchitectureRef.value)) {\n' +
        '      return transformDescriptionToArchitecture(transitionalArchitectureRef, setting);\n' +
        '    }\n' +
        '\n' +
        '    return {\n' +
        '      name: "",\n' +
        '      blocks: ref([]),\n' +
        '      style: ref(null),\n' +
        '      phases: [],\n' +
        '      currentPhase: null,\n' +
        '      next: function next() {\n' +
        '        return null;\n' +
        '      },\n' +
        '      back: function back() {\n' +
        '        return null;\n' +
        '      },\n' +
        '      toPhase: function toPhase() {}\n' +
        '    };\n' +
        '  });\n' +
        '  return architecture;\n' +
        '}\n' +
        'function transformDescriptionToArchitecture(transitionalArchitectureRef, setting) {\n' +
        '  var oldValues = [];\n' +
        '  var enableWatcher = true;\n' +
        '  var currentPhase = reactive({\n' +
        '    current: null\n' +
        '  });\n' +
        '  watch(function () {\n' +
        '    return deepCopy(transitionalArchitectureRef.value);\n' +
        '  }, function (_, oldVal) {\n' +
        '    if (enableWatcher) {\n' +
        '      oldValues.push({\n' +
        '        arch: oldVal,\n' +
        '        phaseId: currentPhase.current\n' +
        '      });\n' +
        '    }\n' +
        '  });\n' +
        '  var blocks = computed(function () {\n' +
        '    return BlockGroupDescriptionsToBlock(transitionalArchitectureRef.value);\n' +
        '  });\n' +
        '  var phaseIndex = buildPhasesIndex(transitionalArchitectureRef.value.phases);\n' +
        '\n' +
        '  var next = function next() {\n' +
        '    enableWatcher = true;\n' +
        '    var nextPhaseId = startPhases(transitionalArchitectureRef.value, phaseIndex, currentPhase);\n' +
        '    currentPhase.current = nextPhaseId;\n' +
        '    return nextPhaseId;\n' +
        '  };\n' +
        '\n' +
        '  var back = function back() {\n' +
        '    var _val2;\n' +
        '\n' +
        '    var val = oldValues.pop();\n' +
        '\n' +
        '    while (oldValues.length > 0 && oldValues[oldValues.length - 1].phaseId == ((_val = val) == null ? void 0 : _val.phaseId)) {\n' +
        '      var _val;\n' +
        '\n' +
        '      val = oldValues.pop();\n' +
        '    }\n' +
        '\n' +
        '    if (val) {\n' +
        '      enableWatcher = false;\n' +
        '      transitionalArchitectureRef.value = val.arch;\n' +
        '      currentPhase.current = val.phaseId;\n' +
        '    }\n' +
        '\n' +
        '    return (_val2 = val) == null ? void 0 : _val2.phaseId;\n' +
        '  };\n' +
        '\n' +
        '  return {\n' +
        '    name: transitionalArchitectureRef.value.name,\n' +
        '    blocks: blocks,\n' +
        '    style: computed(function () {\n' +
        '      return styleDescriptionToArchitectureStyle(transitionalArchitectureRef.value, blocks.value, setting);\n' +
        '    }),\n' +
        '    next: next,\n' +
        '    back: back,\n' +
        '    toPhase: function toPhase(phaseId) {\n' +
        '      var phaseInd = phaseIndex.getPhaseIndex(phaseId);\n' +
        '      var currentPhaseInd = phaseIndex.getPhaseIndex(currentPhase.current);\n' +
        '      var walkerFn = phaseInd > currentPhaseInd ? next : back;\n' +
        '      var curPhaseId = null;\n' +
        '\n' +
        '      do {\n' +
        '        curPhaseId = walkerFn();\n' +
        '      } while (!!curPhaseId && curPhaseId.length > 0 && curPhaseId.indexOf(phaseId) === -1);\n' +
        '    },\n' +
        '    phases: phaseIndex.phases,\n' +
        '    currentPhase: computed(function () {\n' +
        '      return currentPhase.current;\n' +
        '    })\n' +
        '  };\n' +
        '}\n' +
        'function BlockGroupDescriptionsToBlock(description) {\n' +
        '  return blockGroupDescriptionsToBlock(description);\n' +
        '}\n' +
        '\n' +
        'var sum = function sum(a, b) {\n' +
        '  return a + b;\n' +
        '};\n' +
        '\n' +
        'export { ActionType, BlockElementType, ChangeType, PositioningSystem, autoPositioning, isActionSetting, isAddNewBlockActionSetting, isArchitectureDescription, isArray, isBlockElementDescription, isConnectActionSetting, isContainerBlock, isFormulaValue, isGraduallyPhases, isHasLabel, isLineBlockElement, isLineBlockElementDescription, isNotNullOrUndefined, isNullOrUndefined, isParallelPhase, isParentBlockElement, isPhaseAction, isRectPositioning, isString, startPhases, sum, transformDescriptionToArchitecture, transformToArchitecture };\n' +
        '//# sourceMappingURL=core.esm.js.map\n',
      deoptimizationTracker: [PathTracker],
      error: [Function: bound error],
      fileName: '/home/alex/RiderProjects/Coya/Coya/libraries/core/dist/core.esm.js',
      getExports: [Function: bound getExports],
      getModuleExecIndex: [Function: getModuleExecIndex],
      getModuleName: [Function: bound basename],
      getReexports: [Function: bound getReexports],
      importDescriptions: [Object: null prototype],
      includeAllExports: [Function: includeAllExports],
      includeDynamicImport: [Function: bound includeDynamicImport],
      includeVariableInModule: [Function: bound includeVariableInModule],
      magicString: MagicString {},
      module: [Circular *1],
      moduleContext: 'undefined',
      nodeConstructors: [Object],
      options: [Object],
      requestTreeshakingPass: [Function: requestTreeshakingPass],
      traceExport: [Function: bound getVariableForExportName],
      traceVariable: [Function: bound traceVariable],
      usesTopLevelAwait: false,
      warn: [Function: bound warn]
    },
    module: [Circular *1],
    syntheticNamedExports: false
  }
}
[AsyncFunction: resolveId] @vue/reactivity
[AsyncFunction: resolveId] stylis
[AsyncFunction: resolveId] @vue-reactivity/watch
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaLineNode.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaImageNode.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaSvgNode.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaSvgTagNode.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Nodes/CoyaRectNode.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Color/ColorPickerButton.vue?vue&type=script&setup=true&lang.ts
[AsyncFunction: resolveId] /home/alex/RiderProjects/Coya/Coya/libraries/vue-component/src/components/Color/ColorPickerButton.vue?vue&type=style&index=0&lang.css
[AsyncFunction: resolveId] @drauu/core
[AsyncFunction: resolveId] ./src/Enum.js
[AsyncFunction: resolveId] ./src/Utility.js
[AsyncFunction: resolveId] ./src/Parser.js
[AsyncFunction: resolveId] ./src/Prefixer.js
[AsyncFunction: resolveId] ./src/Tokenizer.js
[AsyncFunction: resolveId] ./src/Serializer.js
[AsyncFunction: resolveId] ./src/Middleware.js
[AsyncFunction: resolveId] @vue/shared
[AsyncFunction: resolveId] @vue/reactivity
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] /src/components/CoyaNode.vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] /src/assets/gear.svg
[AsyncFunction: resolveId] @vue/shared
[AsyncFunction: resolveId] @vue/reactivity
[AsyncFunction: resolveId] @vue/shared
[AsyncFunction: resolveId] ./Enum.js
[AsyncFunction: resolveId] ./Utility.js
[AsyncFunction: resolveId] ./Tokenizer.js
[AsyncFunction: resolveId] ./Enum.js
[AsyncFunction: resolveId] ./Utility.js
[AsyncFunction: resolveId] ./Utility.js
[AsyncFunction: resolveId] ./Enum.js
[AsyncFunction: resolveId] ./Utility.js
[AsyncFunction: resolveId] ./Enum.js
[AsyncFunction: resolveId] ./Utility.js
[AsyncFunction: resolveId] ./Tokenizer.js
[AsyncFunction: resolveId] ./Serializer.js
[AsyncFunction: resolveId] ./Prefixer.js
[AsyncFunction: resolveId] perfect-freehand
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] gsap
[AsyncFunction: resolveId] gsap/DrawSVGPlugin
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] gsap
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] gsap
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] gsap
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] gsap
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] vue-color-kit
[AsyncFunction: resolveId] vue-color-kit/dist/vue-color-kit.css
[AsyncFunction: resolveId] virtual:vite-icons/ic/twotone-border-color
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] ./gsap-core.js
[AsyncFunction: resolveId] ./CSSPlugin.js
[AsyncFunction: resolveId] vue
[AsyncFunction: resolveId] ./gsap-core.js
✓ 124 modules transformed.
rendering chunks...
dist/assets/rectangle.f2681f93.svg   1.12 KiB
dist/assets/gear.646c017b.svg        2.47 KiB
dist/index.html                      0.90 KiB
dist/assets/[...all].e422d8f6.js     0.14 KiB / brotli: 0.11 KiB
dist/assets/[name].e425383c.js       1.25 KiB / brotli: 0.66 KiB
dist/assets/index.922f5615.css       14.27 KiB / brotli: 3.04 KiB
dist/assets/index.260a6183.js        104.51 KiB / brotli: 29.07 KiB
dist/assets/vendor.999d1019.js       188.19 KiB / brotli: 61.72 KiB
